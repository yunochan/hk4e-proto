// CmdId: 6325
message AAEIMMOLJAF {
    uint64 ugc_guid = 14;
    UgcType ugc_type = 7;
}

message AbilityActionBlink {
    Vector pos = 8;
    Vector rot = 4;
}

message AbilityActionCreateGadget {
    Vector rot = 9;
    Vector pos = 6;
    uint32 room_id = 5;
}

message AbilityActionCreateTile {
    Vector rot = 1;
    Vector pos = 4;
}

message AbilityActionDeductStamina {
    bool is_swim = 1;
}

message AbilityActionDestroyTile {
    Vector rot = 1;
    Vector pos = 3;
}

message AbilityActionFireAfterImgae {
    Vector dir = 8;
}

message AbilityActionGenerateElemBall {
    uint32 room_id = 2;
    Vector rot = 9;
    Vector pos = 14;
}

message AbilityActionHitEffect {
    uint32 trigger_id = 2;
}

message AbilityActionServerMonsterLog {
    repeated int32 param_list = 5;
}

message AbilityActionSetBulletTrackTarget {
    uint32 chased_entity_id = 4;
    uint32 lock_point_index = 1;
}

message AbilityActionSetCrashDamage {
    Vector hit_pos = 10;
    float damage = 14;
}

message AbilityActionSetRandomOverrideMapValue {
  float random_value = 9;
}

message AbilityActionSummon {
    Vector pos = 1; // ok
    Vector rot = 5; // ok
}

message AbilityActionTriggerAbility {
    uint32 other_id = 1;
}

message AbilityAppliedAbility {
    AbilityString ability_name = 1;
    AbilityString ability_override = 2;
    repeated AbilityScalarValueEntry override_map = 3;
    uint32 instanced_ability_id = 4;
}

message AbilityAppliedModifier {
    int32 modifier_local_id = 1;
    uint32 parent_ability_entity_id = 2;
    AbilityString parent_ability_name = 3;
    AbilityString parent_ability_override = 4;
    uint32 instanced_ability_id = 5;
    uint32 instanced_modifier_id = 6;
    float exist_duration = 7;
    AbilityAttachedModifier attached_instanced_modifier = 8;
    uint32 apply_entity_id = 9;
    bool is_attached_parent_ability = 10;
    ModifierDurability modifier_durability = 11;
    uint32 sbuff_uid = 12;
    bool is_serverbuff_modifier = 13;
}

message AbilityApplyLevelModifier {
    uint32 apply_entity_id = 4;
}

message AbilityAttachedModifier {
    bool is_invalid = 1;
    uint32 owner_entity_id = 2;
    uint32 instanced_modifier_id = 3;
    bool is_serverbuff_modifier = 4;
    int32 attach_name_hash = 5;
}

message AbilityBornType {
    Vector move_dir = 11;
    Vector pos = 7;
    Vector rot = 10;
}

// CmdId: 1159
message AbilityChangeNotify {
    uint32 entity_id = 11;
    AbilityControlBlock ability_control_block = 15;
}

message AbilityControlBlock {
    repeated AbilityEmbryo ability_embryo_list = 1;
}

message AbilityEmbryo {
    uint32 ability_id = 1;
    fixed32 ability_name_hash = 2;
    fixed32 ability_override_name_hash = 3;
}

message AbilityFireworkBornType {
    uint32 effect_index = 15;
    Vector move_dir = 13;
    Vector rot = 3;
    Vector pos = 12;
}

message AbilityFloatValue {
    float value = 15;
}

message AbilityGadgetInfo {
    uint32 camp_id = 1;
    uint32 camp_target_type = 2;
    uint32 target_entity_id = 3;
}

message AbilityIdentifier {
    uint32 instanced_ability_id = 6;
    int32 local_id = 14;
    uint32 modifier_owner_id = 15;
    uint32 instanced_modifier_id = 7;
    bool is_serverbuff_modifier = 5;
    uint32 ability_caster_id = 11;
}

// CmdId: 1116
message AbilityInvocationFailNotify {
    string reason = 7;
    uint32 entity_id = 9;
    AbilityInvokeEntry invoke = 12;
}

// CmdId: 1190
message AbilityInvocationFixedNotify {
    AbilityInvokeEntry BKDHNIKAFLH = 9;
    AbilityInvokeEntry KHPMEKFDAAE = 12;
    AbilityInvokeEntry KMHDFNIJGJK = 11;
    AbilityInvokeEntry LGEKDIMGJEP = 3;
    AbilityInvokeEntry DAAJIPDGECA = 4;
    AbilityInvokeEntry MBCMPLKDGJK = 7;
}

// CmdId: 1196
message AbilityInvocationsNotify {
    repeated AbilityInvokeEntry invokes = 15;
}

message AbilityInvokeEntry {
    uint32 forward_peer = 1;
    AbilityInvokeEntryHead head = 13;
    AbilityInvokeArgument argument_type = 12;
    double total_tick_time = 10;
    uint32 event_id = 2;
    ForwardType forward_type = 14;
    uint32 entity_id = 9;
    bytes ability_data = 6;
    bool is_ignore_auth = 4;
}

message AbilityInvokeEntryHead {
    uint32 server_buff_uid = 10;
    int32 local_id = 1;
    bool is_serverbuff_modifier = 3;
    uint32 instanced_modifier_id = 11;
    uint32 target_id = 4;
    uint32 instanced_ability_id = 6;
    int32 modifier_config_local_id = 12;
}

message AbilityMetaAddAbility {
    AbilityAppliedAbility ability = 1;
}

// 3.2

message AbilityMetaAddOrGetAbilityAndTrigger {
  AbilityString ability_name = 13;
  float trigger_argument = 3;
  AbilityString ability_override = 8;
}

message AbilityMetaDurabilityIsZero {
     bool is_zero = 4;
}

//3.2

message AbilityMetaElementReactionVisual {
  int32 hit_index = 2;
  uint32 element_source_type = 12;
  uint32 element_reactor_type = 6;
  uint32 element_reaction_type = 5;
}

message AbilityMetaLoseHp {
    uint32 lose_hp_config_idx = 2;
}

message AbilityMetaModifierChange {
    uint32 server_buff_uid = 13;
    bool JAODDPOBICJ = 4;
    repeated ModifierProperty properties = 11;
    int32 modifier_local_id = 5;
    AbilityString parent_ability_override = 6;
    bool KJPKHNFAEDC = 14;
    bool is_attached_parent_ability = 1;
    AbilityAttachedModifier attached_instanced_modifier = 12;
    ModifierAction action = 3;
    uint32 apply_entity_id = 8;
    AbilityString parent_ability_name = 15;
}

message AbilityMetaModifierDurabilityChange {
  float remain_durability = 14;
  float reduce_durability = 7;
}

message AbilityMetaReInitOverrideMap {
    repeated AbilityScalarValueEntry override_map = 5;
}

//3.2

message AbilityMetaSetAbilityTrigger {
  uint32 trigger_ability_entity_id = 11;
}

message AbilityMetaSetKilledState {
  bool killed = 1;
}

message AbilityMetaSetModifierApplyEntityId {
  uint32 apply_entity_id = 6;
}

message AbilityMetaSetPoseParameter {
    AnimatorParameterValueInfoPair value = 2;
}

//3.2

message AbilityMetaSpecialFloatArgument {
  float argument_value = 14;
  bool is_on = 10;
}

message AbilityMetaTriggerElementReaction {
    uint32 JNBEDFOKMPM = 9;
    int32 hit_index = 6;
    uint32 element_reaction_type = 3;
    uint32 trigger_entity_id = 4;
    uint32 GFAPKLBLADP = 15;
}

message AbilityMetaUpdateBaseReactionDamage {
    AbilityString ability_name = 14;
    uint32 source_caster_id = 8;
    uint32 reaction_type = 12;
    AbilityString global_value_key = 6;
}

message AbilityMixinAvatarCombat {
    bool is_enter_combat = 4;
}

message AbilityMixinAvatarSteerByCamera {
  Vector target_pos = 10;
  Vector target_dir = 14; // HKBOHPAPLMF
}

message AbilityMixinBreakout {
    enum SyncType {

        SYNC_TYPE_NONE = 0;
        SYNC_TYPE_CREATE_CONNECT = 1;
        SYNC_TYPE_START_GAME = 2;
        SYNC_TYPE_PING = 3;
        SYNC_TYPE_FINISH_GAME = 4;
        SYNC_TYPE_SNAP_SHOT = 5;
        SYNC_TYPE_ACTION = 6;
    }
    int32 retcode = 13;
    SyncType sync_type = 7;
    oneof sync {
        BreakoutSyncCreateConnect sync_create_connect = 3;
        BreakoutSyncPing sync_ping = 6;
        BreakoutSyncFinishGame sync_finish_game = 1;
        BreakoutSyncSnapShot sync_snap_shot = 9;
        BreakoutSyncAction sync_action = 2;
    }
}

message AbilityMixinCostStamina {
  bool is_swim = 7;
}

//3.2
message AbilityMixinDoActionByElementReaction {
  uint32 target_entity_id = 1;
}

message AbilityMixinDoActionBySelfModifierElementDurabilityRatio {
    float last_duability_ratio = 2;
}

message AbilityMixinElementShield {
  float shield = 2;
  float max_shield = 3;
  bool is_shield_broken = 5;
  float sub_shield = 6;
  uint32 player_num = 7;
  uint32 absorb_type = 11;
}

message AbilityMixinEliteShield {
    float sub_shield = 13;
}

message AbilityMixinEraseBrickActivity {
    repeated uint32 data = 5;
}

message AbilityMixinFieldEntityCountChange {
  uint32 field_entity_count = 4;
}

message AbilityMixinFireworksLauncher {
    uint32 IAPDLOALCDH = 5;
    repeated uint32 fireworks_config = 9; // BOOENGOOJGN
    uint32 KLPIHHBCMBP = 13;
    uint32 BNFLIGNODHB = 8;
    uint32 DCFMMEHPHOG = 1;
    uint32 phase = 11;
}

message AbilityMixinGlobalShield {
    float height_offset = 4;
    string shield_effect_name = 5;
    uint32 avatar_id = 15;
    bool is_create_effect = 3;
    float max_shield = 1;
    float sub_shield = 2;
}

message AbilityMixinRecoverInfo {
    uint32 local_id = 3;
    repeated uint32 data_list = 4;
    bool is_serverbuff_modifier = 5;
    repeated MassivePropSyncInfo massive_prop_list = 6;
    BreakoutSnapShot breakout_snap_shot = 7;
    oneof Source {
        uint32 instanced_ability_id = 1;
        uint32 instanced_modifier_id = 2;
    }
}

message AbilityMixinScenePropSync {
    repeated int64 delete_id_list = 15;
    repeated MassivePropSyncInfo massive_prop_list = 3;
    bool is_clear_all = 8;
}

message AbilityMixinShieldBar {
  float shield = 8;
  float max_shield = 13;
  uint32 element_type = 1;
  uint32 player_num = 5;
}

message AbilityMixinShootFromCamera {
    Vector forward = 10;
    Vector init_pos = 3;
}

message AbilityMixinUGCTimeControl {
    uint32 start_move_time = 6;
    uint64 start_move_time_ms = 9;
}

message AbilityMixinUIInteract {
}

//3.2

message AbilityMixinWidgetMpSupport {
  uint32 target_entity_id = 9;
}

message AbilityMixinWindSeedSpawner {
    message AddSignal {
    }
    message RefreshSeed {
        repeated Vector pos_list = 8;
    }
    message CatchSeed {
        uint32 entity_id = 14;
    }
    oneof cmd {
        AddSignal add_signal = 6;
        RefreshSeed refresh_seed = 1;
        CatchSeed catch_seed = 4;
    }
}

message AbilityMixinWindZone {
    repeated uint32 zone_id_list = 12;
    repeated uint32 entity_ids = 13;
}

message AbilityScalarValueEntry {
    AbilityString key = 1;
    AbilityScalarType value_type = 2;
    oneof value {
        float float_value = 3;
        string string_value = 4;
        int32 int_value = 5;
        uint32 uint_value = 6;
    }
}

message AbilityString {
    oneof type {
        string str = 1;
        uint32 hash = 2;
    }
}

message AbilitySyncStateInfo {
    bool is_inited = 1;
    repeated AbilityScalarValueEntry dynamic_value_map = 2;
    repeated AbilityAppliedAbility applied_abilities = 3;
    repeated AbilityAppliedModifier applied_modifiers = 4;
    repeated AbilityMixinRecoverInfo mixin_recover_infos = 5;
    repeated AbilityScalarValueEntry sgv_dynamic_value_map = 6;
}

message ABJDNCBDEKI {
    repeated JAAACKLMLHI level_info_list = 1;
}

// CmdId: 2872
message AcceptCityReputationRequestReq {
    uint32 city_id = 15;
    uint32 request_id = 5;
}

// CmdId: 2892
message AcceptCityReputationRequestRsp {
    uint32 request_id = 11;
    uint32 city_id = 8;
    int32 retcode = 14;
}

// CmdId: 21598
message ACEPHCGAPCJ {
    int32 retcode = 2;
}

message Achievement {
    enum Status {

        INVALID = 0;
        UNFINISHED = 1;
        FINISHED = 2;
        REWARD_TAKEN = 3;
    }
    uint32 total_progress = 4;
    uint32 finish_timestamp = 9;
    Status status = 2;
    uint32 id = 10;
    uint32 cur_progress = 3;
}

// CmdId: 2659
message AchievementAllDataNotify {
    repeated Achievement achievement_list = 11;
    repeated uint32 reward_taken_goal_id_list = 2;
}

// CmdId: 2666
message AchievementUpdateNotify {
    repeated Achievement achievement_list = 12;
}

// CmdId: 8590
message ActivityAcceptAllGiveGiftReq {
    uint32 schedule_id = 13;
}

// CmdId: 8004
message ActivityAcceptAllGiveGiftRsp {
    uint32 schedule_id = 6;
    repeated ActivityAcceptGiftResultInfo accept_gift_result_info_list = 1;
    int32 retcode = 9;
}

message ActivityAcceptGiftResultInfo {
    uint32 uid = 3;
    map<uint32, uint32> JNGGEBKNEHK = 9;
    map<uint32, uint32> DDINPEKGFPL = 10;
}

// CmdId: 8091
message ActivityAcceptGiveGiftReq {
    uint32 schedule_id = 1;
    uint32 uid = 11;
}

// CmdId: 8244
message ActivityAcceptGiveGiftRsp {
    int32 retcode = 2;
    ActivityAcceptGiftResultInfo accept_gift_result_info = 7;
    uint32 schedule_id = 13;
}

// CmdId: 2053
message ActivityBannerClearReq {
    uint32 activity_id = 13;
    uint32 schedule_id = 8;
}

// CmdId: 2116
message ActivityBannerClearRsp {
    int32 retcode = 4;
    uint32 activity_id = 11;
    uint32 schedule_id = 3;
}

// CmdId: 2160
message ActivityBannerNotify {
    uint32 schedule_id = 13;
    uint32 activity_id = 7;
}

// CmdId: 2189
message ActivityCoinInfoNotify {
    uint32 activity_id = 1;
    map<uint32, uint32> activity_coin_map = 14;
    uint32 schedule_id = 2;
}

// CmdId: 2134
message ActivityCondStateChangeNotify {
    repeated uint32 CGFKLALMOLH = 11;
    repeated uint32 IMFFKIMJDJH = 2;
    repeated uint32 activated_sale_id_list = 6;
    repeated Uint32Pair disable_transfer_point_interaction_list = 7;
    uint32 schedule_id = 9;
    uint32 activity_id = 3;
}

// CmdId: 8741
message ActivityDisableTransferPointInteractionNotify {
    bool is_disable = 6;
    Uint32Pair scene_point_pair = 2;
}

message ActivityDungeonAvatar {
    uint32 avatar_id = 1;
    bool is_trial = 2;
    uint32 costume_id = 3;
}

message ActivityFriendGiftWishData {
    ProfilePicture profile_picture = 2;
    uint32 uid = 11;
    map<uint32, uint32> gift_num_map = 12;
    string remark_name = 7;
    string nickname = 6;
}

// CmdId: 8594
message ActivityGetCanGiveFriendGiftReq {
    uint32 schedule_id = 3;
}

// CmdId: 8939
message ActivityGetCanGiveFriendGiftRsp {
    uint32 schedule_id = 2;
    int32 retcode = 14;
    map<uint32, uint32> gift_num_map = 10;
}

// CmdId: 8391
message ActivityGetFriendGiftWishListReq {
    uint32 schedule_id = 5;
}

// CmdId: 8073
message ActivityGetFriendGiftWishListRsp {
    int32 retcode = 9;
    repeated ActivityFriendGiftWishData friend_gift_wish_list = 3;
    uint32 schedule_id = 8;
}

// CmdId: 8977
message ActivityGetRecvGiftListReq {
    uint32 schedule_id = 8;
}

// CmdId: 8806
message ActivityGetRecvGiftListRsp {
    int32 retcode = 1;
    repeated ActivityRecvGiftData recv_gift_list = 4;
    uint32 schedule_id = 13;
}

// CmdId: 8811
message ActivityGiveFriendGiftReq {
    map<uint32, uint32> gift_num_map = 5;
    uint32 schedule_id = 14;
    uint32 uid = 13;
}

// CmdId: 8158
message ActivityGiveFriendGiftRsp {
    int32 retcode = 12;
    uint32 schedule_id = 10;
    repeated uint32 limit_gift_list = 7;
}

// CmdId: 8615
message ActivityHaveRecvGiftNotify {
    uint32 schedule_id = 6;
}

message ActivityInfo {
    repeated uint32 IMFFKIMJDJH = 13;
    uint32 OIBEDADECFB = 238;
    uint32 end_time = 10;
    uint32 activity_id = 1;
    repeated ActivityPushTipsData activity_push_tips_data_list = 1986;
    bool DCENNBKGOAH = 1227;
    repeated uint32 CGFKLALMOLH = 5;
    uint32 schedule_id = 2;
    bool DNKBDEJAOMC = 6;
    bool MPCDIKMJOAC = 2041;
    uint32 cur_score = 882;
    uint32 OIPEAKGOPDE = 11;
    bool GODELKHIPDE = 3;
    bool DLNNGPNHBFB = 1789;
    uint32 first_day_start_time = 617;
    uint32 begin_time = 15;
    uint32 JAFIBAJIAFF = 540;
    bool is_finished = 12;
    bool DMCFNBNECAN = 202;
    repeated ActivityWatcherInfo watcher_info_list = 4;
    oneof detail {
        SeaLampActivityDetailInfo sam_lamp_info = 9;
        CrucibleActivityDetailInfo crucible_info = 14;
        SalesmanActivityDetailInfo salesman_info = 8;
        TrialAvatarActivityDetailInfo trial_avatar_info = 7;
        DeliveryActivityDetailInfo delivery_info = 1232;
        AsterActivityDetailInfo aster_info = 1467;
        FlightActivityDetailInfo flight_info = 809;
        DragonSpineActivityDetailInfo dragon_spine_info = 1319;
        EffigyActivityDetailInfo effigy_info = 1037;
        TreasureMapActivityDetailInfo treasure_map_info = 1091;
        BlessingActivityDetailInfo blessing_info = 100;
        SeaLampActivityInfo sea_lamp_info = 251;
        ExpeditionActivityDetailInfo expedition_info = 1668;
        ArenaChallengeActivityDetailInfo arena_challenge_info = 399;
        FleurFairActivityDetailInfo fleur_fair_info = 27;
        WaterSpiritActivityDetailInfo water_spirit_info = 199;
        ChannelerSlabActivityDetailInfo challneler_slab_info = 1068;
        MistTrialActivityDetailInfo mist_trial_activity_info = 707;
        HideAndSeekActivityDetailInfo hide_and_seek_info = 263;
        FindHilichurlDetailInfo find_hilichurl_info = 1180;
        SummerTimeDetailInfo summer_time_info = 1927;
        BuoyantCombatDetailInfo buoyant_combat_info = 627;
        EchoShellDetailInfo echo_shell_info = 47;
        BounceConjuringActivityDetailInfo bounce_conjuring_info = 884;
        BlitzRushActivityDetailInfo blitz_rush_info = 1844;
        ChessActivityDetailInfo chess_info = 412;
        SumoActivityDetailInfo sumo_info = 243;
        MoonfinTrialActivityDetailInfo moonfin_trial_info = 1573;
        LunaRiteDetailInfo luna_rite_info = 1461;
        PlantFlowerActivityDetailInfo plant_flower_info = 1551;
        MusicGameActivityDetailInfo music_game_info = 1643;
        RoguelikeDungeonActivityDetailInfo roguelike_dungoen_info = 18;
        DigActivityDetailInfo dig_info = 1376;
        HachiActivityDetailInfo hachi_info = 107;
        WinterCampActivityDetailInfo winter_camp_info = 1170;
        PotionActivityDetailInfo potion_info = 1931;
        TanukiTravelActivityDetailInfo tanuki_travel_activity_info = 1565;
        LanternRiteActivityDetailInfo lantern_rite_activity_info = 969;
        MichiaeMatsuriActivityDetailInfo michiae_matsuri_info = 1333;
        BartenderActivityDetailInfo bartender_info = 1328;
        UgcActivityDetailInfo ugc_info = 597;
        CrystalLinkActivityDetailInfo crystal_link_info = 368;
        IrodoriActivityDetailInfo irodori_info = 1277;
        PhotoActivityDetailInfo photo_info = 62;
        SpiceActivityDetailInfo spice_info = 1027;
        GachaActivityDetailInfo gacha_info = 1940;
        LuminanceStoneChallengeActivityDetailInfo luminance_stone_challenge_info = 374;
        RogueDiaryActivityDetailInfo rogue_diary_info = 925;
        SummerTimeV2DetailInfo summer_time_v2_info = 1860;
        IslandPartyDetailInfo island_party_info = 1050;
        GearActivityDetailInfo gear_info = 644;
        GravenInnocenceDetailInfo graven_innocence_info = 1362;
        InstableSprayDetailInfo instable_spray_info = 474;
        MuqadasPotionActivityDetailInfo muqadas_potion_info = 1656;
        TreasureSeelieActivityDetailInfo treasure_seelie_info = 1213;
        RockBoardExploreDetailInfo rock_board_explore_info = 694;
        VintageActivityDetailInfo vintage_info = 237;
        WindFieldDetailInfo wind_field_info = 997;
        FungusFighterDetailInfo fungus_fighter_info = 1287;
        CharAmusementDetailInfo char_amusement_info = 1858;
        EffigyChallengeV2DetailInfo effigy_challenge_info = 32;
        CoinCollectDetailInfo coin_collect_info = 85;
        BrickBreakerDetailInfo brick_breaker_info = 1306;
        DuelHeartDetailInfo duel_heart_info = 313;
        SeaLampV3DetailInfo sea_lamp_v3_info = 912;
        TeamChainDetailInfo team_chain_info = 276;
        ElectroherculesBattleDetailInfo electrohercules_battle_info = 343;
        GCGFestivalDetailInfo gcg_festival_info = 1544;
        FleurFairV2DetailInfo fleur_fair_v2_info = 2008;
        FungusFighterV2DetailInfo fungus_fighter_v2_info = 1085;
        AkaFesDetailInfo aka_fes_info = 2020;
        SandwormCannonDetailInfo sandworm_cannon_detail_info = 385;
        SorushTrialDetailInfo sorush_trial_info = 1352;
    }
}

// CmdId: 2186
message ActivityInfoNotify {
    ActivityInfo activity_info = 12;
}

// CmdId: 2172
message ActivityPlayOpenAnimNotify {
    uint32 activity_id = 12;
}

message ActivityPushTipsData {
    uint32 activity_push_tips_id = 8;
    ActivityPushTipsState state = 6;
}

// CmdId: 8802
message ActivityPushTipsInfoNotify {
    uint32 activity_id = 7;
    repeated ActivityPushTipsData activity_push_tips_data_list = 5;
    uint32 schedule_id = 4;
}

// CmdId: 8141
message ActivityReadPushTipsReq {
    repeated uint32 activity_push_tips_id_list = 13;
    uint32 activity_id = 3;
}

// CmdId: 8697
message ActivityReadPushTipsRsp {
    int32 retcode = 7;
}

message ActivityRecvGiftData {
    ProfilePicture profile_picture = 4;
    uint32 uid = 10;
    string remark_name = 1;
    map<uint32, uint32> gift_num_map = 2;
    string nickname = 14;
}

// CmdId: 2174
message ActivitySaleChangeNotify {
    bool is_close = 9;
    uint32 sale_id = 3;
}

message ActivityScheduleInfo {
    uint32 begin_time = 2;
    uint32 activity_id = 7;
    uint32 end_time = 11;
    uint32 schedule_id = 4;
    bool is_open = 6;
}

// CmdId: 2020
message ActivityScheduleInfoNotify {
    uint32 remain_fly_sea_lamp_num = 7;
    repeated ActivityScheduleInfo activity_schedule_list = 3;
}

// CmdId: 2112
message ActivitySelectAvatarCardReq {
    uint32 activity_id = 13;
    uint32 reward_id = 4;
}

// CmdId: 2177
message ActivitySelectAvatarCardRsp {
    uint32 activity_id = 15;
    int32 retcode = 8;
    uint32 reward_id = 6;
}

// CmdId: 8921
message ActivitySetGiftWishReq {
    uint32 schedule_id = 1;
    map<uint32, uint32> gift_num_map = 5;
}

// CmdId: 8429
message ActivitySetGiftWishRsp {
    int32 retcode = 11;
    uint32 schedule_id = 7;
}

message ActivityShopSheetInfo {
    uint32 end_time = 10;
    uint32 sheet_id = 3;
    uint32 begin_time = 8;
}

// CmdId: 8889
message ActivityTakeAllScoreRewardReq {
    uint32 activity_id = 14;
}

// CmdId: 8410
message ActivityTakeAllScoreRewardRsp {
    int32 retcode = 13;
    uint32 activity_id = 6;
    repeated uint32 reward_config_list = 8;
}

// CmdId: 8201
message ActivityTakeScoreRewardReq {
    uint32 reward_config_id = 10;
    uint32 activity_id = 3;
}

// CmdId: 8835
message ActivityTakeScoreRewardRsp {
    uint32 activity_id = 1;
    int32 retcode = 12;
    uint32 reward_config_id = 7;
}

// CmdId: 2110
message ActivityTakeWatcherRewardBatchReq {
    repeated uint32 watcher_id_list = 1;
    uint32 activity_id = 2;
}

// CmdId: 2132
message ActivityTakeWatcherRewardBatchRsp {
    int32 retcode = 7;
    repeated ItemParam item_list = 8;
    uint32 activity_id = 3;
    repeated uint32 watcher_id_list = 6;
}

// CmdId: 2192
message ActivityTakeWatcherRewardReq {
    uint32 watcher_id = 8;
    uint32 activity_id = 9;
}

// CmdId: 2122
message ActivityTakeWatcherRewardRsp {
    int32 retcode = 9;
    uint32 activity_id = 7;
    uint32 watcher_id = 10;
}

// CmdId: 2108
message ActivityUpdateWatcherNotify {
    ActivityWatcherInfo watcher_info = 7;
    uint32 activity_id = 11;
}

message ActivityWatcherInfo {
    uint32 watcher_id = 14;
    bool is_taken_reward = 4;
    uint32 total_progress = 15;
    uint32 cur_progress = 10;
}

// CmdId: 6366
message AddAranaraCollectionNotify {
    uint32 collection_type = 2;
    AranaraCollectionState IJBFIKCDABD = 10;
    AranaraCollectionState CIEAPDGLPOL = 4;
    uint32 collection_id = 3;
}

// CmdId: 1670
message AddBackupAvatarTeamReq {
}

// CmdId: 1658
message AddBackupAvatarTeamRsp {
    int32 retcode = 6;
}

// CmdId: 4048
message AddBlacklistReq {
    uint32 target_uid = 7;
}

// CmdId: 4098
message AddBlacklistRsp {
    FriendBrief target_friend_brief = 14;
    int32 retcode = 7;
}

// CmdId: 4077
message AddFriendNotify {
    uint32 target_uid = 13;
    FriendBrief target_friend_brief = 6;
}

// CmdId: 1764
message AddNoGachaAvatarCardNotify {
    uint32 reason = 15;
    repeated AddNoGachaAvatarCardTransferItem transfer_item_list = 12;
    uint32 JDADDHJIBLE = 5;
    uint32 item_id = 2;
    uint32 avatar_id = 4;
    uint32 DJLDIADKNCF = 14;
    bool is_transfer_to_item = 3;
}

message AddNoGachaAvatarCardTransferItem {
    uint32 count = 1;
    bool is_new = 15;
    uint32 item_id = 5;
}

// CmdId: 456
message AddQuestContentProgressReq {
    uint32 add_progress = 10;
    uint32 param = 3;
    uint32 content_type = 9;
}

// CmdId: 441
message AddQuestContentProgressRsp {
    uint32 content_type = 7;
    int32 retcode = 2;
}

// CmdId: 145
message AddRandTaskInfoNotify {
    Vector pos = 14;
    uint32 rand_task_id = 2;
}

// CmdId: 202
message AddSeenMonsterNotify {
    repeated uint32 monster_id_list = 2;
}

message AdjustTrackingInfo {
    string MPAIFPMBIHP = 14;
    string PPNIOHNCLMI = 9;
    string OFJCBCLDMGC = 15;
    string FNHDMMNNDOH = 11;
    string BJNLPFHJNMB = 12;
    string ENHBOKJDKDD = 2;
}

// CmdId: 138
message AdjustWorldLevelReq {
    uint32 LJJOOOBJAKM = 13;
    uint32 GEIJKDPEJKG = 15;
}

// CmdId: 160
message AdjustWorldLevelRsp {
    int32 retcode = 13;
    uint32 after_world_level = 15;
    uint32 cd_over_time = 14;
}

// CmdId: 4517
message ADMHOKGPIHC {
    enum MAHLBDMPLJA {

        MAHLBDMPLJA_PLAYER_JUDGE = 0;
        MAHLBDMPLJA_PLAYER_ENTER_OPTION_REFUSE = 1;
        MAHLBDMPLJA_PLAYER_ENTER_OPTION_DIRECT = 2;
        MAHLBDMPLJA_SYSTEM_JUDGE = 3;
        MAHLBDMPLJA_HOST_IN_MATCH = 4;
        MAHLBDMPLJA_PS_PLAYER_NOT_ACCEPT_OTHERS = 5;
        MAHLBDMPLJA_OPEN_STATE_NOT_OPEN = 6;
        MAHLBDMPLJA_HOST_IN_EDIT_MODE = 7;
        MAHLBDMPLJA_PRIOR_CHECK = 8;
        MAHLBDMPLJA_PLAYER_OFFLINE = 9;
    }
    string target_nickname = 7;
    bool is_agreed = 5;
    MAHLBDMPLJA reason = 6;
    uint32 target_uid = 11;
}

// CmdId: 7031
message AFPBCMBHGNC {
    int32 retcode = 8;
    bool FJOJGDKMFDG = 10;
    uint32 id = 7;
}

message AHHLIGPKLDL {
    float NFODLGCLNPJ = 1;
    float FOMFKNOIEHD = 13;
    uint32 BFGLGNNIHEC = 4;
    float MGDCCBBHFOL = 15;
    uint32 FDKBBDNOIMN = 9;
    bool OBKBPAOJJBG = 12;
}

// CmdId: 5069
message AICCFCMGNBG {
    MAGCLOOBFPI BIIMLLPCMIE = 7;
}

message AiSkillCdInfo {
    map<uint32, uint32> skill_cd_map = 15;
    map<uint32, uint32> skill_group_cd_map = 2;
}

message AISnapshotEntityData {
    uint32 DNOPLJCEPEK = 12;
    float FIGCHBCEBLM = 10;
    uint32 BOCPCJNJFLL = 1;
    map<uint32, uint32> hitting_avatars = 7;
    uint32 LLDLIEFOODH = 9;
    float AKBGKFBHPEO = 5;
    uint32 entity_id = 15;
    float EHCPFCIGKMJ = 11;
    uint32 GBCJLKBJCBO = 3;
    repeated AISnapshotEntitySkillCycle finished_skill_cycles = 2;
    uint32 attack_target_id = 6;
    float HLLKKIIENIK = 4;
}

message AISnapshotEntitySkillCycle {
    uint32 skill_id = 9;
    bool PAOPNMDAOBE = 6;
    bool KKOCGOBEJOI = 5;
    bool OEPHKNKELCI = 3;
    bool DMJJMKFEDGE = 14;
}

message AISnapshotInfo {
    repeated AISnapshotEntityData ai_snapshots = 6; // AGINKGKAOKH
}

message AiSyncInfo {
    bool has_path_to_target = 12;
    uint32 entity_id = 4;
    bool is_self_killing = 8;
}

message AiThreatInfo {
    map<uint32, uint32> ai_threat_map = 3;
}

// CmdId: 6343
message AJFBMFBKOIG {
    int32 retcode = 7;
    UgcType ugc_type = 12;
    uint64 ugc_guid = 13;
}

// CmdId: 24951
message AJFDAKKHGKO {
    int32 retcode = 1;
}

message AkaFesDetailInfo {
    BEAMFIKPMLE PKMBJHHFJDE = 1;
    JNMLLBGCBOB PEDJMDFFCDA = 7;
    AKFPAANICKG APNDPJFFEGL = 5;
    ABJDNCBDEKI ONJNLIGNPIC = 15;
    PIHDFMDILLF HGEMLFAGBEL = 8;
    JILBANAJEEF potion_info = 13;
}

// CmdId: 4809
message AKEHHECCPOO {
    string share_code = 4;
}

message AKFPAANICKG {
    repeated DKFDACEPNAL level_info_list = 3;
}

// CmdId: 22017
message AKIFJCCDNEM {
    uint32 cost = 2;
    bool is_new_record = 1;
    uint32 level_id = 6;
    uint32 NCGGLBKNEJD = 13;
    uint32 BFCNINBLMEJ = 14;
}

message AKPPCGEACLE {
    fixed64 time_stamp = 6;
    fixed64 begin_time = 5;
    uint32 controller_id = 11;
}

// CmdId: 1959
message AllCoopInfoNotify {
    repeated MainCoop main_coop_list = 2;
}

// CmdId: 3363
message AllMarkPointNotify {
    repeated MapMarkPoint mark_list = 10;
}

// CmdId: 211
message AllSeenMonsterNotify {
    repeated uint32 monster_id_list = 12;
}

// CmdId: 9090
message AllShareCDDataNotify {
    map<uint32, ShareCDInfo> share_cd_info_map = 15;
}

// CmdId: 6008
message AllWidgetBackgroundActiveStateNotify {
    repeated uint32 background_active_widget_list = 5;
}

// CmdId: 4263
message AllWidgetDataNotify {
    LunchBoxData lunch_box_data = 3;
    WeatherWizardData weather_wizard_data = 9;
    repeated OneoffGatherPointDetectorData oneoff_gather_point_detector_data_list = 12;
    HOKJIFJPJLB HPHEBMLGPIH = 5;
    repeated WidgetSlotData slot_list = 6;
    repeated ClientCollectorData client_collector_data_list = 2;
    SkyCrystalDetectorData sky_crystal_detector_data = 8;
    repeated uint32 background_active_widget_list = 1;
    repeated WidgetCoolDownData FDPCHELILNI = 15;
    repeated WidgetCoolDownData PDHMECJOMAB = 13;
    repeated AnchorPointData anchor_point_list = 11;
    uint32 next_anchor_point_usable_time = 7;
}

// CmdId: 23014
message AMFIEDJGLPA {
    int32 retcode = 3;
}

// CmdId: 2909
message AMPEPAJDMFH {
    uint32 offering_id = 11;
    uint32 group_id = 9;
    uint32 config_id = 3;
}

message ANAPBNFGFEN {
    float ABCOOEOHDFM = 9;
    string PMCAJBKAGMP = 10;
    uint32 avatar_id = 15;
    bool PONEAMFFEEF = 13;
    float FOMFKNOIEHD = 12;
    float NFODLGCLNPJ = 7;
}

message AnchorPointData {
    Vector rot = 1;
    uint32 anchor_point_id = 9;
    uint32 end_time = 10;
    Vector pos = 2;
    uint32 scene_id = 15;
}

// CmdId: 4259
message AnchorPointDataNotify {
    repeated AnchorPointData anchor_point_list = 11;
    uint32 next_usable_time = 1;
}

// CmdId: 4299
message AnchorPointOpReq {
    uint32 anchor_point_op_type = 7;
    uint32 anchor_point_id = 3;
}

// CmdId: 4265
message AnchorPointOpRsp {
    int32 retcode = 8;
    uint32 anchor_point_id = 14;
    uint32 anchor_point_op_type = 5;
}

// CmdId: 306
message AnimatorForceSetAirMoveNotify {
    ForwardType forward_type = 2;
    bool in_air_move = 11;
    uint32 entity_id = 6;
}

message AnimatorParameterValueInfo {
    uint32 para_type = 1;
    oneof paraVal {
        int32 int_val = 2;
        float float_val = 3;
        bool bool_val = 4;
    }
}

message AnimatorParameterValueInfoPair {
    int32 name_id = 1;
    AnimatorParameterValueInfo animator_para = 2;
}

// CmdId: 24529
message ANLPPAMFPKC {
    uint32 level_id = 4;
    uint32 CDGBFFCINOP = 14;
}

message AnnounceData {
    string MLDDOLJCDAM = 9;
    bool is_center_system_last_5_every_minutes = 2;
    string HEAKAFCFBHM = 10;
    uint32 OMEJDCDMJKH = 12;
    uint32 config_id = 13;
    string DLKKCKHJJAC = 5;
    uint32 begin_time = 14;
    uint32 GBNNHNDNCPP = 15;
    uint32 end_time = 3;
}

// CmdId: 193
message AntiAddictNotify {
    string level = 1;
    int32 msg_type = 5;
    string msg = 12;
}

// CmdId: 968
message AOEICADFFIJ {
    repeated PlatformType CHOPMGJFOKD = 4;
    repeated uint32 monster_id_list = 11;
}

// CmdId: 4489
message APAEMKIJPBM {
    uint32 apply_uid = 1;
    bool is_agreed = 7;
    int32 retcode = 12;
}

// CmdId: 6359
message AranaraCollectionDataNotify {
    repeated AranaraCollectionSuite collection_suite_list = 10;
}

message AranaraCollectionSuite {
    map<uint32, AranaraCollectionState> collection_id_state_map = 6;
    uint32 collection_type = 15;
}

// CmdId: 3327
message AreaPlayInfoNotify {
    AreaPlayType area_play_type = 6;
    uint32 detail_play_type = 4;
}

message ArenaChallengeActivityDetailInfo {
    bool is_finish_any_level = 5;
    repeated ArenaChallengeMonsterLevel level_list = 11;
    map<uint32, uint32> level_open_time_map = 14;
    uint32 world_level = 15;
}

message ArenaChallengeChildChallengeInfo {
    bool is_settled = 3;
    bool is_success = 13;
    uint32 challenge_id = 12;
    uint32 challenge_index = 4;
    uint32 challenge_type = 11;
}

// CmdId: 2006
message ArenaChallengeFinishNotify {
    bool is_success = 5;
    repeated ArenaChallengeChildChallengeInfo child_challenge_list = 6;
    uint32 GELFIDPMHLJ = 15;
    uint32 FCLFLMPGIKN = 2;
}

message ArenaChallengeMonsterLevel {
    uint32 FCLFLMPGIKN = 4;
    uint32 GELFIDPMHLJ = 9;
}

// CmdId: 4086
message AskAddFriendNotify {
    uint32 target_uid = 7;
    FriendBrief target_friend_brief = 13;
}

// CmdId: 4016
message AskAddFriendReq {
    uint32 target_uid = 7;
}

// CmdId: 4056
message AskAddFriendRsp {
    uint32 target_uid = 3;
    int32 retcode = 13;
    uint32 param = 15;
}

// CmdId: 464
message AssociateInferenceWordReq {
    uint32 BHNIGBDOGPG = 2;
    uint32 page_id = 13;
    uint32 FDBFNNDGPBB = 4;
}

// CmdId: 500
message AssociateInferenceWordRsp {
    int32 retcode = 3;
    uint32 BHNIGBDOGPG = 10;
    uint32 FDBFNNDGPBB = 1;
    uint32 page_id = 2;
}

message AsterActivityDetailInfo {
    uint32 content_close_time = 13;
    AsterProgressDetailInfo aster_progress = 1;
    AsterLittleDetailInfo aster_little = 12;
    AsterMidDetailInfo aster_mid = 4;
    bool is_special_reward_taken = 8;
    AsterLargeDetailInfo aster_large = 3;
    bool is_content_closed = 14;
    uint32 MFJDILDLMGP = 11;
    uint32 HNJDOJKGDOP = 5;
}

message AsterLargeDetailInfo {
    bool is_open = 6;
    uint32 begin_time = 12;
}

// CmdId: 2030
message AsterLargeInfoNotify {
    AsterLargeDetailInfo info = 1;
}

message AsterLittleDetailInfo {
    bool is_open = 2;
    uint32 stage_id = 13;
    uint32 stage_begin_time = 6;
    AsterLittleStageState stage_state = 10;
    uint32 begin_time = 12;
}

// CmdId: 2161
message AsterLittleInfoNotify {
    AsterLittleDetailInfo info = 11;
}

message AsterMidCampInfo {
    uint32 camp_id = 15;
    Vector pos = 7;
}

// CmdId: 2081
message AsterMidCampInfoNotify {
    repeated AsterMidCampInfo camp_list = 7;
}

message AsterMidDetailInfo {
    uint32 collect_count = 9;
    uint32 begin_time = 4;
    bool is_open = 2;
    repeated AsterMidCampInfo camp_list = 12;
}

// CmdId: 2158
message AsterMidInfoNotify {
    AsterMidDetailInfo info = 5;
}

// CmdId: 2188
message AsterMiscInfoNotify {
    uint32 HNJDOJKGDOP = 6;
    uint32 MFJDILDLMGP = 13;
}

message AsterProgressDetailInfo {
    uint32 last_auto_add_time = 9;
    uint32 count = 6;
}

// CmdId: 2082
message AsterProgressInfoNotify {
    AsterProgressDetailInfo info = 15;
}

message AttackHitEffectResult {
    uint32 FAAKOHDGPFM = 13;
    uint32 FMEGOOPBEJB = 11;
    float OIJINAAFNAC = 9;
    float JHNFFJDKJJJ = 2;
    float GMFMEIEIEPB = 3;
    float JOOLHFLPAOE = 10;
}

message AttackResult {
    uint32 IJIGBCCJJGJ = 573;
    float KJKJMFMCDMN = 378;
    uint32 attacker_id = 10;
    bool DGDADCNJKEG = 581;
    uint32 defense_id = 15;
    float PCFPGMKFHCL = 644;
    uint32 KIBMNMFJBJG = 13;
    HitCollision hit_collision = 6;
    int32 hit_retreat_angle_compat = 1;
    uint32 LKNDFCAIKNC = 296;
    string anim_event_id = 12;
    Vector resolved_dir = 3;
    bool CBECHFPCNFM = 1542;
    uint32 AOKJNHANEON = 1647;
    float element_durability_attenuation = 310;
    uint32 amplify_reaction_type = 679;
    bool BLKGGPMOEMA = 580;
    uint32 JLDHPNKIBEN = 1557;
    bool is_crit = 11;
    uint32 attack_count = 1749;
    uint32 element_type = 9;
    float element_amplify_rate = 770;
    uint32 HOGDLBMOJDA = 1442;
    uint32 JFBKJAKIHFN = 675;
    float damage = 2;
    AttackHitEffectResult hit_eff_result = 7;
    uint32 BJCEANCHCPO = 898;
    uint32 KLPMHHIMCBC = 399;
    AbilityIdentifier ability_identifier = 14;
    uint32 IIMFELDOOJE = 4;
}

message AttackResultCreateCount {
    repeated uint32 create_count_no_cost_list = 7;
    repeated uint32 create_count_list = 9;
}

message AuthorityChange {
    uint32 entity_id = 13;
    uint32 authority_peer_id = 9;
    EntityAuthorityInfo entity_authority_info = 4;
}

// CmdId: 1688
message AvatarAddNotify {
    bool is_in_team = 14;
    AvatarInfo avatar = 5;
}

// CmdId: 348
message AvatarBuffAddNotify {
    uint64 avatar_guid = 15;
    uint32 buff_id = 12;
}

// CmdId: 398
message AvatarBuffDelNotify {
    uint32 buff_id = 12;
    uint64 avatar_guid = 9;
}

// CmdId: 648
message AvatarCardChangeReq {
    uint32 count = 11;
    uint64 avatar_guid = 9;
    uint32 item_id = 6;
}

// CmdId: 698
message AvatarCardChangeRsp {
    int32 retcode = 10;
}

// CmdId: 1602
message AvatarChangeAnimHashReq {
    uint64 avatar_guid = 11;
    uint32 anim_hash = 15;
}

// CmdId: 1728
message AvatarChangeAnimHashRsp {
    int32 retcode = 10;
    uint64 avatar_guid = 9;
    uint32 anim_hash = 13;
}

// CmdId: 1703
message AvatarChangeCostumeNotify {
    SceneEntityInfo entity_info = 13;
}

// CmdId: 1663
message AvatarChangeCostumeReq {
    uint32 costume_id = 12;
    uint64 avatar_guid = 10;
}

// CmdId: 1601
message AvatarChangeCostumeRsp {
    int32 retcode = 8;
    uint32 costume_id = 13;
    uint64 avatar_guid = 11;
}

// CmdId: 1717
message AvatarChangeElementTypeReq {
    uint32 scene_id = 13;
    uint32 area_id = 6;
}

// CmdId: 1634
message AvatarChangeElementTypeRsp {
    int32 retcode = 15;
}

// CmdId: 1778
message AvatarDataNotify {
    repeated uint32 owned_flycloak_list = 3;
    uint64 choose_avatar_guid = 8;
    repeated uint32 backup_avatar_team_order_list = 15;
    repeated uint64 temp_avatar_guid_list = 6;
    repeated AvatarRenameInfo avatar_rename_list = 10;
    map<uint32, AvatarTeam> avatar_team_map = 11;
    uint32 cur_avatar_team_id = 4;
    repeated uint32 owned_costume_list = 12;
    repeated AvatarInfo avatar_list = 1;
}

// CmdId: 1642
message AvatarDelNotify {
    repeated uint64 avatar_guid_list = 14;
}

// CmdId: 1666
message AvatarDieAnimationEndReq {
    uint32 skill_id = 15;
    uint64 die_guid = 3;
    Vector reborn_pos = 11;
}

// CmdId: 1738
message AvatarDieAnimationEndRsp {
    uint32 skill_id = 8;
    int32 retcode = 3;
    uint64 die_guid = 7;
}

// CmdId: 335
message AvatarEnterElementViewNotify {
    bool is_triggerd = 1;
    uint32 avatar_entity_id = 3;
}

message AvatarEnterSceneInfo {
    uint32 weapon_entity_id = 14;
    AbilitySyncStateInfo weapon_ability_info = 2;
    uint64 avatar_guid = 8;
    uint64 weapon_guid = 12;
    uint32 avatar_entity_id = 4;
    repeated ServerBuff server_buff_list = 11;
    AbilitySyncStateInfo avatar_ability_info = 5;
    repeated uint32 buff_id_list = 15;
}

message AvatarEquipAffixInfo {
    uint32 HADFPPBMPBC = 1;
    uint32 HLEKEGIICBH = 2;
}

// CmdId: 1645
message AvatarEquipAffixStartNotify {
    AvatarEquipAffixInfo equip_affix_info = 6;
    uint64 avatar_guid = 7;
}

// CmdId: 682
message AvatarEquipChangeNotify {
    uint64 avatar_guid = 14;
    SceneWeaponInfo weapon = 9;
    SceneReliquaryInfo reliquary = 1;
    uint32 equip_type = 5;
    uint64 equip_guid = 15;
    uint32 item_id = 11;
}

message AvatarExcelInfo {
    uint64 prefab_path_hash = 1;
    uint64 prefab_path_remote_hash = 2;
    uint64 controller_path_hash = 3;
    uint64 controller_path_remote_hash = 4;
    uint64 combat_config_hash = 5;
}

// CmdId: 1690
message AvatarExpeditionAllDataReq {
}

// CmdId: 1683
message AvatarExpeditionAllDataRsp {
    map<uint64, AvatarExpeditionInfo> expedition_info_map = 11;
    uint32 expedition_count_limit = 12;
    repeated uint32 open_expedition_list = 9;
    int32 retcode = 5;
}

// CmdId: 1736
message AvatarExpeditionCallBackReq {
    repeated uint64 avatar_guid = 1;
}

// CmdId: 1672
message AvatarExpeditionCallBackRsp {
    int32 retcode = 11;
    map<uint64, AvatarExpeditionInfo> expedition_info_map = 2;
}

// CmdId: 1775
message AvatarExpeditionDataNotify {
    map<uint64, AvatarExpeditionInfo> expedition_info_map = 8;
}

// CmdId: 1614
message AvatarExpeditionGetRewardReq {
    uint64 avatar_guid = 4;
}

// CmdId: 1623
message AvatarExpeditionGetRewardRsp {
    map<uint64, AvatarExpeditionInfo> expedition_info_map = 5;
    repeated ItemParam item_list = 11;
    repeated ItemParam extra_item_list = 9;
    int32 retcode = 4;
}

message AvatarExpeditionInfo {
    AvatarExpeditionState state = 1;
    uint32 exp_id = 2;
    uint32 hour_time = 3;
    uint32 start_time = 4;
    float shorten_ratio = 5;
}

// CmdId: 1749
message AvatarExpeditionStartReq {
    uint32 exp_id = 7;
    uint32 hour_time = 3;
    uint64 avatar_guid = 12;
}

// CmdId: 1768
message AvatarExpeditionStartRsp {
    map<uint64, AvatarExpeditionInfo> expedition_info_map = 15;
    int32 retcode = 1;
}

// CmdId: 1695
message AvatarFetterDataNotify {
    map<uint64, AvatarFetterInfo> fetter_info_map = 4;
}

message AvatarFetterInfo {
    uint32 exp_number = 1;
    uint32 exp_level = 2;
    repeated uint32 open_id_list = 3;
    repeated uint32 finish_id_list = 4;
    repeated uint32 rewarded_fetter_level_list = 5;
    repeated FetterData fetter_list = 6;
}

// CmdId: 1763
message AvatarFetterLevelRewardReq {
    uint32 fetter_level = 7;
    uint64 avatar_guid = 2;
}

// CmdId: 1721
message AvatarFetterLevelRewardRsp {
    uint32 reward_id = 7;
    int32 retcode = 15;
    uint32 fetter_level = 13;
    uint64 avatar_guid = 3;
}

// CmdId: 1216
message AvatarFightPropNotify {
    map<uint32, float> fight_prop_map = 13;
    uint64 avatar_guid = 8;
}

// CmdId: 1256
message AvatarFightPropUpdateNotify {
    uint64 avatar_guid = 7;
    map<uint32, float> fight_prop_map = 3;
}

// CmdId: 1657
message AvatarFlycloakChangeNotify {
    uint64 avatar_guid = 13;
    uint32 flycloak_id = 15;
}

// CmdId: 3343
message AvatarFollowRouteNotify {
    string client_params = 12;
    uint32 start_scene_time_ms = 3;
    uint32 template_id = 7;
    Route route = 5;
    uint32 entity_id = 4;
}

// CmdId: 1665
message AvatarGainCostumeNotify {
    uint32 costume_id = 12;
}

// CmdId: 1747
message AvatarGainFlycloakNotify {
    uint32 flycloak_id = 11;
}

message AvatarInfo {
    uint32 avatar_id = 1;
    uint64 guid = 2;
    map<uint32, PropValue> prop_map = 3;
    uint32 life_state = 4;
    repeated uint64 equip_guid_list = 5;
    repeated uint32 talent_id_list = 6;
    map<uint32, float> fight_prop_map = 7;
    TrialAvatarInfo trial_avatar_info = 9;
    map<uint32, AvatarSkillInfo> skill_map = 10;
    uint32 skill_depot_id = 11;
    AvatarFetterInfo fetter_info = 12;
    uint32 core_proud_skill_level = 13;
    repeated uint32 inherent_proud_skill_list = 14;
    map<uint32, uint32> skill_level_map = 15;
    AvatarExpeditionState expedition_state = 16;
    map<uint32, uint32> proud_skill_extra_level_map = 17;
    bool is_focus = 18;
    uint32 avatar_type = 19;
    repeated uint32 equip_id_list = 20;
    uint32 wearing_flycloak_id = 21;
    repeated AvatarEquipAffixInfo equip_affix_list = 22;
    uint32 born_time = 23;
    repeated uint32 pending_promote_reward_list = 24;
    uint32 costume_id = 25;
    AvatarExcelInfo excel_info = 26;
    uint32 anim_hash = 27;
    PGHIDDKHGAL NLNIALFHOBH = 28;
}

// CmdId: 1272
message AvatarLifeStateChangeNotify {
    uint32 life_state = 5;
    repeated ServerBuff server_buff_list = 1;
    uint64 avatar_guid = 9;
    uint32 source_entity_id = 10;
    PlayerDieType die_type = 15;
    uint32 move_reliable_seq = 12;
    string attack_tag = 2;
}

// CmdId: 1700
message AvatarPromoteGetRewardReq {
    uint64 avatar_guid = 3;
    uint32 promote_level = 4;
}

// CmdId: 1750
message AvatarPromoteGetRewardRsp {
    int32 retcode = 15;
    uint32 reward_id = 9;
    uint64 avatar_guid = 13;
    uint32 promote_level = 1;
}

// CmdId: 1609
message AvatarPromoteReq {
    uint64 guid = 6;
}

// CmdId: 1640
message AvatarPromoteRsp {
    uint64 guid = 6;
    int32 retcode = 2;
}

// CmdId: 1292
message AvatarPropChangeReasonNotify {
    PropChangeReason reason = 14;
    float cur_value = 7;
    uint64 avatar_guid = 8;
    float old_value = 12;
    uint32 prop_type = 2;
}

// CmdId: 1259
message AvatarPropNotify {
    map<uint32, int64> prop_map = 8;
    uint64 avatar_guid = 13;
}

message AvatarRenameInfo {
    string avatar_name = 14;
    uint32 avatar_id = 5;
}

// CmdId: 1783
message AvatarRenameInfoNotify {
    repeated AvatarRenameInfo avatar_rename_list = 14;
}

message AvatarSatiationData {
    float finish_time = 12;
    float penalty_finish_time = 8;
    uint64 avatar_guid = 5;
}

// CmdId: 1635
message AvatarSatiationDataNotify {
    repeated AvatarSatiationData satiation_data_list = 8;
}

// CmdId: 1065
message AvatarSkillChangeNotify {
    uint32 old_level = 5;
    uint32 entity_id = 10;
    uint32 avatar_skill_id = 7;
    uint64 avatar_guid = 8;
    uint32 cur_level = 13;
    uint32 skill_depot_id = 2;
}

// CmdId: 1076
message AvatarSkillDepotChangeNotify {
    uint64 avatar_guid = 14;
    repeated uint32 talent_id_list = 9;
    repeated uint32 proud_skill_list = 11;
    uint32 core_proud_skill_level = 5;
    map<uint32, uint32> proud_skill_extra_level_map = 1;
    map<uint32, uint32> skill_level_map = 2;
    uint32 skill_depot_id = 6;
    uint32 entity_id = 15;
}

message AvatarSkillInfo {
    uint32 pass_cd_time = 1;
    repeated uint32 full_cd_time_list = 2;
    uint32 max_charge_count = 3;
}

// CmdId: 1072
message AvatarSkillInfoNotify {
    map<uint32, AvatarSkillInfo> skill_map = 1;
    uint64 guid = 12;
}

// CmdId: 1041
message AvatarSkillMaxChargeCountNotify {
    uint32 skill_id = 10;
    uint64 avatar_guid = 15;
    uint32 max_charge_count = 13;
}

// CmdId: 1078
message AvatarSkillUpgradeReq {
    uint64 avatar_guid = 14;
    uint32 avatar_skill_id = 7;
    uint32 old_level = 15;
}

// CmdId: 1012
message AvatarSkillUpgradeRsp {
    uint32 avatar_skill_id = 7;
    uint64 avatar_guid = 13;
    uint32 old_level = 1;
    int32 retcode = 6;
    uint32 cur_level = 11;
}

message AvatarTeam {
    repeated uint64 avatar_guid_list = 15;
    string team_name = 2;
}

// CmdId: 1799
message AvatarTeamAllDataNotify {
    repeated uint32 backup_avatar_team_order_list = 12;
    repeated uint64 temp_avatar_guid_list = 5;
    map<uint32, AvatarTeam> avatar_team_map = 7;
}

message AvatarTeamResonanceInfo {
    repeated uint32 CHDOILLJEEN = 7;
    repeated uint32 PLLHPHJJOKM = 12;
    uint64 avatar_guid = 5;
    uint32 entity_id = 11;
}

// CmdId: 1797
message AvatarTeamUpdateNotify {
    map<uint32, AvatarTeam> avatar_team_map = 7;
    repeated uint64 temp_avatar_guid_list = 9;
}

// CmdId: 1089
message AvatarUnlockTalentNotify {
    uint32 talent_id = 11;
    uint32 skill_depot_id = 9;
    uint32 entity_id = 8;
    uint64 avatar_guid = 7;
}

// CmdId: 1704
message AvatarUpgradeReq {
    uint32 item_id = 6;
    uint32 count = 7;
    uint64 avatar_guid = 14;
}

// CmdId: 1651
message AvatarUpgradeRsp {
    map<uint32, float> old_fight_prop_map = 15;
    uint64 avatar_guid = 2;
    uint32 cur_level = 14;
    int32 retcode = 6;
    uint32 old_level = 1;
    map<uint32, float> cur_fight_prop_map = 10;
}

// CmdId: 1641
message AvatarWearFlycloakReq {
    uint64 avatar_guid = 7;
    uint32 flycloak_id = 10;
}

// CmdId: 1730
message AvatarWearFlycloakRsp {
    int32 retcode = 6;
    uint64 avatar_guid = 4;
    uint32 flycloak_id = 10;
}

// CmdId: 205
message BackMyWorldReq {
}

// CmdId: 209
message BackMyWorldRsp {
    int32 retcode = 2;
}

// CmdId: 6208
message BackPlayCustomDungeonOfficialReq {
    uint32 room_id = 2;
}

// CmdId: 6241
message BackPlayCustomDungeonOfficialRsp {
    int32 retcode = 2;
}

// CmdId: 5539
message BackRebornGalleryReq {
    uint32 gallery_id = 13;
}

// CmdId: 5595
message BackRebornGalleryRsp {
    int32 retcode = 8;
    uint32 gallery_id = 6;
}

// CmdId: 6461
message BACLCEEBIAD {
    uint32 end_time = 10;
}

message BAJDFBJMNBC {
    bool FLKPHNGDIPO = 9;
}

message BalloonGallerySettleInfo {
    uint32 owner_uid = 9;
    GalleryStopReason reason = 3;
    uint32 score = 13;
    uint32 hit_count = 15;
}

message BalloonPlayerInfo {
    uint32 uid = 9;
    uint32 cur_score = 14;
    uint32 combo = 3;
    uint32 combo_disable_time = 5;
}

message BalloonSettleInfo {
    uint32 final_score = 4;
    uint32 uid = 10;
    OnlinePlayerInfo player_info = 13;
    uint32 shoot_count = 2;
    uint32 max_combo = 7;
}

// CmdId: 439
message BargainOfferPriceReq {
    uint32 price = 14;
    uint32 bargain_id = 3;
}

// CmdId: 495
message BargainOfferPriceRsp {
    BargainResultType bargain_result = 2;
    uint32 result_param = 14;
    int32 retcode = 12;
    int32 cur_mood = 7;
}

message BargainSnapshot {
    uint32 FBLDNHGMENF = 7;
    uint32 LJKDGKOHKPG = 15;
    int32 cur_mood = 2;
    uint32 bargain_id = 13;
}

// CmdId: 451
message BargainStartNotify {
    BargainSnapshot snapshot = 8;
    uint32 bargain_id = 5;
}

// CmdId: 450
message BargainTerminateNotify {
    uint32 bargain_id = 13;
}

message BartenderActivityDetailInfo {
    bool is_develop_module_open = 6;
    repeated uint32 EPJAPKIPHKN = 9;
    repeated BartenderLevelInfo unlock_level_list = 8;
    repeated uint32 KELDDECINAF = 5;
    repeated BartenderTaskInfo unlock_task_list = 12;
    bool is_content_closed = 7;
}

// CmdId: 8269
message BartenderCancelLevelReq {
    uint32 level_id = 10;
}

// CmdId: 8536
message BartenderCancelLevelRsp {
    uint32 level_id = 2;
    int32 retcode = 6;
}

// CmdId: 8014
message BartenderCancelOrderReq {
    uint32 quest_id = 8;
}

// CmdId: 8110
message BartenderCancelOrderRsp {
    int32 retcode = 6;
    uint32 quest_id = 1;
}

// CmdId: 8671
message BartenderCompleteOrderReq {
    uint32 MJABGHGABFH = 9;
    uint32 quest_id = 5;
    uint32 HAPFNEIHHPP = 6;
    bool is_view_formula = 14;
    repeated ItemParam item_list = 12;
    repeated uint32 optional_order_list = 7;
    uint32 MOBMFDJLHKD = 11;
}

// CmdId: 8796
message BartenderCompleteOrderRsp {
    uint32 finish_order_id = 13;
    uint32 quest_id = 7;
    int32 retcode = 5;
    uint32 formula_id = 12;
    bool is_new = 10;
    repeated uint32 affix_list = 9;
}

// CmdId: 8145
message BartenderFinishLevelReq {
    uint32 level_id = 11;
}

// CmdId: 8513
message BartenderFinishLevelRsp {
    uint32 level_id = 11;
    int32 retcode = 9;
}

// CmdId: 8525
message BartenderGetFormulaReq {
    uint32 quest_id = 6;
    repeated ItemParam item_list = 10;
}

// CmdId: 8543
message BartenderGetFormulaRsp {
    uint32 formula_id = 5;
    int32 retcode = 11;
    bool is_new = 14;
    repeated uint32 affix_list = 2;
}

message BartenderLevelInfo {
    uint32 id = 8;
    uint32 max_score = 10;
    bool is_finish = 9;
}

// CmdId: 8403
message BartenderLevelProgressNotify {
    uint32 level_id = 10;
    bool is_finish = 5;
    bool is_new_record = 8;
    uint32 score = 14;
}

// CmdId: 8272
message BartenderStartLevelReq {
    uint32 level_id = 9;
}

// CmdId: 8846
message BartenderStartLevelRsp {
    uint32 time = 12;
    int32 retcode = 7;
    uint32 level_id = 13;
    repeated uint32 order_list = 11;
}

message BartenderTaskInfo {
    uint32 id = 14;
    bool is_finish = 10;
}

// CmdId: 792
message BatchBuyGoodsReq {
    uint32 shop_type = 12;
    repeated BuyGoodsParam buy_goods_list = 13;
}

// CmdId: 763
message BatchBuyGoodsRsp {
    int32 retcode = 15;
    repeated ShopGoods goods_list = 5;
    repeated BuyGoodsParam buy_goods_list = 2;
    uint32 shop_type = 11;
}

// CmdId: 2609
message BattlePassAllDataNotify {
    repeated BattlePassMission mission_list = 12;
    BattlePassSchedule cur_schedule = 14;
    bool have_cur_schedule = 11;
}

// CmdId: 2650
message BattlePassBuySuccNotify {
    uint32 KIHLPOPDEHO = 5;
    uint32 CLAPOODOICH = 8;
    uint32 schedule_id = 15;
    repeated ItemParam item_list = 2;
}

// CmdId: 2649
message BattlePassCurScheduleUpdateNotify {
    BattlePassSchedule cur_schedule = 7;
    bool have_cur_schedule = 6;
}

message BattlePassCycle {
    uint32 end_time = 12;
    uint32 cycle_idx = 13;
    uint32 begin_time = 11;
}

message BattlePassMission {
    enum MissionStatus {

        MISSION_INVALID = 0;
        MISSION_UNFINISHED = 1;
        MISSION_FINISHED = 2;
        MISSION_POINT_TAKEN = 3;
    }
    uint32 mission_id = 11;
    MissionStatus mission_status = 14;
    uint32 GJNMCPGNCMA = 13;
    uint32 cur_progress = 15;
    uint32 total_progress = 10;
    uint32 OCEJMMCLNKC = 3;
}

// CmdId: 2617
message BattlePassMissionDelNotify {
    repeated uint32 del_mission_id_list = 1;
}

// CmdId: 2616
message BattlePassMissionUpdateNotify {
    repeated BattlePassMission mission_list = 1;
}

message BattlePassProduct {
    string LCLGNDMDBPG = 13;
    string DEFBKEGPICP = 10;
    string GLEBBINJLCC = 7;
}

message BattlePassRewardTag {
    BattlePassUnlockStatus unlock_status = 5;
    uint32 reward_id = 10;
    uint32 level = 2;
}

message BattlePassRewardTakeOption {
    BattlePassRewardTag tag = 10;
    uint32 option_idx = 12;
}

message BattlePassSchedule {
    bool NJCGHBKBKDO = 2;
    uint32 level = 4;
    bool LCPFDLLEDNM = 13;
    repeated BattlePassRewardTag reward_taken_list = 9;
    BattlePassProduct product_info = 10;
    uint32 end_time = 15;
    uint32 FOENJPJJGBA = 12;
    BattlePassUnlockStatus unlock_status = 6;
    uint32 PHECELJJFCK = 7;
    uint32 GAMMCGFEAIH = 14;
    BattlePassCycle cur_cycle = 3;
    uint32 schedule_id = 8;
    uint32 begin_time = 5;
}

// CmdId: 3408
message BBAEFJPLEPN {
    repeated uint32 scene_tag_id_list = 7;
    uint32 IDGBKGGNBFD = 11;
}

// CmdId: 5506
message BCAOAGGPONH {
    DCJBJCDFAAE progress = 8;
    uint32 gallery_id = 14;
}

// CmdId: 2910
message BCBNCBGIEJO {
    uint32 offering_id = 1;
}

// CmdId: 21475
message BCMJEDNDIGM {
    int32 retcode = 10;
}

message BEAMFIKPMLE {
    repeated HDOMFAKCLHG level_info_list = 4;
}

// CmdId: 215
message BeginCameraSceneLookNotify {
    enum KeepRotType {

        KEEP_ROT_X = 0;
        KEEP_ROT_XY = 1;
    }
    bool DHEJCFIIJJN = 7;
    bool LJGMCKKIBKD = 1;
    uint32 entity_id = 431;
    uint32 FCCKPEGCEJN = 1335;
    KeepRotType keep_rot_type = 3;
    bool ICFCABODPHC = 10;
    bool HABGHENOCHA = 13;
    bool OHBPOGDOBEN = 15;
    uint32 LCGFBOLPMDJ = 339;
    repeated string other_params = 5;
    bool MCFCBOJLEEA = 14;
    bool MHOPMFLJEJB = 1736;
    float IPCLENFLCLJ = 484;
    Vector BJAIBAFFGAP = 6;
    Vector BIGFKDFJPDD = 9;
    float OHCHDGHEJDH = 2;
    bool FGEILCFGECH = 12;
    float PIOFKMOEEBP = 11;
    float JDDGAILHJHH = 8;
    float duration = 4;
}

// CmdId: 3314
message BeginCameraSceneLookWithTemplateNotify {
    enum FollowType {

        FOLLOW_TYPE_INIT_FOLLOW_POS = 0;
        FOLLOW_TYPE_SET_FOLLOW_POS = 1;
        FOLLOW_TYPE_SET_ABS_FOLLOW_POS = 2;
    }
    Vector BJAIBAFFGAP = 14;
    Vector BIGFKDFJPDD = 12;
    uint32 template_id = 10;
    repeated string other_params = 15;
    FollowType follow_type = 5;
    uint32 entity_id = 2;
}

// CmdId: 6497
message BFFEMLKIMGD {
    uint32 play_index = 8;
}

// CmdId: 23293
message BFICMJMHKJL {
    int32 retcode = 6;
}

// CmdId: 1016
message BigTalentPointConvertReq {
    uint64 avatar_guid = 11;
    repeated uint64 item_guid_list = 10;
}

// CmdId: 1056
message BigTalentPointConvertRsp {
    int32 retcode = 8;
    uint64 avatar_guid = 5;
}

// CmdId: 108
message BIJJHMLCFOF {
    int32 retcode = 15;
    repeated uint32 KHCCPLILCAN = 6;
}

message Birthday {
    uint32 month = 1;
    uint32 day = 2;
}

// CmdId: 2001
message BlessingAcceptAllGivePicReq {
}

// CmdId: 2103
message BlessingAcceptAllGivePicRsp {
    map<uint32, uint32> accept_pic_num_map = 2;
    repeated uint32 accept_index_list = 14;
    int32 retcode = 8;
}

// CmdId: 2121
message BlessingAcceptGivePicReq {
    uint32 uid = 11;
    uint32 index = 4;
}

// CmdId: 2164
message BlessingAcceptGivePicRsp {
    int32 retcode = 14;
    uint32 pic_id = 11;
    uint32 index = 8;
    uint32 uid = 1;
}

message BlessingActivityDetailInfo {
    bool is_content_closed = 2;
    bool is_activated = 13;
    uint32 OELGLNKALIE = 10;
    uint32 OJIKMNKCMJI = 7;
    uint32 KFFAALMFGID = 14;
    uint32 next_refresh_time = 11;
    map<uint32, uint32> pic_num_map = 6;
    uint32 content_close_time = 4;
}

message BlessingFriendPicData {
    string nickname = 12;
    uint32 uid = 2;
    ProfilePicture profile_picture = 14;
    map<uint32, uint32> pic_num_map = 6;
    string signature = 1;
    uint32 avatar_id = 4;
    string remark_name = 9;
}

// CmdId: 2100
message BlessingGetAllRecvPicRecordListReq {
}

// CmdId: 2150
message BlessingGetAllRecvPicRecordListRsp {
    repeated BlessingRecvPicRecord recv_pic_record_list = 14;
    int32 retcode = 5;
}

// CmdId: 2057
message BlessingGetFriendPicListReq {
}

// CmdId: 2147
message BlessingGetFriendPicListRsp {
    repeated BlessingFriendPicData friend_pic_data_list = 5;
    int32 retcode = 13;
}

// CmdId: 2045
message BlessingGiveFriendPicReq {
    uint32 uid = 6;
    uint32 pic_id = 15;
}

// CmdId: 2163
message BlessingGiveFriendPicRsp {
    uint32 pic_id = 12;
    int32 retcode = 13;
    uint32 uid = 15;
}

// CmdId: 2063
message BlessingRecvFriendPicNotify {
    uint32 uid = 5;
    uint32 pic_id = 7;
}

message BlessingRecvPicRecord {
    string remark_name = 6;
    string signature = 14;
    string nickname = 13;
    uint32 uid = 11;
    uint32 pic_id = 4;
    uint32 avatar_id = 8;
    uint32 index = 3;
    ProfilePicture profile_picture = 5;
    bool is_recv = 7;
}

// CmdId: 2041
message BlessingRedeemRewardReq {
}

// CmdId: 2130
message BlessingRedeemRewardRsp {
    map<uint32, uint32> pic_num_map = 3;
    int32 retcode = 1;
}

// CmdId: 2074
message BlessingScanReq {
    uint32 entity_id = 3;
}

// CmdId: 2035
message BlessingScanRsp {
    uint32 OELGLNKALIE = 12;
    uint32 HIANHGLLGMD = 6;
    int32 retcode = 9;
}

message BlitzRushActivityDetailInfo {
    bool is_content_closed = 3;
    repeated ParkourLevelInfo parkour_level_info_list = 1;
    uint32 content_close_time = 11;
    repeated BlitzRushStage stage_list = 15;
}

// CmdId: 8849
message BlitzRushParkourRestartReq {
    uint32 group_id = 5;
    uint32 schedule_id = 2;
}

// CmdId: 8534
message BlitzRushParkourRestartRsp {
    uint32 group_id = 2;
    int32 retcode = 11;
    uint32 schedule_id = 1;
}

message BlitzRushStage {
    uint32 open_time = 11;
    bool is_open = 15;
}

message BlockInfo {
    uint32 block_id = 1;
    uint32 data_version = 2;
    bytes bin_data = 3;
    bool is_dirty = 4;
}

message BLOJIAMOIOM {
    Vector JJJMAFCNEDH = 3;
}

message BlossomBriefInfo {
    uint32 resin = 6;
    uint32 state = 1;
    uint32 city_id = 7;
    bool is_guide_opened = 9;
    uint32 refresh_id = 10;
    uint32 reward_id = 13;
    uint32 circle_camp_id = 15;
    uint32 scene_id = 12;
    Vector pos = 8;
    uint32 monster_level = 2;
}

// CmdId: 2789
message BlossomBriefInfoNotify {
    repeated BlossomBriefInfo brief_info_list = 6;
}

// CmdId: 2756
message BlossomChestCreateNotify {
    uint32 refresh_id = 15;
    uint32 circle_camp_id = 2;
}

message BlossomChestInfo {
    uint32 resin = 1;
    repeated uint32 qualify_uid_list = 2;
    repeated uint32 remain_uid_list = 3;
    uint32 dead_time = 4;
    uint32 blossom_refresh_type = 5;
    uint32 refresh_id = 6;
}

// CmdId: 872
message BlossomChestInfoNotify {
    BlossomChestInfo blossom_chest_info = 1;
    uint32 entity_id = 12;
}

message BlossomScheduleInfo {
    uint32 circle_camp_id = 11;
    uint32 progress = 5;
    uint32 round = 13;
    uint32 finish_progress = 9;
    uint32 state = 12;
    uint32 refresh_id = 4;
}

// CmdId: 22180
message BMBJFJNIAKL {
    float speed = 1636;
    uint32 PDAEMLNANJB = 522;
    repeated uint32 IENNECCNIFA = 12;
    uint32 LFBNPBMNLKD = 14;
    uint32 max_combo = 9;
    bool JBDMHEJEGIB = 1214;
    uint32 correct_hit = 11;
    uint32 music_basic_id = 3;
    uint32 CNAJIGJCBAA = 7;
    uint32 combo = 13;
    bool JGNMPPLDBON = 1580;
    bool is_save_score = 4;
    uint32 HDOIBKCMFPK = 186;
    uint32 NGCEDFEHHIM = 2;
    uint32 score = 1;
    uint32 AHGFEMANIFF = 1857;
    uint64 ugc_guid = 5;
    repeated uint32 DLGEHGGHDAI = 1499;
}

message BonusActivityInfo {
    uint32 bonus_activity_id = 13;
    uint32 state = 1;
}

// CmdId: 2512
message BonusActivityInfoReq {
}

// CmdId: 2565
message BonusActivityInfoRsp {
    repeated BonusActivityInfo bonus_activity_info_list = 1;
    int32 retcode = 7;
}

// CmdId: 2578
message BonusActivityUpdateNotify {
    repeated BonusActivityInfo bonus_activity_info_list = 5;
}

message BonusOpActivityInfo {
    uint32 left_bonus_count = 12;
}

// CmdId: 841
message BossChestActivateNotify {
    repeated uint32 qualify_uid_list = 8;
    uint32 entity_id = 12;
}

message BossChestInfo {
    uint32 monster_config_id = 1;
    uint32 resin = 2;
    repeated uint32 remain_uid_list = 3;
    repeated uint32 qualify_uid_list = 4;
    map<uint32, WeeklyBossResinDiscountInfo> uid_discount_map = 5;
}

message BounceConjuringActivityDetailInfo {
    repeated BounceConjuringChapterInfo chapter_info_list = 6;
    uint32 content_close_time = 2;
    bool is_content_closed = 7;
}

message BounceConjuringChapterInfo {
    uint32 open_time = 9;
    uint32 chapter_id = 4;
    uint32 best_score = 7;
}

message BounceConjuringGallerySettleInfo {
    map<uint32, uint32> gadget_count_map = 3;
    uint32 BIMOGNBEGNI = 15;
    uint32 GIMNNOIMHAN = 7;
    uint32 score = 8;
    repeated ExhibitionDisplayInfo card_list = 5;
    float damage = 10;
    OnlinePlayerInfo player_info = 1;
    uint32 LLEPOGBFEMP = 6;
    uint32 CDKGPFEDKLO = 13;
}

// CmdId: 8427
message BounceConjuringSettleNotify {
    uint32 total_score = 11;
    bool is_new_record = 8;
    uint32 chapter_id = 7;
    map<uint32, BounceConjuringGallerySettleInfo> settle_info_map = 13;
}

message BreakoutAction {
    enum BreakoutActionType {

        ACTION_TYPE_NONE = 0;
        ACTION_TYPE_LAUNCH_BALL = 1;
        ACTION_TYPE_DESTROY_BALL = 2;
        ACTION_TYPE_FALLING_OBJECT = 3;
        ACTION_TYPE_MISSILE = 4;
    }
    BreakoutActionType action_type = 1;
    uint64 client_game_time = 2;
    uint64 server_game_time = 3;
    bool is_failed = 4;
    uint32 pre_index = 5;
    uint32 new_index = 6;
    BreakoutVector2 pos = 7;
    BreakoutVector2 move_dir = 8;
    int32 speed = 9;
    uint32 peer_id = 10;
    uint32 element_type = 11;
    uint32 element_reaction_buff = 12;
    uint32 speed_increase_count = 13;
    bool has_extra_ball = 14;
    BreakoutVector2 extra_ball_dir = 15;
    uint32 extra_ball_index = 16;
    int32 offset = 17;
    uint64 FAOPCIPCDJP = 18;
}

message BreakoutBrickInfo {
    uint32 hp = 1;
    uint32 element_type = 2;
}

message BreakoutElementReactionCounter {
    uint32 element_reaction = 1;
    uint32 count = 2;
}

message BreakoutPhysicalObject {
    uint32 id = 1;
    uint32 index = 2;
    bool is_active = 3;
    BreakoutVector2 pos = 4;
    BreakoutVector2 move_dir = 5;
    int32 speed = 6;
    uint32 init_peer_id = 7;
    uint32 state = 8;
    uint32 element_type = 9;
    uint32 element_reaction_buff = 10;
    repeated BreakoutPhysicalObjectModifier modifier_list = 11;
    int32 total_rotation = 12;
    repeated BreakoutBrickInfo info_list = 13;
    uint32 last_hit_peer_id = 14;
    uint32 speed_increase_count = 15;
    int32 offset = 16;
}

message BreakoutPhysicalObjectModifier {
    uint32 type = 1;
    uint32 id = 2;
    int32 param1 = 3;
    int32 param2 = 4;
    int32 param3 = 5;
    int32 param4 = 6;
    int32 param5 = 7;
    int32 param6 = 8;
    bool bool1 = 9;
    int32 duration = 10;
    int32 end_time = 11;
    uint32 combo = 12;
    uint32 peer_id = 13;
    uint32 skill_type = 14;
    uint32 level = 15;
    uint32 choose_player_count = 16;
}

message BreakoutSnapShot {
    uint64 client_game_time = 1;
    uint64 server_game_time = 2;
    repeated BreakoutPhysicalObject ball_list = 3;
    repeated BreakoutPhysicalObject physical_object_list = 4;
    repeated BreakoutAction action_list = 5;
    uint32 wave_index = 6;
    bool is_finish = 7;
    uint32 score = 8;
    uint32 combo = 9;
    uint32 max_combo = 10;
    uint32 life_count = 11;
    uint32 wave_suite_index = 12;
    repeated BreakoutSpawnPoint spawn_point_list = 13;
    uint32 remaining_boss_hp = 14;
    repeated BreakoutElementReactionCounter brick_element_reaction_list = 15;
    repeated BreakoutElementReactionCounter ball_element_reaction_list = 16;
    repeated BreakoutSyncConnectUidInfo uid_info_list = 17;
    repeated BreakoutPhysicalObject dynamic_object_list = 18;
    repeated uint32 id_index_list = 19;
    int32 raw_client_game_time = 20;
}

message BreakoutSpawnPoint {
    uint32 id = 1;
    uint32 brick_suite_id = 2;
    repeated BreakoutPhysicalObject spawned_brick_list = 3;
}

message BreakoutSyncAction {
    BreakoutAction action = 1;
}

message BreakoutSyncConnectUidInfo {
    uint32 uid = 1;
    repeated uint32 skill_id_list = 2;
    repeated uint32 skill_level_list = 3;
}

message BreakoutSyncCreateConnect {
    repeated BreakoutSyncConnectUidInfo uid_info_list = 5;
}

message BreakoutSyncFinishGame {
    bool is_stop_gallery = 1;
    uint64 server_game_time = 5;
    bool is_win = 3;
}

message BreakoutSyncPing {
    uint64 client_game_time = 5;
    uint64 server_game_time = 15;
}

message BreakoutSyncSnapShot {
    BreakoutSnapShot snap_shot = 15;
}

message BreakoutVector2 {
    int32 x = 1;
    int32 y = 2;
}

message BrickBreakerActivityStageInfo {
    bool DDLJNDKFPHP = 7;
    uint32 stage_id = 9;
    bool LIGDBOAIDJN = 10;
}

message BrickBreakerDetailInfo {
    map<uint32, uint32> skill_info_map = 4;
    repeated BrickBreakerLevelInfo PPDAPEHFPAN = 3;
    repeated BrickBreakerLevelInfo OKBIGBHBHDP = 6;
    repeated BrickBreakerActivityStageInfo stage_info_list = 13;
}

message BrickBreakerLevelInfo {
    bool is_can_start = 6;
    repeated uint32 chosen_skill_list = 3;
    repeated uint32 chosen_avatar_list = 12;
    uint32 max_score = 2;
    bool is_finish = 8;
    uint32 level_id = 7;
}

message BrickBreakerPlayerBattleInfo {
    bool is_ready = 15;
    repeated uint32 skill_list = 9;
    uint32 uid = 11;
    repeated uint32 avatar_id = 12;
    bool is_changing = 10;
    repeated uint32 costume_id = 1;
    string nickname = 5;
}

// CmdId: 5317
message BrickBreakerPlayerReadyNotify {
    repeated uint32 uid_list = 9;
}

// CmdId: 5320
message BrickBreakerPlayerSetAvatarNotify {
    repeated uint32 avatar_id_list = 15;
    repeated uint32 costume_id_list = 1;
    uint32 uid = 11;
}

// CmdId: 5330
message BrickBreakerPlayerSetChangingNotify {
    uint32 uid = 2;
    bool is_changing = 3;
}

// CmdId: 5385
message BrickBreakerPlayerSetSkillNotify {
    repeated uint32 skill_id_list = 6;
    uint32 uid = 13;
}

// CmdId: 20602
message BrickBreakerQuitReq {
}

// CmdId: 24182
message BrickBreakerQuitRsp {
    int32 retcode = 1;
}

// CmdId: 5367
message BrickBreakerSelectAvatarReq {
    repeated uint32 avatar_id = 1;
}

// CmdId: 5379
message BrickBreakerSelectAvatarRsp {
    int32 retcode = 15;
    repeated uint32 avatar_id = 6;
}

// CmdId: 5313
message BrickBreakerSelectSkillReq {
    repeated uint32 skill_id = 12;
}

// CmdId: 5387
message BrickBreakerSelectSkillRsp {
    int32 retcode = 2;
    repeated uint32 skill_id = 3;
}

// CmdId: 5362
message BrickBreakerSetChangingReq {
    bool is_changing = 5;
}

// CmdId: 5323
message BrickBreakerSetChangingRsp {
    int32 retcode = 10;
}

// CmdId: 5331
message BrickBreakerSetReadyReq {
}

// CmdId: 5325
message BrickBreakerSetReadyRsp {
    int32 retcode = 3;
}

// CmdId: 24530
message BrickBreakerSettleNotify {
    enum SettleReason {

        SETTLE_REASON_TIME_OUT = 0;
        SETTLE_PLAY_END = 1;
        SETTLE_PLAYER_QUIT = 2;
        SETTLE_LIFE_COUNT = 3;
    }
    repeated Uint32Pair update_skill_list = 9;
    uint32 level_id = 8;
    bool is_dungeon = 1;
    bool is_new_record = 5;
    uint32 time = 7;
    SettleReason reason = 11;
    bool is_single_mode = 13;
    uint32 combo = 12;
    uint32 score = 6;
    uint32 gallery_id = 2;
}

message BrickBreakerStageInfo {
    BrickBreakerStageType stage_type = 11;
    uint32 level_id = 7;
    repeated BrickBreakerPlayerBattleInfo battle_info_list = 12;
}

// CmdId: 21977
message BrickBreakerTwiceStartReq {
}

// CmdId: 21089
message BrickBreakerTwiceStartRsp {
    int32 retcode = 9;
}

message BuildingInfo {
    uint32 building_id = 1;
    uint32 point_config_id = 2;
    uint32 cost = 3;
    uint32 refund = 5;
    uint32 owner_uid = 6;
    uint32 current_num = 7;
    uint32 max_num = 8;
}

message BuoyantCombatDailyInfo {
    uint32 best_score = 9;
    uint32 start_time = 5;
}

message BuoyantCombatDetailInfo {
    repeated BuoyantCombatDailyInfo daily_info_list = 13;
}

message BuoyantCombatGallerySettleInfo {
    uint32 gallery_id = 6;
    uint32 final_score = 3;
    uint32 FGNPAGJDGMJ = 1;
    uint32 ECNCAFKGHNJ = 13;
    uint32 kill_monster_count = 2;
    uint32 gallery_level = 7;
    uint32 kill_special_monster_count = 8;
}

message BuoyantCombatSettleInfo {
    bool is_new_record = 6;
    BuoyantCombatGallerySettleInfo settle_info = 9;
}

// CmdId: 8159
message BuoyantCombatSettleNotify {
    BuoyantCombatSettleInfo settle_info = 9;
    uint32 gallery_id = 6;
}

// CmdId: 2624
message BuyBattlePassLevelReq {
    uint32 buy_level = 12;
}

// CmdId: 2625
message BuyBattlePassLevelRsp {
    int32 retcode = 2;
    uint32 buy_level = 1;
}

message BuyGoodsParam {
    ShopGoods goods = 12;
    uint32 buy_count = 13;
}

// CmdId: 789
message BuyGoodsReq {
    uint32 shop_type = 4;
    uint32 buy_count = 9;
    ShopGoods goods = 13;
}

// CmdId: 776
message BuyGoodsRsp {
    ShopGoods goods = 9;
    repeated ShopGoods goods_list = 15;
    int32 retcode = 4;
    uint32 buy_count = 11;
    uint32 shop_type = 10;
}

// CmdId: 640
message BuyResinReq {
}

// CmdId: 645
message BuyResinRsp {
    uint32 cur_value = 9;
    int32 retcode = 13;
}

// CmdId: 627
message CalcWeaponUpgradeReturnItemsReq {
    repeated ItemParam item_param_list = 13;
    uint64 target_weapon_guid = 1;
    repeated uint64 food_weapon_guid_list = 4;
}

// CmdId: 668
message CalcWeaponUpgradeReturnItemsRsp {
    int32 retcode = 4;
    repeated ItemParam item_param_list = 11;
    uint64 target_weapon_guid = 6;
}

// CmdId: 2863
message CancelCityReputationRequestReq {
    uint32 request_id = 7;
    uint32 city_id = 9;
}

// CmdId: 2859
message CancelCityReputationRequestRsp {
    uint32 request_id = 6;
    int32 retcode = 8;
    uint32 city_id = 14;
}

// CmdId: 1974
message CancelCoopTaskReq {
    uint32 chapter_id = 3;
}

// CmdId: 1975
message CancelCoopTaskRsp {
    int32 retcode = 2;
    uint32 chapter_id = 12;
}

// CmdId: 474
message CancelFinishParentQuestNotify {
    uint32 parent_quest_id = 5;
}

// CmdId: 1075
message CanUseSkillNotify {
    bool is_can_use_skill = 11;
}

// CmdId: 7308
message CAPOJBJBBPA {
}

// CmdId: 4149
message CardProductRewardNotify {
    uint32 MLKHDJPCJLG = 8;
    uint32 OKKCPKEGAJF = 1;
    string product_id = 12;
}

// CmdId: 6392
message CataLogFinishedGlobalWatcherAllDataNotify {
    repeated CataLogGlobalWatcherFinishedData finished_global_watcher_data_list = 10;
}

message CataLogGlobalWatcherFinishedData {
    uint32 catalog_type = 3;
    repeated uint32 finished_global_watcher_list = 9;
}

// CmdId: 6386
message CataLogNewFinishedGlobalWatcherNotify {
    repeated CataLogGlobalWatcherFinishedData new_finished_global_watcher_data_list = 12;
}

// CmdId: 22763
message CELPBGOAJJB {
    int32 retcode = 2;
}

// CmdId: 24935
message CEMGDGAHDPJ {
    int32 retcode = 8;
}

message CFFFGFFKINK {
    uint32 ELKJELLMMAD = 15;
    uint32 level_id = 13;
    bool is_open = 14;
    uint32 min_finish_time = 7;
}

// CmdId: 2921
message CFPNMMHIFLK {
    Vector hint_center_pos = 12;
    uint32 config_id = 2;
    uint32 group_id = 5;
    uint32 offering_id = 14;
    uint32 hint_radius = 11;
}

// CmdId: 1686
message CGPNDMOBAOI {
    uint64 cur_avatar_guid = 10;
    int32 retcode = 6;
    repeated uint64 avatar_team_guid_list = 2;
}

message ChallengeBrief {
    uint32 challenge_index = 3;
    uint32 cur_progress = 5;
    bool is_success = 7;
    uint32 challenge_id = 1;
}

// CmdId: 994
message ChallengeDataNotify {
    uint32 value = 2;
    uint32 challenge_index = 9;
    uint32 param_index = 4;
}

message ChallengeRecord {
    uint32 challenge_id = 3;
    uint32 challenge_index = 2;
    uint32 MDLNIEHGHHD = 1;
    uint32 HHHBNDFPJJI = 15;
}

// CmdId: 939
message ChallengeRecordNotify {
    uint32 group_id = 4;
    repeated ChallengeRecord challenge_record_list = 11;
}

// CmdId: 1713
message ChangeAvatarReq {
    Vector move_pos = 10;
    uint32 skill_id = 14;
    bool is_move = 11;
    uint64 guid = 4;
}

// CmdId: 1678
message ChangeAvatarRsp {
    int32 retcode = 8;
    uint32 skill_id = 6;
    uint64 cur_guid = 7;
}

// CmdId: 6222
message ChangeCustomDungeonRoomReq {
    uint32 room_id = 12;
}

// CmdId: 6220
message ChangeCustomDungeonRoomRsp {
    int32 retcode = 1;
    uint32 room_id = 11;
}

// CmdId: 192
message ChangeGameTimeReq {
    uint32 extra_days = 10;
    uint32 game_time = 11;
    bool is_force_set = 12;
}

// CmdId: 163
message ChangeGameTimeRsp {
    uint32 extra_days = 11;
    int32 retcode = 3;
    uint32 cur_game_time = 12;
}

// CmdId: 1412
message ChangeMailStarNotify {
    repeated uint32 mail_id_list = 9;
    bool is_star = 14;
}

// CmdId: 1698
message ChangeMpTeamAvatarReq {
    uint64 cur_avatar_guid = 12;
    repeated uint64 avatar_guid_list = 9;
}

// CmdId: 1776
message ChangeMpTeamAvatarRsp {
    int32 retcode = 7;
    uint64 cur_avatar_guid = 2;
    repeated uint64 avatar_guid_list = 1;
}

// CmdId: 95
message ChangeServerGlobalValueNotify {
    uint32 entity_id = 8;
}

// CmdId: 1613
message ChangeTeamNameReq {
    int32 team_id = 11;
    string team_name = 12;
}

// CmdId: 1754
message ChangeTeamNameRsp {
    int32 team_id = 1;
    string team_name = 3;
    int32 retcode = 9;
}

// CmdId: 6060
message ChangeWidgetBackgroundActiveStateReq {
    bool is_active = 6;
    uint32 material_id = 14;
}

// CmdId: 5986
message ChangeWidgetBackgroundActiveStateRsp {
    uint32 material_id = 10;
    int32 retcode = 11;
}

// CmdId: 3456
message ChangeWorldToSingleModeNotify {
}

// CmdId: 3335
message ChangeWorldToSingleModeReq {
}

// CmdId: 3007
message ChangeWorldToSingleModeRsp {
    uint32 quit_mp_valid_time = 1;
    int32 retcode = 13;
}

message ChannelerSlabActivityDetailInfo {
    ChannellerSlabBuffInfo buff_info = 8;
    ChannellerSlabLoopDungeonStageInfo loop_dungeon_stage_info = 12;
    repeated ChannelerSlabChallengeStage stage_list = 14;
    uint32 play_end_time = 11;
}

message ChannelerSlabCamp {
    uint32 buff_num = 5;
    uint32 group_id = 10;
    uint32 reward_id = 8;
    Vector pos = 11;
}

message ChannelerSlabChallenge {
    uint32 active_camp_index = 11;
    repeated ChannelerSlabCamp camp_list = 13;
}

message ChannelerSlabChallengeStage {
    uint32 open_time = 15;
    uint32 stage_id = 4;
    bool is_open = 9;
    repeated ChannelerSlabChallenge challenge_list = 8;
    ChannelerSlabOneoffDungeon dungeon_info = 13;
}

message ChannelerSlabOneoffDungeon {
    bool is_done = 15;
    uint32 dungeon_id = 10;
    uint32 reward_id = 13;
}

// CmdId: 8687
message ChannelerSlabStageActiveChallengeIndexNotify {
    uint32 challenge_index = 9;
    uint32 stage_id = 8;
    uint32 active_camp_index = 13;
}

// CmdId: 8475
message ChannelerSlabStageOneoffDungeonNotify {
    uint32 stage_id = 15;
    bool is_done = 6;
}

message ChannellerSlabAssistInfo {
    uint32 uid = 2;
    uint32 avatar_id = 4;
    uint32 avatar_level = 7;
}

message ChannellerSlabBuffInfo {
    repeated uint32 buff_id_list = 10;
    repeated ChannellerSlabAssistInfo assist_info_list = 15;
    ChannellerSlabBuffSchemeInfo GDJEJEJABPK = 3;
    ChannellerSlabBuffSchemeInfo FGIHAJHGCBI = 11;
}

message ChannellerSlabBuffSchemeInfo {
    uint32 AHDJLGHLNEB = 10;
    uint32 GNFANIBDDEO = 14;
    map<uint32, uint32> slot_map = 2;
}

// CmdId: 8461
message ChannellerSlabCheckEnterLoopDungeonReq {
}

// CmdId: 8122
message ChannellerSlabCheckEnterLoopDungeonRsp {
    int32 retcode = 9;
}

// CmdId: 8088
message ChannellerSlabEnterLoopDungeonReq {
    uint32 dungeon_index = 15;
    repeated uint32 condition_id_list = 10;
    uint32 difficulty_id = 8;
    uint32 point_id = 12;
}

// CmdId: 8121
message ChannellerSlabEnterLoopDungeonRsp {
    uint32 dungeon_index = 13;
    uint32 difficulty_id = 4;
    repeated uint32 condition_id_list = 11;
    int32 retcode = 10;
    uint32 point_id = 2;
}

// CmdId: 8684
message ChannellerSlabLoopDungeonChallengeInfoNotify {
    uint32 dungeon_index = 2;
    uint32 difficulty_id = 11;
    repeated uint32 scheme_buff_id_list = 13;
    uint32 challenge_score = 1;
    repeated uint32 condition_id_list = 4;
}

message ChannellerSlabLoopDungeonInfo {
    bool is_open = 8;
    uint32 open_time = 15;
    bool is_first_pass_reward_taken = 11;
    uint32 score = 2;
    uint32 dungeon_index = 5;
    repeated uint32 last_condition_id_list = 10;
}

message ChannellerSlabLoopDungeonResultInfo {
    uint32 challenge_score = 1;
    uint32 dungeon_index = 6;
    uint32 challenge_max_score = 10;
    bool is_in_time_limit = 9;
    bool is_success = 15;
}

// CmdId: 8993
message ChannellerSlabLoopDungeonSelectConditionReq {
    uint32 difficulty_id = 14;
    uint32 dungeon_index = 15;
    repeated uint32 condition_id_list = 5;
}

// CmdId: 8283
message ChannellerSlabLoopDungeonSelectConditionRsp {
    uint32 dungeon_index = 7;
    uint32 difficulty_id = 1;
    repeated uint32 condition_id_list = 2;
    int32 retcode = 3;
}

message ChannellerSlabLoopDungeonStageInfo {
    uint32 open_time = 4;
    uint32 last_difficulty_id = 14;
    bool is_open = 1;
    repeated ChannellerSlabLoopDungeonInfo dungeon_info_list = 3;
    repeated uint32 taken_reward_index_list = 7;
}

// CmdId: 8381
message ChannellerSlabLoopDungeonTakeFirstPassRewardReq {
    uint32 dungeon_index = 6;
}

// CmdId: 8068
message ChannellerSlabLoopDungeonTakeFirstPassRewardRsp {
    uint32 dungeon_index = 11;
    int32 retcode = 3;
}

// CmdId: 8052
message ChannellerSlabLoopDungeonTakeScoreRewardReq {
    uint32 reward_index = 6;
}

// CmdId: 8933
message ChannellerSlabLoopDungeonTakeScoreRewardRsp {
    int32 retcode = 10;
    uint32 reward_index = 13;
}

// CmdId: 8339
message ChannellerSlabOneOffDungeonInfoNotify {
    repeated uint32 scheme_buff_id_list = 3;
}

// CmdId: 8775
message ChannellerSlabOneOffDungeonInfoReq {
}

// CmdId: 8872
message ChannellerSlabOneOffDungeonInfoRsp {
    repeated uint32 scheme_buff_id_list = 1;
    int32 retcode = 2;
}

// CmdId: 8151
message ChannellerSlabSaveAssistInfoReq {
    repeated ChannellerSlabAssistInfo assist_info_list = 9;
}

// CmdId: 8537
message ChannellerSlabSaveAssistInfoRsp {
    int32 retcode = 6;
    repeated ChannellerSlabAssistInfo assist_info_list = 13;
}

// CmdId: 8133
message ChannellerSlabTakeoffBuffReq {
    uint32 slot_id = 7;
    uint32 buff_id = 12;
    bool is_mp = 8;
}

// CmdId: 8631
message ChannellerSlabTakeoffBuffRsp {
    uint32 slot_id = 1;
    uint32 buff_id = 15;
    int32 retcode = 14;
    bool is_mp = 3;
}

// CmdId: 8479
message ChannellerSlabWearBuffReq {
    bool is_mp = 2;
    uint32 slot_id = 4;
    uint32 buff_id = 13;
}

// CmdId: 8925
message ChannellerSlabWearBuffRsp {
    uint32 slot_id = 4;
    uint32 buff_id = 6;
    int32 retcode = 3;
    bool is_mp = 14;
}

// CmdId: 475
message ChapterStateNotify {
    message NeedPlayerLevel {
        bool is_limit = 15; // HJHDAHFJGBM ???
        uint32 config_need_player_level = 5; // IOOFCEKCNLP ???
    }
    message NeedBeginTime {
        uint32 config_need_begin_time = 6; // OBBEJICFPIC ???
        bool is_limit = 4; // HJHDAHFJGBM ???
    }
    ChapterState chapter_state = 13;
    NeedPlayerLevel need_player_level = 3; // NCCCEAHMHHB ???
    uint32 chapter_id = 15;
    NeedBeginTime need_begin_time = 11; // EIPKJBGKGKE ???
}

message CharAmusementAvatarInfo {
    repeated uint32 avatar_id_list = 3;
    uint32 punish_time = 11;
    uint32 uid = 8;
}

message CharAmusementDetailInfo {
    repeated CharAmusementStageData stage_data_list = 13;
}

message CharAmusementInfo {
    uint32 KNJNIILLBNC = 8;
    uint32 level_id = 4;
    repeated CharAmusementAvatarInfo avatar_info_list = 14;
    uint32 KFECCJKLOLE = 9;
    uint32 stage_id = 13;
}

// CmdId: 23878
message CharAmusementSettleNotify {
    bool is_new_record = 2;
    uint32 finish_time = 9;
    bool is_succ = 13;
}

message CharAmusementStageData {
    uint32 finish_time = 12;
    bool is_open = 10;
    uint32 stage_id = 2;
}

// CmdId: 4962
message ChatChannelDataNotify {
    repeated ChatChannelInfo channel_info_list = 15;
    repeated uint32 channel_list = 5;
}

message ChatChannelInfo {
    uint32 channel_id = 11;
    bool is_shield = 5;
}

// CmdId: 5049
message ChatChannelInfoNotify {
    ChatChannelInfo channel_info = 9;
}

// CmdId: 5015
message ChatChannelShieldNotify {
    bool is_shield = 15;
    uint32 channel_id = 10;
}

// CmdId: 5028
message ChatChannelUpdateNotify {
    bool is_create = 10;
    uint32 channel_id = 14;
    ChatChannelInfo channel_info = 2;
}

message ChatEmojiCollectionData {
    repeated uint32 emoji_id_list = 1;
}

// CmdId: 3332
message ChatHistoryNotify {
    uint32 channel_id = 1;
    repeated ChatInfo chat_info = 8;
}

message ChatInfo {
    message SystemHint {
        uint32 type = 12;
    }
    uint32 to_uid = 4;
    uint32 time = 15;
    uint32 LHKGJHPFJKA = 2;
    uint32 uid = 11;
    bool is_read = 12;
    oneof content {
        string text = 1362;
        uint32 icon = 451;
        SystemHint system_hint = 772;
    }
}

// CmdId: 647
message CheckAddItemExceedLimitNotify {
    enum ItemExceedLimitMsgType {

        ITEM_EXCEED_LIMIT_MSG_DEFAULT = 0;
        ITEM_EXCEED_LIMIT_MSG_TEXT = 1;
        ITEM_EXCEED_LIMIT_MSG_DIALOG = 2;
        ITEM_EXCEED_LIMIT_MSG_DIALOG_NONBLOCK = 3;
    }
    ItemExceedLimitMsgType msg_type = 8;
    repeated uint32 IEKDCIFFABE = 7;
    bool is_drop = 14;
    uint32 reason = 4;
    repeated uint32 DKMOFJKMINH = 15;
}

// CmdId: 3497
message CheckGroupReplacedReq {
    repeated uint32 group_id_list = 2;
}

// CmdId: 3198
message CheckGroupReplacedRsp {
    repeated uint32 replaced_group_id_list = 8;
    int32 retcode = 11;
}

// CmdId: 42
message CheckSegmentCRCNotify {
    repeated SegmentInfo info_list = 1;
}

// CmdId: 94
message CheckSegmentCRCReq {
    repeated SegmentCRCInfo info_list = 8;
}

// CmdId: 6321
message CheckUgcStateReq {
}

// CmdId: 6350
message CheckUgcStateRsp {
    int32 retcode = 2;
}

// CmdId: 6342
message CheckUgcUpdateReq {
    UgcType ugc_type = 6;
}

// CmdId: 6336
message CheckUgcUpdateRsp {
    int32 retcode = 7;
    UgcType ugc_type = 15;
    repeated uint64 update_ugc_guid_list = 11;
}

message ChessActivityDetailInfo {
    uint32 punish_over_time = 9;
    uint32 content_close_time = 5;
    bool is_content_closed = 6;
    uint32 level = 13;
    bool is_teach_dungeon_finished = 11;
    uint32 exp = 7;
    uint32 AFOCCCPMOOL = 12;
    uint32 BEAFFBAECMI = 4;
    repeated uint32 finished_map_id_list = 1;
}

message ChessCardInfo {
    uint32 card_id = 8;
    uint32 effect_stack = 6;
}

message ChessEntranceDetailInfo {
    repeated ChessEntranceInfo info_list = 3;
}

message ChessEntranceInfo {
    uint32 entrance_index = 15;
    uint32 entrance_point_id = 6;
    repeated ChessMonsterInfo monster_info_list = 7;
}

// CmdId: 5391
message ChessEscapedMonstersNotify {
    uint32 excaped_monsters = 10;
}

// CmdId: 5307
message ChessLeftMonstersNotify {
    uint32 left_monsters = 2;
}

// CmdId: 5352
message ChessManualRefreshCardsReq {
}

// CmdId: 5344
message ChessManualRefreshCardsRsp {
    int32 retcode = 6;
}

message ChessMonsterInfo {
    repeated uint32 affix_list = 1;
    uint32 monster_id = 8;
    uint32 level = 11;
}

message ChessMysteryInfo {
    map<uint32, ChessEntranceDetailInfo> detail_info_map = 13;
    map<uint32, uint32> entrance_point_map = 4;
    repeated uint32 exit_point_id_list = 10;
}

message ChessNormalCardInfo {
    uint32 card_id = 14;
    uint32 cost_points = 5;
    bool is_attach_curse = 12;
}

// CmdId: 5393
message ChessPickCardNotify {
    uint32 curse_card_id = 3;
    ChessNormalCardInfo normal_card_info = 2;
}

// CmdId: 5327
message ChessPickCardReq {
    uint32 card_id = 1;
    uint32 card_index = 3;
}

// CmdId: 5368
message ChessPickCardRsp {
    int32 retcode = 2;
    uint32 card_index = 7;
    uint32 card_id = 13;
}

message ChessPlayerInfo {
    uint32 uid = 3;
    uint32 MILMGKEIKNM = 6;
    repeated ChessNormalCardInfo candidate_card_info_list = 2;
    uint32 OLGJAJMBHAF = 13;
    uint32 NMKOCNBCEOA = 14;
    uint32 LPLBCOBAOLO = 4;
    uint32 FABNMNFMJFG = 12;
}

// CmdId: 5322
message ChessPlayerInfoNotify {
    ChessPlayerInfo player_info = 1;
}

// CmdId: 5347
message ChessSelectedCardsNotify {
    repeated ChessCardInfo selected_card_info_list = 6;
}

message ChildQuest {
    uint32 quest_id = 1;
    uint32 quest_config_id = 3;
    uint32 state = 2;
}

// CmdId: 1699
message ChooseCurAvatarTeamReq {
    uint32 team_id = 11;
}

// CmdId: 1791
message ChooseCurAvatarTeamRsp {
    uint32 cur_team_id = 3;
    int32 retcode = 15;
}

message CityInfo {
    uint32 city_id = 1;
    uint32 crystal_num = 9;
    uint32 level = 5;
}

// CmdId: 2875
message CityReputationDataNotify {
    repeated CityReputationSimpleInfo simple_info_list = 6;
}

message CityReputationExploreInfo {
    uint32 explore_percent = 13;
    bool is_open = 15;
    repeated uint32 taken_explore_reward_list = 11;
}

message CityReputationHuntInfo {
    bool is_open = 5;
    uint32 cur_week_finish_num = 3;
    bool has_reward = 14;
}

message CityReputationInfo {
    uint32 total_accept_request_num = 9;
    CityReputationQuestInfo quest_info = 4;
    uint32 next_refresh_time = 11;
    CityReputationHuntInfo hunt_info = 1;
    repeated uint32 taken_level_reward_list = 12;
    uint32 exp = 5;
    uint32 level = 14;
    CityReputationRequestInfo request_info = 8;
    CityReputationExploreInfo explore_info = 13;
}

// CmdId: 2816
message CityReputationLevelupNotify {
    uint32 city_id = 8;
    uint32 level = 10;
}

message CityReputationQuestInfo {
    bool is_open = 8;
    repeated uint32 GOGAJPFNDDD = 4;
    repeated uint32 JMFHFJELJLK = 9;
}

message CityReputationRequestInfo {
    message RequestInfo {
        bool is_taken_reward = 13;
        uint32 request_id = 14;
        uint32 quest_id = 15;
    }
    bool is_open = 6;
    repeated RequestInfo request_info_list = 14;
}

message CityReputationSimpleInfo {
    uint32 level = 12;
    uint32 city_id = 4;
}

// CmdId: 21417
message CJEDPJPHDFD {
    repeated EEKGPJAAGNH EOFCOHEIPNO = 9;
    uint32 level_id = 13;
    int32 retcode = 7;
}

// CmdId: 7243
message CJPDFDFACHM {
    repeated uint32 ECLJEEFBNJG = 5;
    repeated GCGDiceSideType dice_side_list = 9;
}

message CKMJBOGJFMB {
    uint32 level_id = 7;
    bool is_open = 13;
    bool is_finish = 15;
    uint32 best_score = 3;
}

// CmdId: 8677
message ClearRoguelikeCurseNotify {
    map<uint32, uint32> clear_curse_map = 5;
    bool is_curse_all_clear = 13;
    uint32 card_id = 12;
    bool is_clear_all = 3;
}

// CmdId: 1141
message ClientAbilitiesInitFinishCombineNotify {
    repeated EntityAbilityInvokeEntry entity_invoke_list = 8;
}

// CmdId: 1178
message ClientAbilityChangeNotify {
    uint32 entity_id = 15;
    repeated AbilityInvokeEntry invokes = 14;
    bool is_init_hash = 4;
}

// CmdId: 1189
message ClientAbilityInitBeginNotify {
    uint32 entity_id = 1;
}

// CmdId: 1176
message ClientAbilityInitFinishNotify {
    repeated AbilityInvokeEntry invokes = 6;
    uint32 entity_id = 4;
}

// CmdId: 1199
message ClientAIStateNotify {
    uint32 entity_id = 12;
    uint32 cur_tactic = 1;
}

// CmdId: 51
message ClientBulletCreateNotify {
    uint32 param = 10;
}

message ClientCollectorData {
    uint32 BJAOMANHLNM = 9;
    uint32 material_id = 10;
    uint32 JCGPKAGJIOF = 11;
}

// CmdId: 4300
message ClientCollectorDataNotify {
    repeated ClientCollectorData client_collector_data_list = 7;
}

message ClientGadgetInfo {
    uint32 camp_id = 1;
    uint32 camp_type = 2;
    uint64 guid = 3;
    uint32 owner_entity_id = 4;
    uint32 target_entity_id = 5;
    bool async_load = 6;
    bool is_peer_id_from_player = 7;
    repeated uint32 target_entity_id_list = 8;
    repeated uint32 target_lock_point_index_list = 9;
}

// CmdId: 3265
message ClientHashDebugNotify {
    uint32 job_id = 12;
}

// CmdId: 3270
message ClientLoadingCostumeVerificationNotify {
    uint32 costume_id = 3;
    uint64 guid = 7;
    uint64 prefab_hash = 4;
}

// CmdId: 191
message ClientLockGameTimeNotify {
    bool is_lock = 1;
}

message ClientMassiveEntity {
    uint32 entity_type = 1;
    uint32 config_id = 2;
    int64 obj_id = 3;
    oneof entity_info {
        MassiveWaterInfo water_info = 4;
        MassiveGrassInfo grass_info = 5;
        MassiveBoxInfo box_info = 6;
    }
}

// CmdId: 1463
message ClientNewMailNotify {
    uint32 BKHHHACGKKA = 2;
    bool NIKMLGOAFIA = 3;
    uint32 JEGNPFIFGOI = 1;
}

// CmdId: 207
message ClientPauseNotify {
    bool is_open = 12;
}

// CmdId: 78
message ClientReconnectNotify {
    ClientReconnectReason reason = 6;
}

// CmdId: 1146
message ClientRemoveCombatEndModifierNotify {
    repeated uint32 combat_end_type_list = 5;
}

// CmdId: 99
message ClientReportNotify {
    string ADIACIPJIPC = 8;
    string CEGFMOJGPAE = 5;
}

// CmdId: 271
message ClientScriptEventNotify {
    uint32 event_type = 9;
    repeated int32 param_list = 13;
    uint32 target_entity_id = 7;
    uint32 source_entity_id = 3;
}

// CmdId: 123
message ClientSetGameTimeReq {
    bool is_force_set = 6;
    uint32 game_time = 5;
    uint32 client_game_time = 14;
}

// CmdId: 130
message ClientSetGameTimeRsp {
    uint32 game_time = 9;
    uint32 client_game_time = 1;
    int32 retcode = 12;
}

// CmdId: 228
message ClientTransmitReq {
    Vector pos = 1;
    uint32 scene_id = 7;
    TransmitReason reason = 9;
    Vector rot = 11;
}

// CmdId: 274
message ClientTransmitRsp {
    int32 retcode = 11;
    TransmitReason reason = 3;
}

// CmdId: 112
message ClientTriggerEventNotify {
    EventTriggerType event_type = 13;
    uint32 force_id = 4;
}

// CmdId: 3168
message CloseCommonTipsNotify {
}

// CmdId: 691
message ClosedItemNotify {
    repeated uint32 item_id_list = 14;
}

// CmdId: 7558
message CMELIOKBBAM {
    string DGMOFIACJEK = 2;
    string HKDJKJDBGIL = 6;
    bool is_success = 14;
}

// CmdId: 22877
message CMGBHAALJIJ {
    repeated uint32 JNLFELKMPPM = 12;
    repeated uint32 NFJHJMKEAEH = 6;
    uint32 level_id = 9;
}

// CmdId: 20910
message CNEDGHOJKNH {
    uint32 score = 2;
    uint32 level_id = 5;
    bool is_success = 7;
}

// CmdId: 4202
message CodexDataFullNotify {
    uint32 IAELPGINMBN = 15;
    repeated CodexTypeData type_data_list = 13;
    repeated uint32 recent_viewed_pushtips_list = 14;
    uint32 PDEMHIKAFGI = 7;
}

// CmdId: 4209
message CodexDataUpdateNotify {
    uint32 id = 13;
    CodexType type = 6;
    uint32 weapon_max_promote_level = 10;
}

message CodexTypeData {
    repeated uint32 codex_id_list = 1;
    map<uint32, uint32> weapon_max_promote_level_map = 10;
    CodexType type = 8;
    repeated bool have_viewed_list = 6;
}

message CODOPGKCNPE {
}

// CmdId: 24962
message CoinCollectCheckDoubleStartPlayReq {
    uint32 level_id = 6;
}

// CmdId: 24937
message CoinCollectCheckDoubleStartPlayRsp {
    uint32 level_id = 8;
    int32 retcode = 11;
}

// CmdId: 23760
message CoinCollectChooseSkillReq {
    uint32 level_id = 15;
    uint32 choose_skill_no = 11;
}

// CmdId: 23686
message CoinCollectChooseSkillRsp {
    uint32 choose_skill_no = 8;
    int32 retcode = 14;
    uint32 level_id = 13;
}

message CoinCollectDetailInfo {
    repeated CoinCollectLevelData level_data_list = 1;
}

// CmdId: 5533
message CoinCollectGallerySettleNotify {
    uint32 multistage_play_index = 9;
    uint32 AJOLCIGIMNA = 8;
    uint32 DKAPCHHJPCM = 6;
    uint32 level_id = 10;
    uint32 EEBBADCOGNG = 5;
    bool is_new_record = 4;
}

// CmdId: 20183
message CoinCollectInterruptPlayReq {
    uint32 gallery_id = 15;
}

// CmdId: 20789
message CoinCollectInterruptPlayRsp {
    uint32 gallery_id = 12;
    int32 retcode = 15;
}

message CoinCollectLevelData {
    uint32 NKDIAHFFCIG = 14;
    uint32 NJHLNPIHHNO = 9;
    repeated CoinCollectTeamInfoData double_best_team_info_list = 12;
    uint32 FNKMLBJPMOK = 5;
    bool HFHAHHODINP = 3;
    CoinCollectTeamInfoData single_best_team_info = 4;
    bool HLDOLEELKOK = 7;
    bool is_level_open = 15;
    uint32 OMIILLBKHFH = 11;
    uint32 level_id = 10;
    uint32 MIBBPBCIIIJ = 8;
    bool CBBHLOABNLE = 6;
}

message CoinCollectOperatorInfo {
    uint32 level_id = 1;
}

message CoinCollectPlayerInfo {
    uint32 choose_skill_no = 12;
    uint32 player_uid = 8;
    repeated CoinCollectTeamAvatarInfo avatar_info_list = 2;
    bool is_prepare = 1;
    string player_name = 15;
}

// CmdId: 23543
message CoinCollectPrepareReq {
}

// CmdId: 20576
message CoinCollectPrepareRsp {
    int32 retcode = 13;
}

// CmdId: 6569
message CoinCollectPrepareStageNotify {
    CoinCollectStageInfo coin_collect_info = 6;
}

message CoinCollectStageInfo {
    repeated CoinCollectPlayerInfo player_info_list = 7;
    uint32 level_id = 4;
    uint32 play_index = 9;
}

message CoinCollectTeamAvatarInfo {
    uint32 costume_id = 10;
    uint32 avatar_id = 1;
}

message CoinCollectTeamInfoData {
    uint32 choose_skill_no = 12;
    uint32 player_uid = 7;
    repeated uint32 avatar_id_list = 8;
    bool is_host = 15;
    repeated uint32 LLOCMGDOEKD = 10;
    repeated uint32 HBDGIIILAFN = 14;
}

message COLODDOIGOI {
    Vector KHIIBCMCNMA = 7;
    uint32 entity_id = 5;
    Vector target_pos = 6;
}

// CmdId: 345
message CombatInvocationsNotify {
    repeated CombatInvokeEntry invoke_list = 13;
}

message CombatInvokeEntry {
    CombatTypeArgument argument_type = 2;
    ForwardType forward_type = 10;
    bytes combat_data = 7;
}

// CmdId: 644
message CombineDataNotify {
    repeated uint32 combine_id_list = 9;
}

// CmdId: 622
message CombineFormulaDataNotify {
    bool is_locked = 7;
    uint32 combine_id = 9;
}

// CmdId: 683
message CombineReq {
    uint32 combine_id = 14;
    uint32 combine_count = 4;
    uint64 avatar_guid = 11;
}

// CmdId: 606
message CombineRsp {
    uint64 avatar_guid = 13;
    uint32 combine_count = 6;
    uint32 combine_id = 7;
    int32 retcode = 2;
    repeated ItemParam IHDOKECEDDF = 9;
    repeated ItemParam cost_item_list = 3;
    repeated ItemParam INKBGEBHDDN = 12;
    repeated ItemParam OIJHNBLLBGE = 11;
    repeated ItemParam DIBLNNKANMM = 10;
}

// CmdId: 8780
message CommonPlayerTipsNotify {
    repeated string text_map_id_list = 14;
    uint32 notify_type = 7;
}

// CmdId: 154
message CompoundDataNotify {
    repeated CompoundQueueData compound_que_data_list = 11;
    repeated uint32 unlock_compound_list = 12;
}

message CompoundQueueData {
    uint32 BIBEPDEFKDP = 1;
    uint32 compound_id = 2;
    uint32 CIBCKFAJLEF = 5;
    uint32 GOMEGAHKEMD = 15;
}

// CmdId: 121
message CompoundUnlockNotify {
    uint32 compound_id = 10;
}

message ContentAuditInfo {
    bool is_open = 1;
    string content = 2;
    uint32 submit_count = 3;
    AuditState audit_state = 4;
    uint32 submit_limit = 5;
}

// CmdId: 181
message CookDataNotify {
    uint32 grade = 7;
    repeated CookRecipeData recipe_data_list = 5;
}

// CmdId: 135
message CookGradeDataNotify {
    uint32 grade = 7;
}

message CookRecipeData {
    uint32 recipe_id = 8;
    uint32 proficiency = 2;
}

// CmdId: 170
message CookRecipeDataNotify {
    CookRecipeData recipe_data = 12;
}

message CoopCg {
    uint32 id = 1;
    bool is_unlock = 7;
}

// CmdId: 1994
message CoopCgShowNotify {
    repeated uint32 cg_list = 4;
}

// CmdId: 1970
message CoopCgUpdateNotify {
    repeated uint32 cg_list = 4;
}

message CoopChapter {
    enum State {

        STATE_CLOSE = 0;
        STATE_COND_NOT_MEET = 1;
        STATE_COND_MEET = 2;
        STATE_ACCEPT = 3;
    }
    uint32 NDGENILJBLM = 4;
    repeated uint32 KAKALNAGLGJ = 7;
    map<uint32, uint32> seen_ending_map = 14;
    repeated CoopReward coop_reward_list = 5;
    repeated CoopPoint coop_point_list = 8;
    repeated uint32 LNOCPBNPHIE = 12;
    uint32 id = 1;
    uint32 EHFGHJDBOLG = 6;
    State state = 2;
    repeated CoopCg coop_cg_list = 10;
}

// CmdId: 1972
message CoopChapterUpdateNotify {
    repeated CoopChapter chapter_list = 12;
}

// CmdId: 1995
message CoopDataNotify {
    bool is_have_progress = 3;
    uint32 cur_coop_point = 13;
    repeated CoopChapter chapter_list = 2;
    repeated uint32 viewed_chapter_list = 10;
}

message CoopPoint {
    enum State {

        STATE_UNSTARTED = 0;
        STATE_STARTED = 1;
        STATE_FINISHED = 2;
    }
    uint32 id = 15;
    State state = 4;
    uint32 self_confidence = 8;
}

// CmdId: 1981
message CoopPointUpdateNotify {
    CoopPoint coop_point = 11;
}

// CmdId: 1998
message CoopProgressUpdateNotify {
    uint32 cur_coop_point = 8;
    bool is_have_progress = 5;
}

message CoopReward {
    enum State {

        STATE_UNLOCK = 0;
        STATE_LOCK = 1;
        STATE_TAKEN = 2;
    }
    uint32 id = 9;
    State state = 14;
}

// CmdId: 1973
message CoopRewardUpdateNotify {
    repeated CoopReward reward_list = 12;
}

message CPIMMDBHJLH {
    Vector pos = 11;
    Vector rot = 1;
}

message CreateEntityInfo {
    uint32 level = 5;
    Vector pos = 6;
    Vector rot = 7;
    uint32 scene_id = 10;
    uint32 room_id = 11;
    uint32 client_unique_id = 12;
    oneof entity {
        uint32 monster_id = 1;
        uint32 npc_id = 2;
        uint32 gadget_id = 3;
        uint32 item_id = 4;
    }
    oneof entity_create_info {
        CreateGadgetInfo gadget = 13;
    }
}

message CreateGadgetInfo {
    message Chest {
        uint32 chest_drop_id = 1;
        bool is_show_cutscene = 2;
    }
    GadgetBornType born_type = 1;
    Chest chest = 2;
}

// CmdId: 318
message CreateMassiveEntityNotify {
    repeated ServerMassiveEntity massive_entity_list = 10;
}

// CmdId: 388
message CreateMassiveEntityReq {
    repeated ClientMassiveEntity massive_entity_list = 2;
}

// CmdId: 349
message CreateMassiveEntityRsp {
    int32 retcode = 3;
}

// CmdId: 839
message CreateVehicleReq {
    Vector rot = 6;
    uint32 scene_point_id = 12;
    uint32 vehicle_id = 8;
    Vector pos = 14;
}

// CmdId: 895
message CreateVehicleRsp {
    uint32 vehicle_id = 11;
    uint32 entity_id = 13;
    int32 retcode = 6;
}

message CrucibleActivityDetailInfo {
    uint32 cost_time = 15;
    uint32 battle_world_level = 12;
    Vector pos = 2;
    repeated CrucibleBattleUidInfo uid_info_list = 9;
}

message CrucibleBattleUidInfo {
    string online_id = 13;
    ProfilePicture profile_picture = 1;
    string nickname = 15;
    uint32 icon = 4;
    uint32 uid = 9;
}

message CrystalLinkActivityDetailInfo {
    uint32 difficulty_id = 6;
    repeated CrystalLinkLevelInfo level_info_list = 11;
}

message CrystalLinkAvatarInfo {
    uint64 avatar_id = 10;
    bool is_trial = 3;
}

message CrystalLinkBuffInfo {
    uint32 OGJBCOGMBLB = 5;
    uint32 HOKBNFIGGLF = 11;
}

message CrystalLinkDungeonAvatarInfo {
    bool is_trial = 13;
    uint64 avatar_guid = 14;
}

// CmdId: 8587
message CrystalLinkDungeonInfoNotify {
    bool is_upper_part = 11;
    uint32 difficulty_id = 7;
    uint32 init_gallery_progress = 9;
    repeated CrystalLinkBuffInfo buff_info_list = 14;
    repeated CrystalLinkDungeonAvatarInfo dungeon_avatar_info_list = 4;
    uint32 level_id = 5;
}

message CrystalLinkDungeonSettleInfo {
    bool JPNNPIBPIIP = 3;
    uint32 difficulty_id = 13;
    bool is_new_record = 10;
    uint32 final_score = 14;
    uint32 EEPIFMDOOHM = 12;
    uint32 level_id = 11;
    uint32 KFACNCAIMAM = 2;
}

// CmdId: 8764
message CrystalLinkEnterDungeonReq {
    uint32 difficulty_id = 2;
    uint32 level_id = 12;
    repeated CrystalLinkTeamInfo team_info_list = 11;
}

// CmdId: 8602
message CrystalLinkEnterDungeonRsp {
    uint32 difficulty_id = 1;
    repeated CrystalLinkTeamInfo team_info_list = 14;
    int32 retcode = 13;
    uint32 level_id = 11;
}

message CrystalLinkLevelInfo {
    uint32 level_id = 12;
    bool is_open = 14;
    repeated CrystalLinkTeamInfo team_info_list = 15;
    uint32 best_score = 13;
}

// CmdId: 8237
message CrystalLinkRestartDungeonReq {
}

// CmdId: 8095
message CrystalLinkRestartDungeonRsp {
    int32 retcode = 11;
}

message CrystalLinkTeamInfo {
    repeated CrystalLinkBuffInfo buff_info_list = 6;
    repeated CrystalLinkAvatarInfo avatar_info_list = 8;
}

message CurVehicleInfo {
    uint32 entity_id = 1;
    uint32 pos = 2;
    uint32 gadget_id = 3;
    Vector DNJIMMEONNI = 4;
    uint32 PDEPBDNGIAB = 5;
    Vector MAKPDIBNPAP = 6;
}

message CustomCommonNodeInfo {
    int32 parent_index = 1;
    uint32 config_id = 2;
    string slot_identifier = 3;
}

message CustomDungeon {
    repeated CustomDungeonRoom room_list = 3;
    CustomDungeonSetting setting = 7;
    uint64 dungeon_guid = 6;
    uint32 dungeon_id = 4;
}

message CustomDungeonAbstract {
    map<uint32, uint32> brick_statistics_map = 11;
    uint32 FLGEIJDLABF = 15;
    uint32 JEJBBAIBLGF = 2;
    uint32 FGHPHCDOPFF = 10;
    uint32 GFLOKGOCOKM = 13;
}

message CustomDungeonBanInfo {
    uint64 dungeon_guid = 6;
    CustomDungeonBanType ban_type = 12;
    uint32 expire_time = 4;
}

// CmdId: 6234
message CustomDungeonBattleRecordNotify {
    uint32 min_cost_time = 7;
    uint64 dungeon_guid = 6;
}

message CustomDungeonBlock {
    Vector rot = 12;
    uint32 block_id = 8;
    uint32 guid = 14;
    Vector pos = 10;
}

message CustomDungeonBrief {
    uint32 dungeon_id = 6;
    CustomDungeonSocial social = 10;
    uint32 battle_min_cost_time = 5;
    repeated uint32 tag_list = 1;
    uint32 last_save_time = 15;
    CustomDungeonState state = 4;
    bool is_psn_platform = 14;
    uint64 dungeon_guid = 3;
    CustomDungeonSetting setting = 12;
    CustomDungeonAbstract abstract = 11;
}

// CmdId: 6213
message CustomDungeonOfficialNotify {
    TryCustomDungeonType try_type = 2;
    EnterCustomDungeonType enter_type = 9;
    repeated uint32 official_black_coin_list = 12;
}

// CmdId: 6207
message CustomDungeonRecoverNotify {
    repeated uint32 official_black_coin_list = 11;
    CustomDungeon custom_dungeon = 14;
    EnterCustomDungeonType enter_type = 2;
    TryCustomDungeonType try_type = 5;
}

message CustomDungeonResultInfo {
    bool OBLLPOAMFKN = 1;
    uint32 got_coin_num = 11;
    CustomDungeonFinishType finish_type = 5;
    uint32 time_cost = 8;
    repeated ChallengeBrief child_challenge_list = 12;
    bool OONBJGKALAO = 6;
    uint64 dungeon_guid = 14;
    bool DEAPGFHKJIJ = 4;
}

message CustomDungeonRoom {
    uint32 room_id = 4;
    repeated CustomDungeonBlock block_list = 3;
}

message CustomDungeonSetting {
    repeated uint32 open_room_list = 8;
    uint32 KBJFGOHNOEO = 10;
    uint32 APHEOMDKFLK = 1;
    bool DEAPGFHKJIJ = 3;
    bool NDCFHNKKAJL = 4;
    uint32 EIAAHAGFACH = 11;
    uint32 DOPLLKGMNLN = 5;
}

message CustomDungeonSocial {
    uint32 PJIGHLFMAEF = 8;
    uint32 JGPFCECDGAA = 2;
    uint32 BCHJNCGHBJD = 10;
    uint32 PNGKDOCLNPN = 11;
}

// CmdId: 6243
message CustomDungeonUpdateNotify {
    CustomDungeonBrief dungeon_brief = 14;
}

message CustomGadgetTreeInfo {
    repeated CustomCommonNodeInfo node_list = 1;
}

// CmdId: 261
message CutSceneBeginNotify {
    uint32 cutscene_id = 6;
    bool is_wait_others = 7;
    repeated CutSceneExtraParam extra_param_list = 3;
}

// CmdId: 203
message CutSceneEndNotify {
    int32 retcode = 14;
    uint32 cutscene_id = 8;
}

message CutSceneExtraParam {
    repeated double detail_param_list = 1;
}

// CmdId: 210
message CutSceneFinishNotify {
    uint32 cutscene_id = 10;
}

message CylinderRegionSize {
    float height = 3;
    float radius = 15;
}

message DailyDungeonEntryInfo {
    uint32 recommend_dungeon_id = 11;
    DungeonEntryInfo recommend_dungeon_entry_info = 12;
    uint32 BKPHNNDJJDM = 13;
    uint32 LNDLCHHFFEA = 14;
}

// CmdId: 158
message DailyTaskDataNotify {
    uint32 score_reward_id = 1;
    bool is_taken_score_reward = 6;
    uint32 finished_num = 8;
}

// CmdId: 180
message DailyTaskFilterCityReq {
    uint32 city_id = 1;
}

// CmdId: 153
message DailyTaskFilterCityRsp {
    uint32 city_id = 9;
    int32 retcode = 8;
}

message DailyTaskInfo {
    bool is_finished = 12;
    uint32 daily_task_id = 6;
    uint32 finish_progress = 5;
    uint32 progress = 11;
    uint32 reward_id = 2;
}

// CmdId: 115
message DailyTaskProgressNotify {
    DailyTaskInfo info = 8;
}

// CmdId: 126
message DailyTaskScoreRewardNotify {
    uint32 reward_id = 11;
}

// CmdId: 105
message DailyTaskUnlockedCitiesNotify {
    repeated uint32 unlocked_city_list = 6;
}

// CmdId: 118
message DataResVersionNotify {
    enum DataResVersionOpType {

        OP_TYPE_NONE = 0;
        OP_TYPE_RELOGIN = 1;
        OP_TYPE_MP_RELOGIN = 2;
    }
    string KJJAIPPKFCI = 8;
    uint32 client_silence_data_version = 6;
    string client_silence_version_suffix = 9;
    ResVersionConfig res_version_config = 7;
    bool is_data_need_relogin = 3;
    string CLDKNBOLOEN = 5;
    DataResVersionOpType op_type = 1;
    uint32 client_data_version = 2;
    string client_version_suffix = 14;
}

message DCJBJCDFAAE {
    repeated string ADIJKDFNCFA = 9;
    uint32 IKMJBKDKOIE = 3;
    uint32 PBKPICHJHBL = 6;
}

// CmdId: 24889
message DCJEGFPGKEF {
    uint32 level_id = 15;
}

// CmdId: 24406
message DDHHEKPMCJA {
    int32 retcode = 6;
}

// CmdId: 4041
message DealAddFriendReq {
    uint32 target_uid = 8;
    DealAddFriendResultType deal_add_friend_result = 5;
}

// CmdId: 4072
message DealAddFriendRsp {
    DealAddFriendResultType deal_add_friend_result = 7;
    int32 retcode = 8;
    uint32 target_uid = 1;
}

message DeathZoneInfo {
    uint32 id = 6;
    bool is_open = 15;
}

// CmdId: 6266
message DeathZoneInfoNotify {
    repeated DeathZoneInfo death_zone_info_list = 2;
}

// CmdId: 3139
message DeathZoneObserveNotify {
    uint32 source_entity_id = 13;
    uint32 target_entity_id = 12;
}

// CmdId: 23245
message DECAIBABCPP {
    uint32 level_id = 12;
    uint32 cost_time = 13;
    bool is_new_record = 9;
    bool is_succ = 3;
    uint32 difficulty_level = 11;
}

// CmdId: 1680
message DelBackupAvatarTeamReq {
    uint32 backup_avatar_team_id = 10;
}

// CmdId: 1733
message DelBackupAvatarTeamRsp {
    uint32 backup_avatar_team_id = 13;
    int32 retcode = 10;
}

// CmdId: 4094
message DeleteFriendNotify {
    uint32 target_uid = 9;
}

// CmdId: 4059
message DeleteFriendReq {
    uint32 target_uid = 12;
}

// CmdId: 4078
message DeleteFriendRsp {
    int32 retcode = 10;
    uint32 target_uid = 9;
}

message DeliveryActivityDetailInfo {
    bool is_taken_reward = 3;
    uint32 day_index = 5;
    repeated uint32 finished_delivery_quest_index = 14;
}

// CmdId: 1456
message DelMailReq {
    repeated uint32 mail_id_list = 1;
}

// CmdId: 1441
message DelMailRsp {
    repeated uint32 mail_id_list = 11;
    int32 retcode = 7;
}

// CmdId: 3234
message DelScenePlayTeamEntityNotify {
    repeated uint32 del_entity_id_list = 3;
    uint32 scene_id = 7;
}

// CmdId: 340
message DelTeamEntityNotify {
    repeated uint32 del_entity_id_list = 1;
    uint32 scene_id = 8;
}

message DeshretObeliskChestInfo {
    uint32 config_id = 11;
    Vector pos = 6;
    uint32 group_id = 4;
    uint32 scene_id = 5;
}

// CmdId: 843
message DeshretObeliskChestInfoNotify {
    repeated DeshretObeliskChestInfo chest_info_list = 14;
}

message DeshretObeliskGadgetInfo {
    repeated uint32 argument_list = 1;
}

// CmdId: 358
message DestroyMassiveEntityNotify {
    repeated ClientMassiveEntity massive_entity_list = 3;
}

// CmdId: 601
message DestroyMaterialReq {
    repeated MaterilaInfo material_list = 8;
}

// CmdId: 669
message DestroyMaterialRsp {
    repeated uint32 item_id_list = 3;
    repeated uint32 item_count_list = 7;
    int32 retcode = 14;
}

// CmdId: 130
message DFPBHODHPKM {
    uint32 game_time = 9;
    uint32 client_game_time = 1;
    int32 retcode = 12;
}

message DGJFFNNBPND {
    repeated Vector DOOCCGPHAEG = 12;
}

message DGNCNCCLGEK {
    Vector target_pos = 10;
    Vector HKBOHPAPLMF = 14;
}

// CmdId: 8545
message DigActivityChangeGadgetStateReq {
    uint32 entity_id = 8;
}

// CmdId: 8312
message DigActivityChangeGadgetStateRsp {
    uint32 entity_id = 14;
    int32 retcode = 15;
}

message DigActivityDetailInfo {
    repeated uint32 stage_id_list = 3;
    uint32 stage_id = 4;
    repeated DigMarkPoint dig_mark_point_list = 5;
}

// CmdId: 8576
message DigActivityMarkPointChangeNotify {
    repeated DigMarkPoint dig_mark_point_list = 9;
}

message DigMarkPoint {
    uint32 bundle_id = 1;
    Vector rot = 7;
    Vector pos = 2;
}

// CmdId: 6159
message DIJAILOHJEA {
    bool AHDBAKJJBNC = 11;
}

message DIJILDLCPLG {
    uint32 start_time = 15;
}

// CmdId: 23859
message DIOKGLJIAMG {
}

// CmdId: 8604
message DisableRoguelikeTrapNotify {
    uint32 card_id = 3;
}

message DKFDACEPNAL {
    repeated uint32 PJIFOALHIHM = 8;
    uint32 level_id = 5;
    uint32 FKPECBDMBFD = 15;
    repeated uint32 PLPFFBIBHPB = 14;
}

// CmdId: 21932
message DNKBHCGAALL {
    int32 retcode = 15;
}

// CmdId: 7520
message DOBDAICHFII {
}

// CmdId: 21801
message DOFGFCEODEN {
    uint32 gallery_id = 11;
}

// CmdId: 1589
message DoGachaReq {
    uint32 PAHELCJNHAH = 5;
    uint32 AOLMBNPLFEO = 6;
    string gacha_tag = 1;
    uint32 KJPOJHMDBNE = 12;
    uint32 EJKJHLLCHMC = 2;
}

// CmdId: 1576
message DoGachaRsp {
    bool HFEKPDOKLDK = 823;
    uint32 AOLMBNPLFEO = 7;
    uint32 KDFPKENAIOJ = 5;
    bool PKOIBFIOLAO = 651;
    uint32 DKCIEKFPMCG = 8;
    repeated GachaItem gacha_item_list = 4;
    int32 retcode = 10;
    uint32 EJKJHLLCHMC = 9;
    uint32 JICLMBKMGCG = 1;
    uint32 PELOHDIKFAM = 845;
    uint32 FBIDPNFLBJL = 14;
    uint32 EAGFIDHCDPD = 3;
    uint32 BIPHOPJBNHC = 15;
    uint32 KJPOJHMDBNE = 2;
    uint32 KKDFKKEMEBA = 12;
    uint32 PKPENDLDPKI = 965;
    uint32 FIHHLGMNIDM = 11;
    uint32 OKKJEHDBIHK = 6;
    uint32 FBILBJNNIKE = 13;
}

// CmdId: 8034
message DoRoguelikeDungeonCardGachaReq {
    uint32 dungeon_id = 15;
    uint32 cell_id = 1;
}

// CmdId: 8270
message DoRoguelikeDungeonCardGachaRsp {
    bool is_can_refresh = 3;
    repeated uint32 card_list = 6;
    int32 retcode = 14;
}

// CmdId: 182
message DoSetPlayerBornDataNotify {
}

// CmdId: 5472
message DraftGuestReplyInviteNotify {
    uint32 guest_uid = 15;
    uint32 draft_id = 8;
    bool is_agree = 6;
}

// CmdId: 5456
message DraftGuestReplyInviteReq {
    bool is_agree = 2;
    uint32 draft_id = 5;
}

// CmdId: 5441
message DraftGuestReplyInviteRsp {
    uint32 draft_id = 4;
    bool is_agree = 6;
    int32 retcode = 5;
}

// CmdId: 5465
message DraftGuestReplyTwiceConfirmNotify {
    uint32 draft_id = 2;
    bool is_agree = 11;
    uint32 guest_uid = 8;
}

// CmdId: 5459
message DraftGuestReplyTwiceConfirmReq {
    uint32 draft_id = 14;
    bool is_agree = 5;
}

// CmdId: 5478
message DraftGuestReplyTwiceConfirmRsp {
    int32 retcode = 3;
    bool is_agree = 2;
    uint32 draft_id = 8;
}

message DraftInviteFailInfo {
    DraftInviteFailReason reason = 4;
    uint32 uid = 5;
}

// CmdId: 5492
message DraftInviteResultNotify {
    bool is_all_argee = 8;
    uint32 draft_id = 12;
}

// CmdId: 5416
message DraftOwnerInviteNotify {
    uint32 draft_id = 4;
    uint32 invite_deadline_time = 1;
}

// CmdId: 5489
message DraftOwnerStartInviteReq {
    uint32 draft_id = 8;
}

// CmdId: 5476
message DraftOwnerStartInviteRsp {
    uint32 wrong_uid = 5;
    repeated DraftInviteFailInfo invite_fail_info_list = 3;
    int32 retcode = 15;
    uint32 draft_id = 1;
}

// CmdId: 5463
message DraftOwnerTwiceConfirmNotify {
    uint32 draft_id = 4;
    uint32 twice_confirm_deadline_time = 15;
}

// CmdId: 5412
message DraftTwiceConfirmResultNotify {
    bool is_all_argee = 14;
    uint32 draft_id = 3;
}

message DragonSpineActivityDetailInfo {
    bool is_content_closed = 12;
    uint32 NILJOOOPIFO = 1;
    uint32 FKEHKLEBJOD = 9;
    repeated DragonSpineChapterInfo chapter_info_list = 3;
    uint32 LGLLMPAPONN = 11;
    uint32 EDDLIDNEOHG = 10;
    uint32 weapon_enhance_level = 7;
}

// CmdId: 2180
message DragonSpineChapterFinishNotify {
    uint32 chapter_id = 2;
    uint32 schedule_id = 6;
    uint32 weapon_enhance_level = 13;
}

message DragonSpineChapterInfo {
    uint32 progress = 6;
    uint32 chapter_id = 14;
    bool is_open = 13;
    uint32 open_time = 2;
    uint32 finished_mission_num = 7;
}

// CmdId: 2075
message DragonSpineChapterOpenNotify {
    uint32 chapter_id = 6;
    uint32 schedule_id = 13;
}

// CmdId: 2194
message DragonSpineChapterProgressChangeNotify {
    uint32 cur_progress = 7;
    uint32 schedule_id = 3;
    uint32 chapter_id = 10;
}

// CmdId: 2151
message DragonSpineCoinChangeNotify {
    uint32 schedule_id = 6;
    uint32 LGLLMPAPONN = 4;
    uint32 FKEHKLEBJOD = 2;
    uint32 NILJOOOPIFO = 5;
}

// CmdId: 633
message DropHintNotify {
    Vector position = 6;
    repeated uint32 item_id_list = 12;
}

// CmdId: 663
message DropItemReq {
    Vector pos = 14;
    uint64 guid = 13;
    uint32 count = 5;
    StoreType store_type = 9;
}

// CmdId: 659
message DropItemRsp {
    StoreType store_type = 3;
    uint64 guid = 4;
    int32 retcode = 5;
}

// CmdId: 21698
message DuelHeartCgEndNotify {
}

message DuelHeartDetailInfo {
    repeated DuelHeartLevelInfo level_info_list = 4;
}

// CmdId: 20812
message DuelHeartEnterDungeonReq {
    uint32 level_id = 4;
}

// CmdId: 23202
message DuelHeartEnterDungeonRsp {
    int32 retcode = 2;
}

message DuelHeartLevelDifficultyInfo {
    uint32 cost_time = 5;
    uint32 difficulty = 11;
    bool is_open = 3;
}

message DuelHeartLevelInfo {
    repeated DuelHeartLevelDifficultyInfo difficulty_info_list = 15;
    uint32 level_id = 9;
    bool is_open = 10;
    bool is_cg_viewed = 4;
}

// CmdId: 20618
message DuelHeartRestartDungeonReq {
}

// CmdId: 23127
message DuelHeartRestartDungeonRsp {
    int32 retcode = 7;
}

// CmdId: 24776
message DuelHeartSelectDifficultyReq {
    uint32 difficulty = 7;
}

// CmdId: 22574
message DuelHeartSelectDifficultyRsp {
    int32 retcode = 12;
}

// CmdId: 24252
message DuelHeartSettleNotify {
    bool is_new_record = 5;
    bool is_succ = 12;
    uint32 cost_time = 15;
}

message DungeonCandidateTeamAvatar {
    uint32 player_uid = 10;
    AvatarInfo avatar_info = 15;
}

// CmdId: 973
message DungeonCandidateTeamChangeAvatarReq {
    repeated uint64 avatar_guid_list = 4;
}

// CmdId: 988
message DungeonCandidateTeamChangeAvatarRsp {
    int32 retcode = 3;
}

// CmdId: 981
message DungeonCandidateTeamCreateReq {
    uint32 dungeon_id = 12;
    uint32 point_id = 13;
}

// CmdId: 970
message DungeonCandidateTeamCreateRsp {
    int32 retcode = 14;
}

// CmdId: 997
message DungeonCandidateTeamDismissNotify {
    DungeonCandidateTeamDismissReason reason = 15;
    uint32 player_uid = 11;
}

// CmdId: 995
message DungeonCandidateTeamInfoNotify {
    repeated DungeonCandidateTeamAvatar avatar_list = 5;
    map<uint32, DungeonCandidateTeamPlayerState> player_state_map = 8;
    uint32 match_type = 7;
    repeated uint32 ready_player_uid = 2;
    uint32 dungeon_id = 10;
}

// CmdId: 950
message DungeonCandidateTeamInviteNotify {
    uint32 dungeon_id = 12;
    uint32 player_uid = 6;
    uint32 vaild_deadline_time_sec = 14;
}

// CmdId: 935
message DungeonCandidateTeamInviteReq {
    repeated uint32 player_uids = 4;
}

// CmdId: 933
message DungeonCandidateTeamInviteRsp {
    repeated uint32 invalid_player_uids = 5;
    int32 retcode = 12;
}

// CmdId: 983
message DungeonCandidateTeamKickReq {
    uint32 player_uid = 5;
}

// CmdId: 906
message DungeonCandidateTeamKickRsp {
    int32 retcode = 6;
}

// CmdId: 904
message DungeonCandidateTeamLeaveReq {
}

// CmdId: 954
message DungeonCandidateTeamLeaveRsp {
    int32 retcode = 1;
}

// CmdId: 998
message DungeonCandidateTeamPlayerLeaveNotify {
    uint32 player_uid = 2;
    DungeonCandidateTeamPlayerLeaveReason reason = 9;
}

// CmdId: 948
message DungeonCandidateTeamRefuseNotify {
    uint32 player_uid = 15;
}

// CmdId: 943
message DungeonCandidateTeamReplyInviteReq {
    bool is_accept = 7;
}

// CmdId: 929
message DungeonCandidateTeamReplyInviteRsp {
    int32 retcode = 14;
    bool is_trans_point = 6;
}

// CmdId: 969
message DungeonCandidateTeamSetChangingAvatarReq {
    bool is_changing_avatar = 9;
}

// CmdId: 932
message DungeonCandidateTeamSetChangingAvatarRsp {
    int32 retcode = 1;
}

// CmdId: 928
message DungeonCandidateTeamSetReadyReq {
    bool is_ready = 1;
}

// CmdId: 974
message DungeonCandidateTeamSetReadyRsp {
    int32 retcode = 5;
}

// CmdId: 982
message DungeonChallengeBeginNotify {
    uint32 father_index = 1;
    uint32 challenge_id = 3;
    repeated uint32 uid_list = 9;
    repeated uint32 param_list = 6;
    uint32 challenge_index = 13;
    uint32 group_id = 2;
}

// CmdId: 942
message DungeonChallengeFinishNotify {
    uint32 MDLNIEHGHHD = 3;
    uint32 JGEIIGFGNJG = 6;
    uint32 time_cost = 5;
    uint32 challenge_index = 14;
    ChallengeFinishType finish_type = 7;
    bool is_success = 2;
    map<uint32, StrengthenPointData> strengthen_point_data_map = 13;
    bool is_new_record = 8;
    oneof detail {
        ChannellerSlabLoopDungeonResultInfo channeller_slab_loop_dungeon_result_info = 357;
        EffigyChallengeDungeonResultInfo effigy_challenge_dungeon_result_info = 1482;
        PotionDungeonResultInfo potion_dungeon_result_info = 507;
        CustomDungeonResultInfo custom_dungeon_result_info = 806;
    }
}

// CmdId: 946
message DungeonDataNotify {
    map<uint32, uint32> dungeon_data_map = 10;
}

// CmdId: 978
message DungeonDieOptionReq {
    PlayerDieOption die_option = 1;
    bool is_quit_immediately = 11;
}

// CmdId: 912
message DungeonDieOptionRsp {
    int32 retcode = 3;
    uint32 revive_count = 12;
    PlayerDieOption die_option = 9;
}

message DungeonEnterPosInfo {
    uint32 quest_id = 8;
    uint32 point_id = 15;
}

message DungeonEntryCond {
    DungeonEntryBlockReason cond_reason = 2;
    uint32 param1 = 12;
}

message DungeonEntryInfo {
    uint32 end_time = 3;
    uint32 dungeon_id = 6;
    uint32 start_time = 11;
    WeeklyBossResinDiscountInfo weekly_boss_resin_discount_info = 10;
    uint32 HKBNEBOAMDI = 2;
    bool is_passed = 1;
    uint32 NBLOOGCGMEE = 15;
    uint32 next_refresh_time = 9;
    uint32 MGMCKOOBFBJ = 13;
}

// CmdId: 990
message DungeonEntryInfoReq {
    repeated Uint32Pair scene_point_id_list = 14;
    uint32 scene_id = 3;
    uint32 point_id = 2;
}

// CmdId: 996
message DungeonEntryInfoRsp {
    repeated DungeonEntryPointInfo dungeon_entry_point_list = 7;
    uint32 recommend_dungeon_id = 2;
    uint32 point_id = 8;
    int32 retcode = 5;
    repeated DungeonEntryInfo dungeon_entry_list = 9;
}

message DungeonEntryPointInfo {
    uint32 recommend_dungeon_id = 11;
    uint32 point_id = 12;
    uint32 scene_id = 8;
    repeated DungeonEntryInfo dungeon_entry_list = 4;
}

// CmdId: 3241
message DungeonEntryToBeExploreNotify {
    uint32 LNDLCHHFFEA = 12;
    uint32 scene_id = 11;
    uint32 OLGJHFAHKNA = 3;
}

// CmdId: 977
message DungeonFollowNotify {
    uint32 target_uid = 13;
}

// CmdId: 986
message DungeonGetStatueDropReq {
}

// CmdId: 951
message DungeonGetStatueDropRsp {
    int32 retcode = 9;
}

// CmdId: 926
message DungeonInterruptChallengeReq {
    uint32 challenge_index = 5;
    uint32 group_id = 12;
    uint32 challenge_id = 6;
}

// CmdId: 940
message DungeonInterruptChallengeRsp {
    int32 retcode = 15;
    uint32 challenge_index = 13;
    uint32 challenge_id = 3;
    uint32 group_id = 5;
}

// CmdId: 959
message DungeonPlayerDieNotify {
    uint32 murderer_entity_id = 6;
    uint32 dungeon_id = 13;
    map<uint32, StrengthenPointData> strengthen_point_data_map = 2;
    uint32 revive_count = 11;
    uint32 wait_time = 1;
    PlayerDieType die_type = 4;
    oneof entity {
        uint32 monster_id = 14;
        uint32 gadget_id = 9;
    }
}

// CmdId: 999
message DungeonPlayerDieReq {
    uint32 dungeon_id = 8;
    PlayerDieType die_type = 13;
}

// CmdId: 975
message DungeonPlayerDieRsp {
    int32 retcode = 6;
}

message DungeonPreloadMonsterNotify {
    repeated PlatformType platform_list = 14;
    repeated uint32 monster_id_list = 7;
}

// CmdId: 1000
message DungeonRestartInviteNotify {
    uint32 point_id = 7;
    uint32 player_uid = 9;
    uint32 cd = 15;
    uint32 dungeon_id = 6;
}

// CmdId: 924
message DungeonRestartInviteReplyNotify {
    bool is_accept = 2;
    uint32 player_uid = 11;
}

// CmdId: 957
message DungeonRestartInviteReplyReq {
    bool is_accept = 1;
}

// CmdId: 937
message DungeonRestartInviteReplyRsp {
    bool is_accept = 4;
    int32 retcode = 15;
    bool is_trans_point = 3;
}

// CmdId: 934
message DungeonRestartReq {
}

// CmdId: 901
message DungeonRestartResultNotify {
    bool is_add_accpet = 12;
}

// CmdId: 964
message DungeonRestartRsp {
    uint32 dungeon_id = 3;
    uint32 point_id = 12;
    int32 retcode = 6;
}

// CmdId: 927
message DungeonReviseLevelNotify {
    uint32 HFGFELKHDDK = 4;
    uint32 JHNHKIBHLBA = 12;
    uint32 dungeon_id = 11;
}

message DungeonSettleExhibitionInfo {
    OnlinePlayerInfo player_info = 9;
    repeated ExhibitionDisplayInfo card_list = 11;
}

// CmdId: 963
message DungeonSettleNotify {
    uint32 use_time = 5;
    uint32 CHNDMCHIOON = 9;
    map<uint32, ParamList> settle_show = 14;
    map<uint32, StrengthenPointData> strengthen_point_data_map = 8;
    uint32 close_time = 13;
    uint32 dungeon_id = 7;
    repeated DungeonSettleExhibitionInfo exhibition_info_list = 11;
    bool is_success = 2;
    repeated uint32 fail_cond_list = 12;
    uint32 BBMMPMLBGJO = 10;
    oneof detail {
        TowerLevelEndNotify tower_level_end_notify = 1587;
        TrialAvatarFirstPassDungeonNotify trial_avatar_first_pass_dungeon_notify = 1512;
        ChannellerSlabLoopDungeonResultInfo channeller_slab_loop_dungeon_result_info = 859;
        EffigyChallengeDungeonResultInfo effigy_challenge_dungeon_result_info = 1855;
        RoguelikeDungeonSettleInfo roguelike_dungeon_settle_info = 545;
        CrystalLinkDungeonSettleInfo crystal_link_settle_info = 2022;
        SummerTimeV2DungeonSettleInfo summer_time_v2_dungeon_settle_info = 1728;
        InstableSprayDungeonSettleInfo instable_spray_settle_info = 1011;
        WindFieldDungeonSettleInfo wind_field_dungeon_settle_info = 1924;
        EffigyChallengeV2SettleInfo effigy_challenge_v2_settle_info = 1147;
        TeamChainSettleInfo team_chain_settle_info = 571;
        PacmanSettleInfo pacman_settle_info = 1998;
        FungusFighterV2SettleInfo fungus_fighter_v2_settle_info = 1012;
    }
}

// CmdId: 965
message DungeonShowReminderNotify {
    uint32 reminder_id = 14;
}

// CmdId: 958
message DungeonSlipRevivePointActivateReq {
    uint32 slip_revive_point_id = 13;
}

// CmdId: 915
message DungeonSlipRevivePointActivateRsp {
    int32 retcode = 10;
    uint32 slip_revive_point_id = 3;
}

// CmdId: 972
message DungeonWayPointActivateReq {
    uint32 way_point_id = 14;
}

// CmdId: 992
message DungeonWayPointActivateRsp {
    int32 retcode = 11;
    uint32 way_point_id = 10;
}

// CmdId: 941
message DungeonWayPointNotify {
    repeated uint32 active_way_point_list = 13;
    bool is_add = 14;
}

message DynamicLayerNodes {
    repeated DynamicSVONode nodes = 15;
    int32 level = 7;
}

message DynamicNodes {
    repeated DynamicLayerNodes nodes = 10;
}

message DynamicSVONode {
    int32 area = 13;
    int64 index = 1;
    Vector refer_pos = 2;
}

message EBEODFKDGGJ {
    repeated uint32 OMMLDNFAMEM = 12;
    repeated uint32 DINMKMCHIDJ = 10;
}

// CmdId: 86
message EchoNotify {
    uint32 seq_id = 4;
    string content = 5;
}

message EchoShellDetailInfo {
    repeated SummerTimeDungeonInfo summer_time_dungeon_list = 9;
    repeated uint32 BILGGOLGCFE = 1;
    repeated uint32 PJKNNNDABLD = 11;
    repeated uint32 OEMMMBBPCIL = 12;
}

message EchoShellInfo {
    uint32 shell_id = 1;
}

// CmdId: 8630
message EchoShellTakeRewardReq {
    uint32 reward_id = 8;
}

// CmdId: 8606
message EchoShellTakeRewardRsp {
    uint32 reward_id = 8;
    int32 retcode = 10;
}

// CmdId: 8192
message EchoShellUpdateNotify {
    uint32 shell_id = 11;
}

message EDMJNBHHJBI {
    uint32 LOKIKODDHJF = 1;
    uint32 FDDPPBHHOBH = 2;
    uint32 JMLLNBJFIAM = 3;
    uint32 CINPMJNPEMH = 4;
    uint32 KOBNFIIHJEH = 5;
    uint64 JJNDMDLGMNO = 6;
    uint32 IFJIEDHNCFA = 11;
    uint32 HOLLPGHAFJE = 12;
    uint32 NBHMGHLBFOH = 13;
    uint64 HIMHGMGJDEF = 21;
    uint32 PIFAJPHHLMA = 22;
    map<uint32, uint32> MBCFIHHAAOH = 23;
    uint32 OBHPANKGBPH = 24;
    uint32 LIKPLBMKHDC = 31;
    uint32 NIDJJPBODBF = 32;
    map<uint32, uint32> CMNLANNJDPB = 33;
    bool JEDBFLGNENO = 34;
    uint32 ELHALOBGJBK = 35;
}

message EEKGPJAAGNH {
    uint32 guid = 12;
    Vector pos = 7;
    Vector rot = 14;
    uint32 block_id = 9;
}

message EffigyActivityDetailInfo {
    repeated uint32 taken_reward_index_list = 6;
    uint32 last_difficulty_id = 12;
    repeated EffigyDailyInfo daily_info_list = 3;
    uint32 cur_score = 9;
}

message EffigyChallengeDungeonResultInfo {
    uint32 challenge_max_score = 11;
    uint32 challenge_id = 13;
    bool is_success = 5;
    bool is_in_time_limit = 4;
    uint32 challenge_score = 14;
}

// CmdId: 2039
message EffigyChallengeInfoNotify {
    uint32 challenge_score = 1;
    uint32 challenge_id = 14;
    repeated uint32 condition_id_list = 7;
    uint32 difficulty_id = 6;
}

// CmdId: 2200
message EffigyChallengeResultNotify {
    uint32 challenge_max_score = 13;
    bool is_success = 1;
    uint32 challenge_id = 3;
    uint32 challenge_score = 12;
}

// CmdId: 20761
message EffigyChallengeV2ChooseSkillReq {
    uint32 level_id = 5;
    uint32 challenge_mode_skill_no = 1;
}

// CmdId: 20946
message EffigyChallengeV2ChooseSkillRsp {
    uint32 level_id = 7;
    int32 retcode = 14;
    uint32 challenge_mode_skill_no = 9;
}

message EffigyChallengeV2DetailInfo {
    repeated EffigyChallengeV2LevelData level_data_list = 8;
}

// CmdId: 24928
message EffigyChallengeV2DungeonInfoNotify {
    uint32 skill_no = 2;
    uint32 challenge_mode_difficulty = 14;
    uint32 level_id = 15;
}

// CmdId: 21076
message EffigyChallengeV2EnterDungeonReq {
    uint32 level_id = 4;
    uint32 challenge_mode_skill_no = 12;
    uint32 challenge_mode_difficulty = 13;
}

// CmdId: 23071
message EffigyChallengeV2EnterDungeonRsp {
    uint32 level_id = 9;
    uint32 challenge_mode_difficulty = 2;
    uint32 challenge_mode_skill_no = 3;
    int32 retcode = 13;
}

message EffigyChallengeV2LevelData {
    uint32 ONCDLGPLMIB = 9;
    uint32 level_id = 3;
    uint32 ENDDPMODPCG = 14;
    uint32 PHEIGICNDCJ = 8;
    uint32 NNJLOECKLOM = 2;
    bool is_level_open = 4;
}

// CmdId: 21526
message EffigyChallengeV2RestartDungeonReq {
}

// CmdId: 22894
message EffigyChallengeV2RestartDungeonRsp {
    int32 retcode = 5;
}

message EffigyChallengeV2SettleInfo {
    uint32 AAJHMCMOPPK = 6;
    bool BJEHPHPGLFG = 5;
    uint32 challenge_mode_difficulty = 7;
    bool PBHJDAKBIDJ = 12;
    uint32 DHPALCOAOJL = 14;
    uint32 JMPHBGFNOHF = 3;
}

message EffigyDailyInfo {
    uint32 challenge_max_score = 11;
    uint32 EJIHDCNMFEE = 10;
    uint32 begin_time = 1;
    uint32 day_index = 4;
    bool is_first_pass_reward_taken = 3;
    uint32 challenge_id = 9;
    uint32 BHJHCPLKIMJ = 5;
}

// CmdId: 4870
message EGBCJEGNFBG {
    bool is_agreed = 9;
    uint32 apply_uid = 5;
}

message EGEPEDLDPDF {
    bool LOODAJFNACE = 8;
}

message EJJJHKGPDAF {
    float NFODLGCLNPJ = 3;
}

// CmdId: 21504
message EJLEHCFOMPK {
    uint64 ugc_guid = 14;
    int32 retcode = 5;
    uint32 music_basic_id = 12;
}

// CmdId: 5529
message EKIOINEMBPA {
    uint32 gallery_id = 5;
    uint32 score = 8;
    bool is_success = 10;
    uint32 HNLOMLFJMEF = 11;
    uint32 NLGJGLMEKEH = 12;
    uint32 ACNDNNIEIIF = 1;
    bool DJKEDCHCCLI = 15;
}

message ElectroherculesBattleDetailInfo {
    repeated ElectroherculesBattleStageInfo stage_info_list = 8;
    bool HKKDKNFIKKN = 13;
}

message ElectroherculesBattleLevelInfo {
    bool is_finish = 4;
    uint32 min_finish_time = 14;
    uint32 level_id = 13;
}

// CmdId: 24308
message ElectroherculesBattleSelectDifficultyReq {
    uint32 stage_id = 12;
    uint32 diffculty = 7;
}

// CmdId: 21035
message ElectroherculesBattleSelectDifficultyRsp {
    uint32 gallery_id = 9;
    uint32 diffculty = 10;
    int32 retcode = 8;
    uint32 stage_id = 4;
}

// CmdId: 22145
message ElectroherculesBattleSettleNotify {
    uint32 diffculty = 2;
    bool LIEHECKPKDA = 6;
    bool is_new_record = 7;
    bool is_succ = 15;
    uint32 finish_time = 8;
    uint32 stage_id = 5;
    uint32 gallery_id = 14;
}

message ElectroherculesBattleStageInfo {
    bool is_stage_open = 11;
    uint32 stage_id = 15;
    repeated ElectroherculesBattleLevelInfo level_info_list = 6;
}

message ElementReliquaryRequest {
	uint32 element_type = 2;
	uint32 equip_type = 6;
}

message ElementReliquaryResponse {
	uint32 element_type = 4;
	repeated GameplayRecommendationReliquaryMainPropData nbbpegfkpac = 3;
	uint32 equip_type = 7;
}

// CmdId: 24818
message EMMNAJMFCBC {
    uint32 level_id = 9;
}

// CmdId: 226
message EndCameraSceneLookNotify {
}

// CmdId: 20710
message EndCoinCollectPlaySingleModeReq {
    uint32 multistage_play_index = 7;
}

// CmdId: 23912
message EndCoinCollectPlaySingleModeRsp {
    int32 retcode = 15;
}

// CmdId: 23718
message ENKAIAJHBOL {
}

// CmdId: 8342
message EnterChessDungeonReq {
    uint32 map_id = 13;
}

// CmdId: 8628
message EnterChessDungeonRsp {
    int32 retcode = 14;
    uint32 map_id = 7;
}

// CmdId: 6209
message EnterCustomDungeonReq {
    uint32 dungeon_id = 7;
    uint64 dungeon_guid = 11;
    EnterCustomDungeonType enter_type = 1;
}

// CmdId: 6216
message EnterCustomDungeonRsp {
    map<uint32, uint32> room_cost_map = 8;
    CustomDungeon custom_dungeon = 15;
    EnterCustomDungeonType enter_type = 11;
    int32 retcode = 4;
}

// CmdId: 5809
message EnterFishingReq {
    uint32 fish_pool_id = 12;
}

// CmdId: 5816
message EnterFishingRsp {
    uint32 fish_pool_id = 13;
    int32 retcode = 15;
}

// CmdId: 24171
message EnterFungusFighterPlotDungeonReq {
    repeated uint32 fungus_id_list = 15;
    uint32 dungeon_id = 12;
}

// CmdId: 24284
message EnterFungusFighterPlotDungeonRsp {
    repeated uint32 fungus_id_list = 4;
    uint32 dungeon_id = 8;
    int32 retcode = 9;
}

// CmdId: 23230
message EnterFungusFighterTrainingDungeonReq {
    uint32 dungeon_id = 4;
}

// CmdId: 24555
message EnterFungusFighterTrainingDungeonRsp {
    int32 retcode = 1;
    uint32 dungeon_id = 11;
}

// CmdId: 8010
message EnterIrodoriChessDungeonReq {
    uint32 level_id = 15;
    bool is_hard_map = 3;
}

// CmdId: 8056
message EnterIrodoriChessDungeonRsp {
    int32 retcode = 7;
    bool is_hard_map = 10;
    uint32 level_id = 4;
}

// CmdId: 3959
message EnterMechanicusDungeonReq {
    uint32 difficult_level = 12;
}

// CmdId: 3978
message EnterMechanicusDungeonRsp {
    uint32 wrong_uid = 13;
    int32 retcode = 8;
    uint32 difficult_level = 2;
    uint32 dungeon_id = 7;
}

// CmdId: 8665
message EnterRogueDiaryDungeonReq {
    repeated RogueDiaryAvatar chosen_avatar_list = 6;
    repeated uint32 chosen_card_list = 2;
}

// CmdId: 8609
message EnterRogueDiaryDungeonRsp {
    int32 retcode = 1;
}

// CmdId: 8255
message EnterRoguelikeDungeonNotify {
    repeated uint64 backstage_avatar_guid_list = 11;
    repeated uint64 onstage_avatar_guid_list = 6;
    uint32 JFDFMBIIDND = 8;
    map<uint32, RogueCellInfo> cell_info_map = 9;
    repeated uint32 explored_cell_list = 12;
    repeated RoguelikeRuneRecord rune_record_list = 10;
    bool NFIMKMGPMHB = 1;
    uint32 GFEHMGJGGEO = 2;
    uint32 stage_id = 7;
    uint32 cur_level = 5;
    bool EGANBLLANCC = 874;
    uint32 OLNMADAFEMH = 3;
    float bonus_resource_prop = 15;
    uint32 dungeon_id = 14;
    uint32 IPDPBFFPPBG = 71;
    uint32 AMPOCLOKPFA = 327;
}

// CmdId: 225
message EnterSceneDoneReq {
    uint32 enter_scene_token = 4;
}

// CmdId: 267
message EnterSceneDoneRsp {
    int32 retcode = 3;
    uint32 enter_scene_token = 13;
}

// CmdId: 231
message EnterScenePeerNotify {
    uint32 host_peer_id = 6;
    uint32 enter_scene_token = 9;
    uint32 peer_id = 12;
    uint32 dest_scene_id = 5;
}

// CmdId: 220
message EnterSceneReadyReq {
    uint32 enter_scene_token = 11;
}

// CmdId: 285
message EnterSceneReadyRsp {
    int32 retcode = 13;
    uint32 enter_scene_token = 1;
}

// CmdId: 273
message EnterSceneWeatherAreaNotify {
    uint32 weather_gadget_id = 7;
}

// CmdId: 275
message EnterTransPointRegionNotify {
    uint32 point_id = 5;
    uint32 scene_id = 11;
}

// CmdId: 2061
message EnterTrialAvatarActivityDungeonReq {
    uint32 trial_avatar_index_id = 2;
    uint32 enter_point_id = 12;
    uint32 activity_id = 9;
}

// CmdId: 2033
message EnterTrialAvatarActivityDungeonRsp {
    int32 retcode = 12;
    uint32 trial_avatar_index_id = 15;
    uint32 activity_id = 6;
}

// CmdId: 233
message EnterWorldAreaReq {
    uint32 area_id = 7;
    uint32 area_type = 10;
}

// CmdId: 283
message EnterWorldAreaRsp {
    uint32 area_id = 9;
    int32 retcode = 12;
    uint32 area_type = 14;
}

message EntityAbilityInvokeEntry {
    uint32 entity_id = 9;
    repeated AbilityInvokeEntry invokes = 7;
}

// CmdId: 301
message EntityAiKillSelfNotify {
    uint32 entity_id = 4;
}

// CmdId: 357
message EntityAiSyncNotify {
    repeated uint32 local_avatar_alerted_monster_list = 7;
    repeated AiSyncInfo info_list = 3;
}

// CmdId: 350
message EntityAuthorityChangeNotify {
    repeated AuthorityChange authority_change_list = 6;
}

message EntityAuthorityInfo {
    AbilitySyncStateInfo ability_info = 1;
    EntityRendererChangedInfo renderer_changed_info = 2;
    SceneEntityAiInfo ai_info = 3;
    Vector born_pos = 4;
    repeated AnimatorParameterValueInfoPair pose_para_list = 5;
    EntityClientExtraInfo client_extra_info = 6;
}

message EntityClientData {
    uint32 wind_change_scene_time = 1;
    float windmill_sync_angle = 2;
    int32 wind_change_target_level = 3;
}

message EntityClientExtraInfo {
    Vector skill_anchor_position = 1;
}

message EntityConfigHashEntry {
    uint32 entity_id = 7;
    uint32 job_id = 3;
    int32 hash_value = 1;
}

// CmdId: 3304
message EntityConfigHashNotify {
    repeated EntityConfigHashEntry KPJGDNDBAIM = 9;
    repeated EntityConfigHashEntry EBKCNJNMGLA = 8;
    repeated EntityConfigHashEntry LIMODOCBEBH = 14;
}

message EntityEnvironmentInfo {
    uint32 PBFMHLPEEPE = 1;
    uint32 NJDCDHDPMBE = 2;
}

// CmdId: 1241
message EntityFightPropChangeReasonNotify {
    ChangeEnergyReason change_energy_reson = 10;
    repeated uint32 param_list = 5;
    float prop_delta = 4;
    ChangHpReason change_hp_reason = 7;
    PropChangeReason reason = 11;
    uint32 entity_id = 12;
    uint32 prop_type = 1;
}

// CmdId: 1289
message EntityFightPropNotify {
    map<uint32, float> fight_prop_map = 11;
    uint32 entity_id = 9;
}

// CmdId: 1276
message EntityFightPropUpdateNotify {
    map<uint32, float> fight_prop_map = 12;
    uint32 entity_id = 3;
}

// CmdId: 206
message EntityForceSyncReq {
    uint32 room_id = 7;
    uint32 entity_id = 14;
    uint32 scene_time = 8;
    MotionInfo motion_info = 6;
}

// CmdId: 204
message EntityForceSyncRsp {
    MotionInfo fail_motion = 6;
    uint32 scene_time = 12;
    uint32 entity_id = 5;
    int32 retcode = 7;
}

// CmdId: 277
message EntityJumpNotify {
    enum Type {

        NULL = 0;
        ACTIVE = 1;
        PASSIVE = 2;
    }
    Type jump_type = 4;
    Vector pos = 6;
    Vector rot = 3;
    uint32 entity_id = 5;
}

message EntityMoveFailInfo {
    uint32 scene_time = 8;
    MotionInfo fail_motion = 5;
    int32 retcode = 13;
    uint32 entity_id = 9;
    uint32 reliable_seq = 2;
}

message EntityMoveInfo {
    uint32 entity_id = 1;
    MotionInfo motion_info = 2;
    uint32 scene_time = 3;
    uint32 reliable_seq = 4;
    bool is_reliable = 5;
}

// CmdId: 3194
message EntityMoveRoomNotify {
    uint32 entity_id = 6;
    uint32 dest_room_id = 11;
}

// CmdId: 1290
message EntityPropNotify {
    map<uint32, PropValue> prop_map = 13;
    uint32 entity_id = 2;
}

message EntityRendererChangedInfo {
    map<string, uint32> changed_renderers = 1;
    uint32 visibility_count = 2;
    bool is_cached = 3;
}

// CmdId: 3138
message EntityTagChangeNotify {
    string tag = 11;
    uint32 entity_id = 3;
    bool is_add = 13;
}

message EODBPMNMPEJ {
    uint32 difficulty = 12;
}

message Equip {
    bool is_locked = 3;
    oneof detail {
        Reliquary reliquary = 1;
        Weapon weapon = 2;
    }
}

message EquipParam {
    uint32 item_id = 1;
    uint32 item_num = 2;
    uint32 item_level = 3;
    uint32 promote_level = 4;
}

// CmdId: 8546
message EquipRoguelikeRuneReq {
    repeated uint32 rune_list = 10;
}

// CmdId: 8597
message EquipRoguelikeRuneRsp {
    int32 retcode = 11;
    repeated uint32 rune_list = 15;
}

// CmdId: 364
message EvtAiSyncCombatThreatInfoNotify {
    map<uint32, AiThreatInfo> combat_threat_info_map = 5;
}

// CmdId: 304
message EvtAiSyncSkillCdNotify {
    map<uint32, AiSkillCdInfo> ai_cd_map = 9;
}

message EvtAnimatorParameterInfo {
    uint32 entity_id = 10;
    bool is_server_cache = 11;
    int32 name_id = 13;
    AnimatorParameterValueInfo value = 15;
}

// CmdId: 396
message EvtAnimatorParameterNotify {
    ForwardType forward_type = 15;
    EvtAnimatorParameterInfo animator_param_info = 11;
}

message EvtAnimatorStateChangedInfo {
    Vector pos = 3;
    bool APIBNFGICMI = 1;
    uint32 JFEGPJJOCBK = 5;
    bool JCEAKFNKDBM = 11;
    uint32 entity_id = 13;
    uint32 DPCNLFACFEC = 4;
    uint32 EJAOGEAEKOH = 2;
    float fade_duration = 12;
    int32 face_angle_compact = 15;
}

// CmdId: 359
message EvtAnimatorStateChangedNotify {
    EvtAnimatorStateChangedInfo evt_animator_state_changed_info = 11;
    ForwardType forward_type = 15;
}

// CmdId: 351
message EvtAvatarEnterFocusNotify {
    bool BPBFKLKHLBF = 8;
    uint32 entity_id = 2;
    bool NFBFOBPLJIO = 4;
    bool JIEAFLOFIDP = 11;
    bool CBILFPIHDLD = 13;
    bool DJBCKOHEPIN = 1;
    bool BONKCNJNKHC = 9;
    bool PJOMNBJGCGO = 12;
    bool KNGIHBNEEBA = 7;
    ForwardType forward_type = 15;
    Vector focus_forward = 10;
    bool DDMCNCCKAFP = 14;
    bool NAABHFBGGEA = 5;
}

// CmdId: 339
message EvtAvatarExitFocusNotify {
    uint32 entity_id = 13;
    ForwardType forward_type = 10;
    Vector finish_forward = 6;
}

// CmdId: 369
message EvtAvatarLockChairReq {
    Vector position = 3;
    uint64 chair_id = 7;
}

// CmdId: 332
message EvtAvatarLockChairRsp {
    int32 retcode = 10;
    uint64 chair_id = 11;
    Vector position = 5;
    uint32 entity_id = 8;
}

// CmdId: 374
message EvtAvatarSitDownNotify {
    uint32 entity_id = 9;
    uint64 chair_id = 1;
    Vector position = 15;
}

// CmdId: 373
message EvtAvatarStandUpNotify {
    uint64 chair_id = 15;
    int32 GFBDIAMIIJD = 13;
    int32 NEAMEEDBKHM = 14;
    uint32 entity_id = 11;
}

// CmdId: 395
message EvtAvatarUpdateFocusNotify {
    ForwardType forward_type = 1;
    uint32 entity_id = 6;
    Vector focus_forward = 13;
}

// CmdId: 327
message EvtBeingHealedNotify {
    float KNLBFMODPIN = 11;
    uint32 target_id = 8;
    float OFOGNOIABMG = 12;
    uint32 source_id = 4;
}

message EvtBeingHitInfo {
    uint32 peer_id = 10;
    AttackResult attack_result = 15;
    uint32 frame_num = 5;
}

// CmdId: 390
message EvtBeingHitNotify {
    EvtBeingHitInfo being_hit_info = 14;
    ForwardType forward_type = 9;
}

// CmdId: 354
message EvtBeingHitsCombineNotify {
    ForwardType forward_type = 7;
    repeated EvtBeingHitInfo evt_being_hit_info_list = 15;
}

// CmdId: 365
message EvtBulletDeactiveNotify {
    uint32 entity_id = 1;
    Vector disappear_pos = 11;
    ForwardType forward_type = 2;
}

// CmdId: 312
message EvtBulletHitNotify {
    ForwardType forward_type = 9;
    uint32 CHAAECJCFEO = 11;
    int32 hit_box_index = 8;
    uint32 forward_peer = 10;
    Vector MIACKLDGLNE = 3;
    HitColliderType hit_collider_type = 14;
    Vector HMFHFOBAMHL = 15;
    uint32 entity_id = 2;
    uint32 NPDKHLDBEBI = 4;
}

// CmdId: 386
message EvtBulletMoveNotify {
    uint32 entity_id = 6;
    ForwardType forward_type = 7;
    Vector cur_pos = 9;
}

message EvtCombatForceSetPosInfo {
    uint32 ice_id = 14;
    Vector target_pos = 12;
    uint32 collider_entity_id = 13;
    uint32 entity_id = 18;
}

message EvtCombatSteerMotionInfo {
  Vector face_dir = 3;
  Vector velocity = 8;
  uint32 entity_id = 6;
  Vector pos = 1;
}

message EvtCompensatePosDiffInfo {
    uint32 PGOCJMIFLCK = 1;
    uint32 EJAOGEAEKOH = 15;
    int32 face_angle_compact = 12;
    uint32 entity_id = 13;
    Vector cur_pos = 7;
}

// CmdId: 392
message EvtCostStaminaNotify {
    float cost_stamina = 12;
    uint32 skill_id = 1;
}

// CmdId: 316
message EvtCreateGadgetNotify {
    uint32 owner_entity_id = 9;
    uint64 guid = 2;
    ForwardType forward_type = 10;
    Vector init_euler_angles = 3;
    bool DKJHPANLPGJ = 1474;
    bool is_peer_id_from_player = 2005;
    uint32 target_lock_point_index = 12;
    repeated uint32 target_lock_point_index_list = 1490;
    Vector init_pos = 1;
    bool DGIFLLEHOND = 6;
    uint32 camp_type = 8;
    uint32 camp_id = 14;
    repeated uint32 target_entity_id_list = 383;
    uint32 config_id = 11;
    uint32 entity_id = 13;
    uint32 room_id = 5;
    bool IJDOMBBFNOM = 7;
    uint32 target_entity_id = 15;
    uint32 prop_owner_entity_id = 4;
}

// CmdId: 356
message EvtDestroyGadgetNotify {
    ForwardType forward_type = 2;
    uint32 entity_id = 13;
}

// CmdId: 324
message EvtDestroyServerGadgetNotify {
    uint32 entity_id = 15;
}

// CmdId: 376
message EvtDoSkillSuccNotify {
    uint32 skill_id = 3;
    uint32 caster_id = 2;
    Vector forward = 15;
    ForwardType forward_type = 14;
}

// CmdId: 383
message EvtEntityRenderersChangedNotify {
    ForwardType forward_type = 9;
    EntityRendererChangedInfo renderer_changed_info = 6;
    bool is_server_cache = 7;
    uint32 entity_id = 15;
}

// CmdId: 399
message EvtEntityStartDieEndNotify {
    uint32 die_state_flag = 10;
    ForwardType forward_type = 12;
    uint32 entity_id = 14;
    bool immediately = 13;
}

message EvtFaceToDirInfo {
    Vector face_dir = 12;
    uint32 entity_id = 2;
}

// CmdId: 372
message EvtFaceToDirNotify {
    EvtFaceToDirInfo evt_face_to_dir_info = 9;
    ForwardType forward_type = 12;
}

// CmdId: 341
message EvtFaceToEntityNotify {
    uint32 face_entity_id = 7;
    ForwardType forward_type = 8;
    uint32 entity_id = 2;
}

message EvtFixedRushMove {
    bool PMHJPLEMFAD = 9;
    string override_collider = 1;
    repeated uint32 animator_state_id_list = 12;
    uint32 entity_id = 11;
    float speed = 4;
    Vector target_pos = 2;
    bool FPFCJFPALLI = 5;
}

message EvtGrapplingHookMove {
    bool FPFCJFPALLI = 3;
    uint32 entity_id = 4;
    string override_collider = 11;
    float speed = 5;
    bool PMHJPLEMFAD = 12;
    repeated uint32 animator_state_id_list = 1;
    float CGJPAHPGHHK = 10;
    Vector target_pos = 7;
    float FNFBDGDNJCC = 13;
}

message EvtLightCoreMove {
    float acelerate = 3;
    uint32 entity_id = 4;
    float max_absorb_time = 6;
    Vector target_pos = 2;
    float speed = 1;
}

// CmdId: 368
message EvtLocalGadgetOwnerLeaveSceneNotify {
    uint32 entity_id = 2;
}

message EvtMonsterDoBlink {
  Vector target_pos = 7;
  uint32 entity_id = 13;
  Vector target_rot = 9;
}

message EvtRushMoveInfo {
    Vector KJALEBGPBJL = 1;
    Vector pos = 3;
    Vector CPJPIOFFALP = 9;
    int32 face_angle_compact = 13;
    Vector velocity = 2;
    uint32 entity_id = 11;
    int32 state_name_hash = 7;
    float timeRange = 6;
}

// CmdId: 378
message EvtRushMoveNotify {
    ForwardType forward_type = 2;
    EvtRushMoveInfo evt_rush_move_info = 12;
}

message EvtSetAttackTargetInfo {
    uint32 select_point_index = 5;
    uint32 attack_target_id = 15;
    uint32 entity_id = 1;
}

// CmdId: 363
message EvtSetAttackTargetNotify {
    EvtSetAttackTargetInfo evt_set_attack_target_info = 10;
    ForwardType forward_type = 14;
}

message EvtSyncEntityPositionInfo {
    uint32 EJAOGEAEKOH = 7;
    uint32 entity_id = 12;
    Vector pos = 3;
    uint32 KGFANECJKDG = 2;
    int32 face_angle_compact = 13;
}

message EvtSyncSkillAnchorPosition {
    uint32 entity_id = 10;
    Vector skill_anchor_position = 9;
}

message EvtSyncTransform {
    Vector entity_rot = 9;
    Vector entity_pos = 8;
    uint32 entity_id = 4;
}

message ExclusiveRuleInfo {
    repeated uint32 object_id_list = 14;
    uint32 rule_type = 4;
}

// CmdId: 109
message ExclusiveRuleNotify {
    repeated ExclusiveRuleInfo rule_info_list = 13;
}

// CmdId: 284
message ExecuteGadgetLuaReq {
    uint32 source_entity_id = 12;
    int32 param2 = 8;
    int32 param1 = 15;
    int32 param3 = 4;
}

// CmdId: 208
message ExecuteGadgetLuaRsp {
    int32 retcode = 8;
}

// CmdId: 300
message ExecuteGroupTriggerReq {
    int32 param1 = 7;
    int32 param3 = 12;
    int32 param2 = 8;
    string source_name = 4;
    uint32 target_entity_id = 10;
    uint32 source_entity_id = 1;
}

// CmdId: 257
message ExecuteGroupTriggerRsp {
    int32 retcode = 11;
}

message ExhibitionDisplayInfo {
    uint32 id = 1;
    uint32 param = 2;
    uint32 detail_param = 3;
}

// CmdId: 6224
message ExitCustomDungeonTryReq {
}

// CmdId: 6225
message ExitCustomDungeonTryRsp {
    int32 retcode = 9;
}

// CmdId: 5850
message ExitFishingReq {
}

// CmdId: 5824
message ExitFishingRsp {
    int32 retcode = 4;
}

// CmdId: 288
message ExitSceneWeatherAreaNotify {
    uint32 weather_gadget_id = 11;
}

// CmdId: 246
message ExitTransPointRegionNotify {
    uint32 point_id = 9;
    uint32 scene_id = 6;
}

message ExpeditionActivityDetailInfo {
    repeated ExpeditionChallengeInfo challenge_info_list = 5;
    uint32 BBFNGINCJBB = 14;
    repeated ExpeditionPathInfo path_info_list = 6;
    uint32 content_close_time = 7;
    bool is_content_closed = 13;
    uint32 LCEFDDNGDIP = 1;
}

message ExpeditionAssistInfo {
    uint32 avatar_id = 5;
    string target_nick_name = 12;
    uint32 costume_id = 1;
    uint32 assist_time = 4;
    string online_id = 13;
}

// CmdId: 2091
message ExpeditionChallengeEnterRegionNotify {
    uint32 id = 4;
    bool is_puzzle_finished = 11;
}

// CmdId: 2142
message ExpeditionChallengeFinishedNotify {
    uint32 id = 10;
}

message ExpeditionChallengeInfo {
    uint32 open_time = 5;
    uint32 id = 15;
    bool is_finished = 11;
}

message ExpeditionPathInfo {
    repeated uint32 avatar_id_list = 1;
    uint32 HHLEPAKOHAK = 11;
    uint32 path_id = 4;
    uint32 PIHIMOCPPFO = 6;
    uint32 FJKJJLAIBMF = 12;
    float bonus_probability = 9;
    uint32 start_time = 2;
    uint32 GOMIFKCFNKJ = 15;
    uint32 challenge_id = 10;
    ExpeditionState state = 13;
}

// CmdId: 2080
message ExpeditionRecallReq {
    uint32 path_id = 5;
}

// CmdId: 2133
message ExpeditionRecallRsp {
    int32 retcode = 7;
    uint32 path_id = 2;
}

// CmdId: 2070
message ExpeditionStartReq {
    repeated uint32 avatar_id_list = 7;
    uint32 PIHIMOCPPFO = 9;
    uint32 GOMIFKCFNKJ = 15;
    uint32 path_id = 13;
}

// CmdId: 2058
message ExpeditionStartRsp {
    uint32 GOMIFKCFNKJ = 11;
    uint32 PIHIMOCPPFO = 2;
    uint32 path_id = 14;
    int32 retcode = 8;
    repeated uint32 avatar_id_list = 5;
}

// CmdId: 2199
message ExpeditionTakeRewardReq {
    uint32 path_id = 8;
}

// CmdId: 2183
message ExpeditionTakeRewardRsp {
    uint32 path_id = 12;
    bool is_bonus = 15;
    uint32 reward_level = 11;
    int32 retcode = 9;
}

message FallPlayerBrief {
    uint32 score = 12;
    uint32 uid = 10;
    bool is_ground = 3;
}

message FallPlayerInfo {
    uint32 uid = 8;
    uint32 cur_score = 4;
    map<uint32, uint32> ball_catch_count_map = 10;
    uint32 time_cost = 5;
    bool is_ground = 15;
}

message FallSettleInfo {
    map<uint32, uint32> flower_ring_catch_count_map = 6;
    OnlinePlayerInfo player_info = 10;
    uint32 uid = 8;
    uint32 final_score = 5;
    uint32 MMPODDODOMN = 13;
    uint32 JCFJLLKLHFO = 14;
}

// CmdId: 20550
message FAPDLKNEPCH {
    int32 retcode = 14;
    string transaction = 6;
}

// CmdId: 5528
message FBJAPCKJFCA {
    uint32 hit_count = 10;
    bool is_success = 3;
    uint32 gallery_id = 11;
}

// CmdId: 21252
message FCAIALHCIKL {
    int32 retcode = 6;
    uint32 level_id = 4;
}

message FeatureBlockInfo {
    uint32 feature_type = 1;
    uint32 end_time = 2;
}

message FetterData {
    uint32 fetter_id = 1;
    uint32 fetter_state = 2;
    repeated uint32 cond_index_list = 3;
}

// CmdId: 21778
message FFEBPGAHDIE {
    int32 retcode = 2;
}

message FHADDMLLMPJ {
    uint32 target_entity_id = 10;
}

message FightPropPair {
    uint32 prop_type = 1;
    float prop_value = 2;
}

// CmdId: 8287
message FindHilichurlAcceptQuestNotify {
}

message FindHilichurlDayContentInfo {
    uint32 start_time = 9;
}

message FindHilichurlDetailInfo {
    bool is_end_quest_accept = 8;
    repeated FindHilichurlDayContentInfo day_content_info_list = 14;
    uint32 content_close_time = 7;
    uint32 day_index = 9;
    bool is_content_closed = 3;
    uint32 MEHOKJOPMBN = 11;
    uint32 MDIPNDNFPEJ = 12;
}

// CmdId: 8465
message FindHilichurlFinishSecondQuestNotify {
    uint32 day_index = 1;
}

// CmdId: 2135
message FinishDeliveryNotify {
    uint32 finished_quest_index = 14;
    uint32 day_index = 11;
    uint32 schedule_id = 15;
}

// CmdId: 476
message FinishedParentQuestNotify {
    repeated ParentQuest parent_quest_list = 5;
}

// CmdId: 416
message FinishedParentQuestUpdateNotify {
    repeated ParentQuest parent_quest_list = 5;
}

// CmdId: 592
message FinishedTalkIdListNotify {
    repeated uint32 finished_talk_id_list = 3;
}

// CmdId: 8958
message FinishLanternProjectionReq {
    uint32 finish_time = 3;
    uint32 level_id = 15;
}

// CmdId: 8348
message FinishLanternProjectionRsp {
    int32 retcode = 7;
}

// CmdId: 1965
message FinishMainCoopReq {
    uint32 ending_save_point_id = 9;
    uint32 id = 5;
}

// CmdId: 1976
message FinishMainCoopRsp {
    uint32 id = 9;
    uint32 ending_save_point_id = 7;
    int32 retcode = 10;
}

// Proto has been converted from Sorapointa to Grasscutter format

message FireWorkData {
	uint32 id = 1;
	repeated FireWorkInstance fireWorkInstance = 2;
}

// Proto has been converted from Sorapointa to Grasscutter format

message FireWorkInstance {
	_fire_work_type type = 1;
	int32 value = 2;
}

// Proto has been converted from Sorapointa to Grasscutter format
// CmdId: 6079
// EnetChannelId: 0
// EnetIsReliable: true

message FireWorkNotify {
	repeated FireWorkData fireWorkData = 1;
}

// Proto has been converted from Sorapointa to Grasscutter format
// CmdId: 6068
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true

message FireWorkReq {
	_fire_work_data fire_work_data = 7;
}

// Proto has been converted from Sorapointa to Grasscutter format

message FireworkSetData {
	uint32 id = 1;
	repeated uint32 _unknown_field_ = 2;
	repeated FireWorkInstance fireWorkInstance = 3;
}

// Proto has been converted from Sorapointa to Grasscutter format
// CmdId: 5934
// EnetChannelId: 0
// EnetIsReliable: true

message FireworkSetNotify {
	uint32 code = 1;
	repeated FireworkSetData data = 9;
}

// Proto has been converted from Sorapointa to Grasscutter format
// CmdId: 6099
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true

message FireworkSetReq {
	_firework_set_data data = 2;
}

// Proto has been converted from Sorapointa to Grasscutter format
// CmdId: 5969
// EnetChannelId: 0
// EnetIsReliable: true

message NBFJOJPCCEK_Rsp {
	int32 retcode = 7;
}

// CmdId: 5949
message FireworksLaunchDataNotify {
    uint32 last_use_scheme_id = 7;
    repeated FireworksLaunchSchemeData scheme_data_list = 10;
}

message FireworksLaunchParam {
    int32 value = 3;
    FireworksLaunchParamType type = 5;
}

message FireworksLaunchSchemeData {
    uint32 scheme_id = 13;
    repeated FireworksLaunchParam launch_param_list = 8;
    repeated uint32 fireworks_id_list = 4;
}

message FireworksReformData {
    uint32 id = 8;
    repeated FireworksReformParam reform_param_list = 4;
}

// CmdId: 5902
message FireworksReformDataNotify {
    repeated FireworksReformData fireworks_reform_data_list = 8;
}

message FireworksReformParam {
    int32 value = 7;
    FireworksReformParamType type = 5;
}

// CmdId: 5825
message FishAttractNotify {
    uint32 uid = 10;
    repeated uint32 fish_id_list = 4;
    Vector pos = 14;
}

// CmdId: 5843
message FishBaitGoneNotify {
    uint32 uid = 2;
}

// CmdId: 5842
message FishBattleBeginReq {
}

// CmdId: 5836
message FishBattleBeginRsp {
    int32 retcode = 11;
}

// CmdId: 5831
message FishBattleEndReq {
    uint32 max_bonus_time = 15;
    bool is_always_bonus = 2;
    FishBattleResult battle_result = 12;
}

// CmdId: 5821
message FishBattleEndRsp {
    enum FishNoRewardReason {

        FISH_NO_REWARD_NONE = 0;
        FISH_NO_REWARD_ACTIVITY_LIMIT = 1;
        FISH_NO_REWARD_BAG_LIMIT = 2;
        FISH_NO_REWARD_POOL_LIMIT = 3;
    }
    bool is_got_reward = 7;
    FishNoRewardReason no_reward_reason = 10;
    repeated ItemParam reward_item_list = 9;
    repeated ItemParam EGKGIDNNNLG = 13;
    repeated ItemParam GJCMOFAMKLA = 4;
    int32 retcode = 11;
    FishBattleResult battle_result = 12;
}

// CmdId: 5820
message FishBiteReq {
}

// CmdId: 5823
message FishBiteRsp {
    int32 retcode = 11;
}

// CmdId: 5815
message FishCastRodReq {
    uint32 rod_entity_id = 7;
    uint32 AEINBNLNPJH = 11;
    uint32 JDNBDNLCCHN = 2;
    Vector pos = 14;
}

// CmdId: 5826
message FishCastRodRsp {
    int32 retcode = 5;
}

// CmdId: 5845
message FishChosenNotify {
    uint32 fish_id = 7;
}

// CmdId: 5822
message FishEscapeNotify {
    FishEscapeReason reason = 10;
    uint32 uid = 1;
    repeated uint32 fish_id_list = 12;
    Vector pos = 9;
}

message FishInfo {
    uint32 AIJOJFINDOH = 8;
    uint32 PIHGEIKICJI = 5;
}

message FishingGallerySettleInfo {
    repeated FishingScore fishing_score_list = 15;
    map<uint32, FishInfo> fish_map = 14;
}

// CmdId: 8520
message FishingGallerySettleNotify {
    uint32 level_id = 2;
    FishingGallerySettleInfo settle_info = 5;
    uint32 gallery_id = 15;
}

message FishingScore {
    bool is_new_record = 12;
    uint32 fishing_score = 14;
}

// CmdId: 5848
message FishPoolDataNotify {
    uint32 entity_id = 15;
    uint32 today_fish_num = 1;
}

message FishPoolInfo {
    uint32 pool_id = 1;
    repeated uint32 fish_area_list = 2;
    uint32 today_fish_num = 3;
}

message FishtankFishInfo {
    float fish_distance_from_water = 1;
    float fish_scale = 2;
    float initial_rotation_y = 3;
}

// CmdId: 4614
message FKKDNFEPMIL {
    int32 retcode = 8;
    HomeBlueprintSlotInfo slot_info = 14;
}

message FKPNMNPCGJA {
    repeated AISnapshotEntityData AGINKGKAOKH = 6;
}

// CmdId: 5094
message FLECEKOBOLN {
    int32 retcode = 5;
}

message FleurFairActivityDetailInfo {
    uint32 DFLDHDMCPPD = 8;
    map<uint32, FleurFairDungeonSectionInfo> dungeon_section_info_map = 3;
    uint32 LLLDAJLGPHL = 15;
    map<uint32, FleurFairMinigameInfo> minigame_info_map = 14;
    bool is_content_closed = 7;
    uint32 content_close_time = 9;
    repeated FleurFairChapterInfo chapter_info_list = 4;
    bool is_dungeon_unlocked = 11;
}

message FleurFairBalloonInfo {
    uint32 best_score = 10;
}

message FleurFairBalloonSettleInfo {
    bool is_new_record = 3;
    BalloonSettleInfo settle_info = 9;
}

// CmdId: 2038
message FleurFairBalloonSettleNotify {
    map<uint32, FleurFairBalloonSettleInfo> settle_info_map = 7;
    uint32 minigame_id = 6;
}

message FleurFairBossSettleInfo {
    uint32 energy = 4;
    uint32 cost_time = 1;
    bool is_success = 9;
    repeated FleurFairPlayerStatInfo stat_info_list = 8;
    uint32 reward_token_num = 7;
}

// CmdId: 5374
message FleurFairBuffEnergyNotify {
    uint32 energy = 7;
}

message FleurFairChapterInfo {
    uint32 chapter_id = 2;
    uint32 open_time = 11;
}

message FleurFairDungeonSectionInfo {
    uint32 open_time = 6;
    bool is_open = 9;
    uint32 section_id = 11;
}

message FleurFairFallInfo {
    uint32 best_score = 4;
}

message FleurFairFallSettleInfo {
    bool is_new_record = 8;
    FallSettleInfo settle_info = 7;
}

// CmdId: 2043
message FleurFairFallSettleNotify {
    uint32 minigame_id = 15;
    map<uint32, FleurFairFallSettleInfo> settle_info_map = 14;
}

// CmdId: 5388
message FleurFairFinishGalleryStageNotify {
}

message FleurFairGallerySettleInfo {
    uint32 MEACAEHGMKJ = 4;
    bool is_success = 7;
    uint32 energy = 3;
    uint32 DDGOJCJLFAM = 5;
    map<uint32, int32> energy_stat_map = 15;
}

message FleurFairMinigameInfo {
    uint32 minigame_id = 14;
    bool is_open = 1;
    uint32 open_time = 6;
    oneof detail {
        FleurFairBalloonInfo balloon_info = 2;
        FleurFairFallInfo fall_info = 9;
        FleurFairMusicGameInfo music_info = 15;
    }
}

message FleurFairMusicGameInfo {
    map<uint32, FleurFairMusicRecord> music_record_map = 6;
}

// CmdId: 2055
message FleurFairMusicGameSettleReq {
    uint32 music_basic_id = 8;
    uint32 correct_hit = 1;
    uint32 combo = 6;
    uint32 score = 2;
}

// CmdId: 2068
message FleurFairMusicGameSettleRsp {
    uint32 music_basic_id = 1;
    bool is_new_record = 8;
    int32 retcode = 5;
    bool is_unlock_next_level = 6;
}

// CmdId: 2054
message FleurFairMusicGameStartReq {
    uint32 music_basic_id = 8;
}

// CmdId: 2144
message FleurFairMusicGameStartRsp {
    int32 retcode = 12;
    uint32 music_basic_id = 1;
}

message FleurFairMusicRecord {
    uint32 max_score = 2;
    bool is_unlock = 6;
    uint32 max_combo = 13;
}

message FleurFairPlayerStatInfo {
    uint32 stat_id = 1;
    string online_id = 13;
    uint32 head_image = 4;
    string nick_name = 14;
    uint32 uid = 11;
    ProfilePicture profile_picture = 3;
    int32 param = 15;
}

// CmdId: 2170
message FleurFairReplayMiniGameReq {
    uint32 minigame_id = 9;
}

// CmdId: 2028
message FleurFairReplayMiniGameRsp {
    int32 retcode = 2;
    uint32 minigame_id = 4;
}

// CmdId: 5373
message FleurFairStageSettleNotify {
    uint32 stage_type = 11;
    oneof detail {
        FleurFairGallerySettleInfo gallery_settle_info = 6;
        FleurFairBossSettleInfo boss_settle_info = 14;
    }
}

message FleurFairV2DetailInfo {
    FleurFairV2PhotoInfo photo_info = 9;
    FleurFairV2PacmanInfo pacman_info = 3;
    FleurFairV2MusicGameInfo music_game_info = 5;
}

message FleurFairV2MusicGameInfo {
    map<uint32, MusicGameRecord> music_game_record_map = 12;
}

message FleurFairV2PacmanInfo {
    repeated FleurFairV2StageData stage_data_list = 12;
    uint32 LPIFNMHCPEF = 9;
}

message FleurFairV2PacmanStageInfo {
    bool LMGNFPJMFNM = 2;
}

message FleurFairV2PhotoInfo {
    repeated FleurFairV2PhotoPosData photo_pos_data_list = 6;
}

message FleurFairV2PhotoPosData {
    bool is_open = 15;
    Vector center = 6;
    uint32 pos_id = 11;
    uint32 open_time = 2;
    bool is_view = 7;
}

message FleurFairV2StageData {
    bool is_finish = 9;
    bool is_open = 1;
    uint32 best_score = 2;
    uint32 stage_id = 3;
}

message FlightActivityDetailInfo {
    uint32 MEHOKJOPMBN = 8;
    uint32 KKLLPPPLKMM = 7;
    repeated FlightDailyRecord daily_record_list = 14;
}

// CmdId: 2156
message FlightActivityRestartReq {
    uint32 group_id = 6;
    uint32 schedule_id = 3;
}

// CmdId: 2101
message FlightActivityRestartRsp {
    uint32 schedule_id = 14;
    int32 retcode = 7;
    uint32 group_id = 10;
}

// CmdId: 2118
message FlightActivitySettleNotify {
    uint32 group_id = 8;
    uint32 LKOGKCCJBFE = 14;
    uint32 left_time = 10;
    uint32 score = 5;
    uint32 total_num = 1;
    bool is_new_record = 9;
    uint32 HPCCAIMDMDN = 12;
    bool is_success = 6;
}

message FlightDailyRecord {
    repeated uint32 watcher_id_list = 13;
    uint32 best_score = 12;
    bool is_touched = 11;
    uint32 start_time = 4;
    uint32 group_id = 14;
}

// CmdId: 23172
message FLNMFCNPKEH {
    uint32 schedule_id = 7;
    uint32 LPIFNMHCPEF = 4;
}

message FMCIKCPBCDJ {
    float MNMPCIDDNAD = 8;
}

message FOBNGECBEBK {
    uint32 FFFEGANCBGK = 1;
    uint32 card_id = 9;
}

// CmdId: 1696
message FocusAvatarReq {
    bool is_focus = 12;
    uint64 avatar_guid = 10;
}

// CmdId: 1674
message FocusAvatarRsp {
    int32 retcode = 12;
    uint64 avatar_guid = 14;
    bool is_focus = 15;
}

// CmdId: 4100
message ForceAddPlayerFriendReq {
    uint32 target_uid = 11;
}

// CmdId: 4057
message ForceAddPlayerFriendRsp {
    int32 retcode = 13;
    FriendBrief target_friend_brief = 9;
    uint32 target_uid = 5;
}

// CmdId: 3289
message ForceDragAvatarNotify {
    uint32 scene_time = 7;
    bool is_first_valid = 4;
    uint64 HBPMGOHDIOO = 8;
    uint32 entity_id = 9;
    MotionInfo motion_info = 6;
    uint64 HEDKENGIAPE = 5;
}

// CmdId: 3057
message ForceDragBackTransferNotify {
}

message ForceUpdateInfo {
    string force_update_url = 1;
}

// CmdId: 693
message ForgeDataNotify {
    repeated uint32 forge_id_list = 5;
    uint32 max_queue_num = 10;
    map<uint32, ForgeQueueData> forge_queue_map = 14;
}

// CmdId: 652
message ForgeFormulaDataNotify {
    bool is_locked = 12;
    uint32 forge_id = 3;
}

// CmdId: 654
message ForgeGetQueueDataReq {
}

// CmdId: 643
message ForgeGetQueueDataRsp {
    uint32 max_queue_num = 14;
    int32 retcode = 5;
    map<uint32, ForgeQueueData> forge_queue_map = 8;
}

message ForgeQueueData {
    uint32 LFKLAHBIMHG = 5;
    uint32 ANEHHKAEKNL = 12;
    uint32 avatar_id = 13;
    uint32 forge_id = 14;
    uint32 HANICBEMMJM = 11;
    uint32 EBFDNIFEKBN = 1;
    uint32 JHCELCAALGH = 15;
}

// CmdId: 604
message ForgeQueueDataNotify {
    repeated uint32 removed_forge_queue_list = 14;
    map<uint32, ForgeQueueData> forge_queue_map = 10;
}

// CmdId: 674
message ForgeQueueManipulateReq {
    uint32 forge_queue_id = 3;
    ForgeQueueManipulateType manipulate_type = 12;
}

// CmdId: 673
message ForgeQueueManipulateRsp {
    int32 retcode = 2;
    repeated ItemParam MDJJBOAANKF = 1;
    repeated ItemParam BNCLNGJLJIA = 15;
    ForgeQueueManipulateType manipulate_type = 6;
    repeated ItemParam LEANPAODEGK = 8;
}

// CmdId: 629
message ForgeStartReq {
    uint32 avatar_id = 7;
    uint32 forge_count = 9;
    uint32 forge_id = 8;
}

// CmdId: 628
message ForgeStartRsp {
    int32 retcode = 4;
}

message FoundationInfo {
    FoundationStatus status = 1;
    repeated uint32 uid_list = 2;
    uint32 current_building_id = 3;
    uint32 locked_by_uid = 4;
}

// CmdId: 882
message FoundationNotify {
    uint32 gadget_entity_id = 9;
    FoundationInfo info = 11;
}

// CmdId: 875
message FoundationReq {
    uint32 point_config_id = 14;
    uint32 building_id = 11;
    FoundationOpType op_type = 4;
    uint32 gadget_entity_id = 2;
}

// CmdId: 846
message FoundationRsp {
    FoundationOpType op_type = 9;
    uint32 point_config_id = 12;
    int32 retcode = 11;
    uint32 gadget_entity_id = 1;
    uint32 building_id = 5;
}

message FriendBrief {
    uint32 uid = 1;
    string nickname = 2;
    uint32 level = 3;
    uint32 avatar_id = 4;
    uint32 world_level = 5;
    string signature = 6;
    FriendOnlineState online_state = 7;
    uint32 param = 8;
    bool is_mp_mode_available = 10;
    string online_id = 11;
    uint32 last_active_time = 12;
    uint32 name_card_id = 13;
    uint32 mp_player_num = 14;
    bool is_chat_no_disturb = 15;
    uint32 chat_sequence = 16;
    string remark_name = 17;
    repeated SocialShowAvatarInfo show_avatar_info_list = 22;
    FriendEnterHomeOption friend_enter_home_option = 23;
    ProfilePicture profile_picture = 24;
    bool is_game_source = 25;
    bool is_psn_source = 26;
    PlatformType platform_type = 27;
}

// CmdId: 4022
message FriendInfoChangeNotify {
    string online_id = 11;
    uint32 uid = 3;
}

// CmdId: 5570
message FungusCaptureSettleNotify {
    bool is_success = 1;
}

// CmdId: 22893
message FungusCultivateReq {
    uint32 KPCKFJFNJLM = 10;
    uint32 CKOKHJBFAKG = 3;
    uint32 EFJPMNAGMAF = 14;
    uint32 OALPEBPOMON = 11;
    uint32 time = 9;
    uint32 OPMEPHFKKAP = 7;
    uint32 DECDFPACMCD = 12;
    uint32 cultivate_id = 6;
}

// CmdId: 24534
message FungusCultivateRsp {
    uint32 cultivate_id = 12;
    int32 retcode = 4;
    bool is_new_record = 6;
}

message FungusDetail {
    uint32 NABBCOACLGI = 3;
    bool is_cultivate = 9;
    uint32 BHGDBPKJHMA = 15;
    uint32 fungus_id = 8;
    uint32 name_id = 6;
}

// CmdId: 20487
message FungusFighterClearTrainingRuntimeDataReq {
    uint32 dungeon_id = 2;
}

// CmdId: 20704
message FungusFighterClearTrainingRuntimeDataRsp {
    int32 retcode = 12;
}

message FungusFighterDetailInfo {
    repeated uint32 LKGHAADOFLF = 1;
    repeated FungusTrainingDungeonDetail training_dungeon_detail_list = 10;
    repeated FungusDetail fungus_detail_list = 14;
    repeated uint32 KIKFFIHPEKI = 6;
    repeated FungusTrainingProgressDetail training_dungeon_progress_detail_list = 12;
    repeated FungusPlotStageDetail plot_stage_detail_list = 13;
    repeated uint32 DJDBGBNHGGL = 9;
}

message FungusFighterMonsterDetail {
    uint32 fungus_id = 5;
    bool is_alive = 12;
    float cur_hp_percentage = 8;
}

// CmdId: 24684
message FungusFighterPlotInfoNotify {
    repeated uint32 fungus_id_list = 3;
    uint32 dungeon_id = 14;
}

// CmdId: 23269
message FungusFighterRestartTraningDungeonReq {
}

// CmdId: 21201
message FungusFighterRestartTraningDungeonRsp {
    int32 retcode = 3;
}

// CmdId: 22163
message FungusFighterRuntimeDataNotify {
    FungusTrainingProgressDetail progress_detail = 1;
}

// CmdId: 23001
message FungusFighterTrainingGallerySettleNotify {
    GalleryStopReason reason = 2;
    uint32 COCEMCJMFGA = 15;
    uint32 PNKNJPIMAFC = 12;
    uint32 final_score = 1;
    uint32 total_used_time = 13;
    bool is_new_record = 11;
    bool is_final_settle = 3;
    uint32 GEAAIMCNKCK = 4;
}

// CmdId: 5581
message FungusFighterTrainingInfoNotify {
    uint32 OMILDIGCPAJ = 9;
    uint32 NOIAIMOONIB = 5;
    uint32 GLCGHJKHFEI = 15;
    uint32 buff_id = 6;
    uint32 CNODBENOPKK = 3;
    uint32 MBCGPKHEHPP = 11;
    uint32 CNOCKIIKIKI = 14;
}

// CmdId: 21230
message FungusFighterTrainingSelectFungusReq {
    repeated uint32 fight_fungus_id_list = 6;
    repeated uint32 backup_fungus_id_list = 14;
}

// CmdId: 22475
message FungusFighterTrainingSelectFungusRsp {
    int32 retcode = 1;
}

// CmdId: 22447
message FungusFighterUseBackupFungusReq {
    repeated uint32 backup_fungus_id_list = 10;
}

// CmdId: 20224
message FungusFighterUseBackupFungusRsp {
    int32 retcode = 12;
}

message FungusFighterV2DetailInfo {
    repeated FungusFighterV2LevelData level_data_list = 13;
}

message FungusFighterV2LevelData {
    uint32 level_id = 5;
    uint32 PHEIGICNDCJ = 14;
    bool is_level_open = 10;
}

message FungusFighterV2SettleInfo {
    uint32 LJLPPLECIJK = 9;
    uint32 PFEJLBFPMGF = 2;
    uint32 cost_time = 3;
    uint32 HMEKPCPLCDG = 6;
    uint32 level_id = 8;
    bool is_new_record = 1;
}

message FungusPlotStageDetail {
    bool is_open = 14;
    uint32 stage_id = 9;
}

// CmdId: 23177
message FungusRenameReq {
    uint32 fungus_id = 13;
    uint32 name_id = 3;
}

// CmdId: 20353
message FungusRenameRsp {
    uint32 name_id = 8;
    uint32 fungus_id = 4;
    int32 retcode = 7;
}

message FungusTrainingDungeonDetail {
    uint32 best_score = 6;
    uint32 dungeon_id = 13;
    bool is_open = 4;
}

message FungusTrainingMonsterPreviewDetail {
    uint32 monster_id = 13;
    repeated uint32 affix_list = 14;
    uint32 level = 6;
}

message FungusTrainingPoolPreviewDetail {
    repeated FungusTrainingMonsterPreviewDetail monster_preview_detail_list = 7;
    uint32 pool_id = 11;
}

message FungusTrainingProgressDetail {
    repeated uint32 ONGOEANKEBM = 5;
    uint32 cur_round = 10;
    uint32 dungeon_id = 9;
    uint32 total_used_time = 15;
    repeated uint32 HBGDJGLGJIH = 2;
    repeated FungusFighterMonsterDetail monster_detail_list = 3;
    repeated FungusTrainingPoolPreviewDetail monster_pool_preview_list = 13;
}

// CmdId: 4634
message FunitureMakeMakeInfoChangeNotify {
    FurnitureMakeMakeInfo make_info = 10;
}

message Furniture {
    uint32 count = 1;
}

// CmdId: 4746
message FurnitureCurModuleArrangeCountNotify {
    repeated Uint32Pair furniture_arrange_count_list = 9;
}

message FurnitureMakeBeHelpedData {
    uint32 icon = 1;
    string player_name = 12;
    fixed32 time = 8;
    ProfilePicture profile_picture = 11;
    uint32 uid = 4;
}

// CmdId: 4881
message FurnitureMakeBeHelpedNotify {
    FurnitureMakeBeHelpedData furniture_make_helped_data = 3;
    FurnitureMakeSlot furniture_make_slot = 8;
}

// CmdId: 4826
message FurnitureMakeCancelReq {
    uint32 make_id = 5;
    uint32 index = 10;
}

// CmdId: 4853
message FurnitureMakeCancelRsp {
    int32 retcode = 3;
    uint32 make_id = 5;
    FurnitureMakeSlot furniture_make_slot = 1;
}

message FurnitureMakeData {
    fixed32 begin_time = 9;
    uint32 dur_time = 7;
    fixed32 accelerate_time = 14;
    uint32 avatar_id = 11;
    uint32 make_id = 5;
    uint32 index = 13;
}

// CmdId: 4753
message FurnitureMakeFinishNotify {
}

message FurnitureMakeHelpData {
    uint32 uid = 1;
    uint32 times = 15;
}

// CmdId: 4690
message FurnitureMakeHelpReq {
}

// CmdId: 4567
message FurnitureMakeHelpRsp {
    int32 retcode = 13;
    repeated FurnitureMakeHelpData help_data_list = 14;
}

message FurnitureMakeInfo {
	uint32 make_count = 1;
	uint32 furniture_id = 3;
}

message FurnitureMakeMakeInfo {
    uint32 make_count = 14;
    uint32 furniture_id = 6;
}

// CmdId: 4680
message FurnitureMakeReq {
}

// CmdId: 4812
message FurnitureMakeRsp {
    int32 retcode = 10;
    repeated FurnitureMakeBeHelpedData helped_data_list = 13;
    repeated FurnitureMakeMakeInfo make_info_list = 14;
    FurnitureMakeSlot furniture_make_slot = 8;
    repeated FurnitureMakeHelpData help_data_list = 2;
}

message FurnitureMakeSlot {
    repeated FurnitureMakeData furniture_make_data_list = 9;
}

// CmdId: 4793
message FurnitureMakeStartReq {
    uint32 make_id = 8;
    uint32 avatar_id = 14;
}

// CmdId: 4465
message FurnitureMakeStartRsp {
    int32 retcode = 4;
    FurnitureMakeSlot furniture_make_slot = 5;
}

// CmdId: 8314
message GachaActivityCreateRobotReq {
}

// CmdId: 8273
message GachaActivityCreateRobotRsp {
    int32 retcode = 15;
    uint32 robot_id = 3;
}

message GachaActivityDetailInfo {
    uint32 NOAABNLIFJP = 5;
    map<uint32, uint32> have_reward_robot_num_map = 8;
    repeated uint32 have_get_robot_list = 1;
    repeated GachaStageData gacha_stage_data_list = 2;
    map<uint32, uint32> robot_num_map = 15;
    uint32 EFHNJHBNBFJ = 4;
}

// CmdId: 8707
message GachaActivityNextStageReq {
}

// CmdId: 8922
message GachaActivityNextStageRsp {
    int32 retcode = 10;
    uint32 stage_id = 12;
}

// CmdId: 8789
message GachaActivityPercentNotify {
    uint32 DIOALIGJPGO = 10;
    uint32 JCGMHLOPOHG = 4;
    map<uint32, uint32> target_num_map = 3;
    uint32 FFAGKNPEDBJ = 2;
}

// CmdId: 8876
message GachaActivityResetReq {
    uint32 stage_id = 12;
}

// CmdId: 8715
message GachaActivityResetRsp {
    int32 retcode = 13;
    uint32 stage_id = 7;
}

// CmdId: 8311
message GachaActivityTakeRewardReq {
    map<uint32, uint32> robot_num_map = 6;
}

// CmdId: 8843
message GachaActivityTakeRewardRsp {
    map<uint32, uint32> robot_num_map = 15;
    int32 retcode = 7;
}

// CmdId: 8714
message GachaActivityUpdateElemNotify {
    uint32 elem_type = 7;
}

message GachaInfo {
    uint32 FBILBJNNIKE = 578;
    uint32 BIPHOPJBNHC = 9;
    uint32 FBIDPNFLBJL = 7;
    string OMGFPIJPPGH = 3;
    uint32 PELOHDIKFAM = 316;
    uint32 begin_time = 1;
    uint32 DINELKJLAPI = 4;
    uint32 end_time = 10;
    uint32 JICLMBKMGCG = 12;
    string PEFGGCAMAJE = 908;
    uint32 OKKJEHDBIHK = 11;
    uint32 schedule_id = 13;
    uint32 KKDFKKEMEBA = 2003;
    string JAHGGIJLMCD = 883;
    string FGLBHLDAFAM = 15;
    repeated GachaUpInfo gacha_up_info_list = 771;
    string LAMBGJLFDCN = 8;
    string AMGOIFHFKIE = 1371;
    repeated uint32 LANKFGHJJEB = 793;
    bool is_new_wish = 1748;
    uint32 AOLMBNPLFEO = 6;
    uint32 DKCIEKFPMCG = 5;
    uint32 EAGFIDHCDPD = 14;
    uint32 KDFPKENAIOJ = 1986;
    repeated uint32 LIBFHKDFHLG = 565;
    string DACBIMFIOFO = 2;
}

message GachaItem {
    ItemParam gacha_item = 13;
    repeated GachaTransferItem transfer_items = 3;
    repeated ItemParam token_item_list = 9;
    bool DKPCGKMJNMC = 1;
    bool HBJJJDGGBCN = 11;
}

// CmdId: 1541
message GachaOpenWishNotify {
    uint32 KJPOJHMDBNE = 14;
    uint32 AOLMBNPLFEO = 2;
}

// CmdId: 1572
message GachaSimpleInfoNotify {
    bool is_new = 5;
}

message GachaStageData {
    map<uint32, uint32> target_num_map = 12;
    uint32 stage_id = 2;
    bool is_open = 7;
}

message GachaTransferItem {
    ItemParam item = 2;
    bool is_transfer_item_new = 3;
}

message GachaUpInfo {
    uint32 item_parent_type = 8;
    repeated uint32 item_id_list = 9;
}

// CmdId: 1516
message GachaWishReq {
    uint32 item_id = 15;
    uint32 KJPOJHMDBNE = 14;
    uint32 AOLMBNPLFEO = 3;
}

// CmdId: 1556
message GachaWishRsp {
    uint32 KKDFKKEMEBA = 4;
    uint32 KJPOJHMDBNE = 15;
    uint32 FBILBJNNIKE = 14;
    uint32 KDFPKENAIOJ = 6;
    int32 retcode = 1;
    uint32 AOLMBNPLFEO = 5;
}

// CmdId: 865
message GadgetAutoPickDropInfoNotify {
    repeated Item item_list = 7;
}

// CmdId: 877
message GadgetChainLevelChangeNotify {
    map<uint32, uint32> gadget_chain_level_map = 13;
}

// CmdId: 894
message GadgetChainLevelUpdateNotify {
    map<uint32, uint32> gadget_chain_level_map = 13;
}

// CmdId: 883
message GadgetChangeLevelTagReq {
    uint32 gadget_entity_id = 14;
    uint32 level_tag_id = 1;
    CustomGadgetTreeInfo combination_info = 10;
}

// CmdId: 806
message GadgetChangeLevelTagRsp {
    int32 retcode = 13;
}

message GadgetCrucibleInfo {
    uint32 mp_play_id = 1;
    uint32 prepare_end_time = 2;
}

// CmdId: 833
message GadgetCustomTreeInfoNotify {
    uint32 gadget_entity_id = 6;
    CustomGadgetTreeInfo custom_gadget_tree_info = 3;
}

message GadgetGeneralRewardInfo {
    uint32 resin = 1;
    uint32 dead_time = 2;
    repeated uint32 remain_uid_list = 3;
    repeated uint32 qualify_uid_list = 4;
    ItemParam item_param = 5;
}

// CmdId: 812
message GadgetGeneralRewardInfoNotify {
    uint32 entity_id = 12;
    GadgetGeneralRewardInfo general_reward_info = 10;
}

// CmdId: 890
message GadgetInteractReq {
    ResinCostType resin_cost_type = 5;
    bool is_use_condense_resin = 8;
    InterOpType op_type = 9;
    uint32 ui_interact_id = 12;
    uint32 gadget_id = 7;
    uint32 gadget_entity_id = 1;
}

// CmdId: 896
message GadgetInteractRsp {
    InterOpType op_type = 2;
    int32 retcode = 7;
    uint32 gadget_id = 8;
    InteractType interact_type = 4;
    uint32 gadget_entity_id = 15;
}

// CmdId: 859
message GadgetPlayDataNotify {
    uint32 play_type = 9;
    uint32 entity_id = 1;
    uint32 progress = 5;
}

message GadgetPlayInfo {
    uint32 play_type = 1;
    uint32 duration = 2;
    repeated uint32 progress_stage_list = 3;
    uint32 start_cd = 4;
    uint32 start_time = 5;
    uint32 progress = 6;
    oneof play_info {
        GadgetCrucibleInfo crucible_info = 21;
    }
}

// CmdId: 892
message GadgetPlayStartNotify {
    uint32 entity_id = 10;
    uint32 play_type = 2;
    uint32 start_time = 4;
}

// CmdId: 863
message GadgetPlayStopNotify {
    uint32 score = 12;
    bool is_win = 1;
    uint32 play_type = 6;
    uint32 cost_time = 10;
    uint32 entity_id = 14;
    repeated GadgetPlayUidInfo uid_info_list = 13;
}

message GadgetPlayUidInfo {
    ProfilePicture profile_picture = 2;
    string nickname = 14;
    uint32 battle_watcher_id = 4;
    uint32 uid = 11;
    string online_id = 7;
    uint32 score = 13;
    uint32 icon = 8;
}

// CmdId: 878
message GadgetPlayUidOpNotify {
    uint32 op = 9;
    string param_str = 13;
    uint32 play_type = 2;
    uint32 entity_id = 1;
}

// CmdId: 889
message GadgetStateNotify {
    uint32 gadget_entity_id = 5;
    bool is_enable_interact = 1;
    uint32 gadget_state = 3;
}

// CmdId: 842
message GadgetTalkChangeNotify {
    uint32 cur_gadget_talk_state = 1;
    uint32 gadget_entity_id = 15;
}

// CmdId: 5589
message GalleryBalloonScoreNotify {
    map<uint32, uint32> uid_score_map = 2;
    uint32 gallery_id = 1;
}

// CmdId: 5596
message GalleryBalloonShootNotify {
    int32 add_score = 13;
    uint64 combo_disable_time = 2;
    uint32 combo = 7;
    uint32 trigger_entity_id = 6;
    uint32 cur_score = 11;
    uint32 gallery_id = 5;
}

// CmdId: 5575
message GalleryBounceConjuringHitNotify {
    bool is_perfect = 11;
    uint32 add_score = 4;
    uint32 gallery_id = 14;
}

// CmdId: 5578
message GalleryBrokenFloorFallNotify {
    uint32 fall_count = 4;
    uint32 gallery_id = 15;
}

// CmdId: 5559
message GalleryBulletHitNotify {
    uint32 gallery_id = 10;
    uint32 hit_count = 1;
}

// CmdId: 5542
message GalleryCrystalLinkBuffInfoNotify {
    bool is_buff_valid = 11;
    uint32 gallery_id = 12;
    uint32 buff_id = 10;
}

// CmdId: 5582
message GalleryCrystalLinkKillMonsterNotify {
    uint32 score = 4;
    uint32 gallery_id = 15;
}

// CmdId: 5516
message GalleryFallCatchNotify {
    uint32 gallery_id = 10;
    map<uint32, uint32> ball_catch_count_map = 3;
    uint32 time_cost = 7;
    bool is_ground = 5;
    uint32 add_score = 11;
    uint32 cur_score = 2;
}

// CmdId: 5556
message GalleryFallScoreNotify {
    map<uint32, FallPlayerBrief> uid_brief_map = 15;
    uint32 gallery_id = 2;
}

// CmdId: 5592
message GalleryFlowerCatchNotify {
    uint32 add_score = 2;
    uint32 cur_score = 10;
    uint32 gallery_id = 3;
}

message GalleryFlowerStartParam {
    uint32 target_score = 11;
}

// CmdId: 5577
message GalleryIslandPartyDownHillInfoNotify {
    uint32 coin = 1;
    uint32 total_kill_monster_count = 11;
    uint32 gallery_id = 2;
}

// CmdId: 5563
message GalleryPreStartNotify {
    uint32 gallery_id = 14;
    uint32 pre_start_end_time = 6;
}

// CmdId: 5590
message GalleryStartNotify {
    uint32 end_time = 11;
    uint32 gallery_id = 10;
    uint32 start_time = 9;
    uint32 owner_uid = 5;
    uint32 player_count = 7;
    oneof detail {
        GalleryFlowerStartParam flower_start_param = 2;
        EODBPMNMPEJ electrohercules_start_param = 8;
    }
}

// CmdId: 5576
message GalleryStopNotify {
    uint32 gallery_id = 15;
}

// CmdId: 5546
message GallerySumoKillMonsterNotify {
    uint32 EEPIFMDOOHM = 1;
    uint32 gallery_id = 12;
    uint32 score = 3;
    uint32 KFACNCAIMAM = 14;
}

// CmdId: 5550
message GalleryWillStartCountdownNotify {
    uint32 gallery_id = 3;
    GalleryStartSource start_source = 11;
    bool is_end = 5;
    uint32 end_time = 8;
}

message GameplayRecommendationElementReliquaryRequest {
    uint32 element_type = 11;
    uint32 equip_type = 15;
}

message GameplayRecommendationElementReliquaryResponse {
    repeated GameplayRecommendationReliquaryMainPropData main_prop_data_list = 13;
    uint32 equip_type = 10;
    uint32 element_type = 5;
}

message GameplayRecommendationReliquaryMainPropData {
    uint32 main_prop_id = 11;
    uint32 permillage = 12;
}

message GameplayRecommendationReliquaryRequest {
    uint32 equip_type = 4;
}

message GameplayRecommendationReliquaryResponse {
    uint32 equip_type = 12;
    repeated GameplayRecommendationReliquaryMainPropData main_prop_data_list = 11;
}

message GameplayRecommendationSkillRequest {
    uint32 skill_depot_id = 3;
}

message GameplayRecommendationSkillResponse {
    repeated uint32 skill_id_list = 15;
    uint32 skill_depot_id = 12;
}

message GatherGadgetInfo {
    uint32 item_id = 1;
    bool is_forbid_guest = 2;
}

// CmdId: 7179
message GCGApplyInviteBattleNotify {
    int32 retcode = 9;
    bool is_agree = 12;
}

// CmdId: 7374
message GCGApplyInviteBattleReq {
    bool is_agree = 5;
}

// CmdId: 7107
message GCGApplyInviteBattleRsp {
    int32 retcode = 1;
    uint32 punish_end_time = 10;
}

// CmdId: 7631
message GCGAskDuelReq {
}

// CmdId: 7088
message GCGAskDuelRsp {
    GCGDuel duel = 3;
    int32 retcode = 7;
}

message GCGAttackCostInfo {
    repeated Uint32Pair cost_map = 7;
    uint32 skill_id = 12;
}

// CmdId: 7339
message GCGBackToDuelReq {
    bool is_back = 12;
}

// CmdId: 7151
message GCGBackToDuelRsp {
    int32 retcode = 10;
}

// CmdId: 7722
message GCGBasicDataNotify {
    repeated uint32 level_reward_taken_list = 2;
    uint32 level = 4;
    uint32 exp = 5;
}

message GCGBossChallengeData {
    uint32 id = 6;
    repeated uint32 unlock_level_id_list = 10;
}

// CmdId: 7570
message GCGBossChallengeUpdateNotify {
    GCGBossChallengeData boss_challenge = 4;
}

message GCGCard {
    uint32 guid = 10;
    repeated uint32 tag_list = 2;
    bool is_show = 7;
    uint32 id = 1;
    repeated GCGSkillLimitsInfo skill_limits_list = 14;
    repeated GCGToken token_list = 8;
    uint32 controller_id = 9;
    uint32 face_type = 3;
    repeated uint32 skill_id_list = 11;
}

message GCGCardSkillLimitsInfo {
    repeated GCGSkillLimitsInfo skill_limits_list = 5;
    uint32 card_guid = 2;
}

// CmdId: 7872
message GCGChallengeUpdateNotify {
    GCGDuelChallenge challenge = 15;
    uint32 server_seq = 9;
}

message GCGChangeOnstageInfo {
    GCGSkillPreviewInfo change_onstage_preview_info = 8;
    bool is_quick = 3;
    uint32 card_guid = 1;
}

// CmdId: 7369
message GCGClientSettleReq {
}

// CmdId: 7510
message GCGClientSettleRsp {
    uint32 close_time = 4;
    int32 retcode = 7;
}

message GCGControllerShowInfo {
    uint32 controller_id = 2;
    string online_id = 6;
    ProfilePicture profile_picture = 13;
    string nick_name = 1;
    string psn_id = 4;
}

message GCGCostReviseInfo {
    repeated GCGPlayCardCostInfo play_card_cost_list = 3;
    repeated GCGAttackCostInfo attack_cost_list = 9;
    repeated GCGSelectOnStageCostInfo select_on_stage_cost_list = 6;
    bool is_can_attack = 4;
    repeated uint32 can_use_hand_card_id_list = 2;
}

message GCGDamageDetail {
    uint32 skill_id = 12;
    uint32 card_guid = 5;
}

// CmdId: 7537
message GCGDebugReplayNotify {
    string json_str = 6;
}

// CmdId: 7793
message GCGDSBanCardNotify {
    repeated uint32 card_list = 10;
}

// CmdId: 7526
message GCGDSCardBackUnlockNotify {
    uint32 card_back_id = 10;
}

message GCGDSCardData {
    uint32 num = 15;
    uint32 proficiency = 12;
    uint32 card_id = 1;
    repeated uint32 BDJJKKAIPLD = 4;
    uint32 face_type = 7;
    repeated uint32 BEHPIJPHPKM = 5;
}

// CmdId: 7035
message GCGDSCardFaceUnlockNotify {
    uint32 face_type = 10;
    uint32 card_id = 6;
}

// CmdId: 7599
message GCGDSCardFaceUpdateNotify {
    uint32 face_type = 7;
    uint32 card_id = 9;
}

// CmdId: 7865
message GCGDSCardNumChangeNotify {
    uint32 num = 2;
    uint32 card_id = 4;
}

// CmdId: 7263
message GCGDSCardProficiencyNotify {
    uint32 card_id = 8;
    uint32 proficiency = 9;
}

// CmdId: 7879
message GCGDSChangeCardBackReq {
    uint32 card_back_id = 5;
    uint32 deck_id = 14;
}

// CmdId: 7367
message GCGDSChangeCardBackRsp {
    int32 retcode = 9;
    uint32 deck_id = 11;
    uint32 card_back_id = 2;
}

// CmdId: 7498
message GCGDSChangeCardFaceReq {
    uint32 face_type = 2;
    uint32 card_id = 5;
}

// CmdId: 7050
message GCGDSChangeCardFaceRsp {
    int32 retcode = 6;
    uint32 face_type = 9;
    uint32 card_id = 12;
}

// CmdId: 7752
message GCGDSChangeCurDeckReq {
    uint32 deck_id = 11;
}

// CmdId: 7037
message GCGDSChangeCurDeckRsp {
    int32 retcode = 14;
    uint32 deck_id = 13;
}

// CmdId: 7007
message GCGDSChangeDeckNameReq {
    string name = 12;
    uint32 deck_id = 11;
    bool OKPBIBHGKEJ = 2;
}

// CmdId: 7117
message GCGDSChangeDeckNameRsp {
    string name = 7;
    int32 retcode = 6;
    bool OKPBIBHGKEJ = 4;
    uint32 deck_id = 13;
}

// CmdId: 7303
message GCGDSChangeFieldReq {
    uint32 deck_id = 3;
    uint32 field_id = 4;
}

// CmdId: 7735
message GCGDSChangeFieldRsp {
    uint32 deck_id = 13;
    int32 retcode = 14;
    uint32 field_id = 11;
}

// CmdId: 7449
message GCGDSCurDeckChangeNotify {
    uint32 deck_id = 2;
}

// CmdId: 7975
message GCGDSDataNotify {
    repeated uint32 KIHAKELEBGH = 12;
    repeated GCGDSDeckData deck_list = 13;
    repeated uint32 CGEGIOFOAHL = 3;
    repeated GCGDSCardData card_list = 9;
    uint32 cur_deck_id = 14;
    repeated uint32 ALNNDGJDBPO = 8;
}

message GCGDSDeckData {
    fixed32 create_time = 1;
    uint32 id = 10;
    uint32 card_back_id = 3;
    repeated uint32 card_list = 8;
    string name = 13;
    repeated uint32 character_card_list = 14;
    uint32 field_id = 7;
    bool is_valid = 15;
}

// CmdId: 7118
message GCGDSDeckSaveReq {
    uint32 deck_id = 1;
    string name = 8;
    repeated uint32 card_list = 13;
    repeated uint32 character_card_list = 9;
}

// CmdId: 7065
message GCGDSDeckSaveRsp {
    bool is_valid = 15;
    fixed32 create_time = 13;
    uint32 deck_id = 12;
    int32 retcode = 14;
}

// CmdId: 7511
message GCGDSDeckUnlockNotify {
    uint32 deck_id = 11;
}

// CmdId: 7159
message GCGDSDeckUpdateNotify {
    bool is_valid = 2;
    uint32 deck_id = 15;
}

// CmdId: 7398
message GCGDSDeleteDeckReq {
    uint32 deck_id = 7;
}

// CmdId: 7176
message GCGDSDeleteDeckRsp {
    int32 retcode = 5;
    uint32 deck_id = 7;
}

// CmdId: 7820
message GCGDSFieldUnlockNotify {
    uint32 field_id = 15;
}

// CmdId: 7814
message GCGDSTakeCardProficiencyRewardReq {
    uint32 card_id = 14;
    uint32 reward_index = 13;
}

// CmdId: 7930
message GCGDSTakeCardProficiencyRewardRsp {
    uint32 reward_index = 6;
    int32 retcode = 13;
    uint32 card_id = 11;
}

message GCGDuel {
    GCGCostReviseInfo cost_revise = 4;
    repeated AKPPCGEACLE JGFGPJCHMCB = 625;
    repeated GCGMessagePack history_msg_pack_list = 971;
    repeated GCGPVEIntention intetion_list = 7;
    uint32 game_id = 12;
    uint32 GDIFDLBCPLK = 1;
    uint32 server_seq = 9;
    repeated GCGCard history_card_list = 1773;
    uint32 CDDPINAKOLH = 11;
    repeated uint32 card_id_list = 3;
    GCGGameBusinessType business_type = 10;
    repeated GCGCard card_list = 5;
    uint32 round = 2;
    repeated GCGControllerShowInfo show_info_list = 6;
    GCGPhase phase = 13;
    repeated uint32 forbid_finish_challenge_list = 1263;
    repeated GCGDuelChallenge challenge_list = 460;
    uint32 controller_id = 14;
    repeated GCGPlayerField field_list = 15;
}

message GCGDuelChallenge {
    uint32 total_progress = 4;
    uint32 challenge_id = 8;
    uint32 cur_progress = 5;
}

message GCGFestivalDetailInfo {
    bool OOLFCFMNBOJ = 15;
}

message GCGGameBriefData {
    uint32 game_id = 12;
    uint32 BKCEKFCCCIC = 7;
    GCGGameBusinessType business_type = 6;
    uint32 NCPHDFAEHJC = 10;
    uint32 platform_type = 4;
    repeated GCGPlayerBriefData player_brief_list = 2;
}

// CmdId: 7068
message GCGGameBriefDataNotify {
    bool is_new_game = 2;
    GCGGameBriefData gcg_brief_data = 13;
}

// CmdId: 7364
message GCGGameCreateFailReasonNotify {
    enum GCGGameCreateReason {

        REASON_NONE = 0;
        REASON_GAME_MAX = 1;
        REASON_CLIENT_VERSION_NOT_LASTEST = 2;
        REASON_RESOURCE_NOT_COMPLETE = 3;
        REASON_TIMEOUT = 4;
        REASON_OPPONENT_CLIENT_VERSION_NOT_LASTEST = 5;
    }
    GCGGameCreateReason reason = 11;
}

// CmdId: 7943
message GCGGameMaxNotify {
}

// CmdId: 7198
message GCGGrowthLevelNotify {
    uint32 level = 12;
    uint32 exp = 5;
}

// CmdId: 7470
message GCGGrowthLevelRewardNotify {
    repeated uint32 level_reward_taken_list = 12;
}

// CmdId: 7787
message GCGGrowthLevelTakeRewardReq {
    uint32 level = 8;
}

// CmdId: 7332
message GCGGrowthLevelTakeRewardRsp {
    int32 retcode = 4;
    uint32 level = 9;
}

// CmdId: 7684
message GCGHeartBeatNotify {
    uint32 server_seq = 14;
}

// CmdId: 7052
message GCGInitFinishReq {
}

// CmdId: 7933
message GCGInitFinishRsp {
    int32 retcode = 15;
}

// CmdId: 7450
message GCGInviteBattleNotify {
    uint32 confirm_end_time = 1;
    uint32 LNNOPIDBJDH = 11;
}

// CmdId: 7407
message GCGInviteGuestBattleReq {
    uint32 LNNOPIDBJDH = 7;
    uint32 uid = 5;
}

// CmdId: 7464
message GCGInviteGuestBattleRsp {
    uint32 uid = 4;
    uint32 punish_end_time = 1;
    uint32 LNNOPIDBJDH = 6;
    int32 retcode = 8;
    uint32 confirm_end_time = 13;
}

// CmdId: 7377
message GCGLevelChallengeDeleteNotify {
    repeated uint32 level_id_list = 11;
}

// CmdId: 7969
message GCGLevelChallengeFinishNotify {
    repeated uint32 finished_challenge_id_list = 14;
    uint32 level_id = 12;
}

// CmdId: 7023
message GCGLevelChallengeNotify {
    repeated GCGLevelData level_list = 13;
    repeated uint32 unlock_world_challenge_list = 5;
    repeated GCGBossChallengeData unlock_boss_challenge_list = 4;
}

message GCGLevelData {
    uint32 level_id = 3;
    repeated uint32 finished_challenge_id_list = 9;
}

message GCGLimitsInfo {
    uint32 EBKJNJHDGBB = 11;
    uint32 JAKJEOOMDKD = 2;
}

message GCGMatchInfo {
    repeated MatchPlayerInfo player_list = 14;
}

message GCGMessage {
    oneof message {
        GCGMsgTokenChange token_change = 9;
        GCGMsgPhaseChange phase_change = 2;
        GCGMsgAddCards add_cards = 7;
        GCGMsgRemoveCards remove_cards = 8;
        GCGMsgSelectOnStage select_on_stage = 12;
        GCGMsgDiceRoll dice_roll = 15;
        GCGMsgDiceReroll dice_reroll = 5;
        GCGMsgPass pass = 4;
        GCGMsgSkillResult skill_result = 1;
        GCGMsgCostDice cost_dice = 11;
        GCGMsgAddDice add_dice = 10;
        GCGMsgMoveCard move_card = 14;
        GCGMsgUseSkill use_skill = 6;
        GCGMsgNewCard new_card = 1986;
        GCGMsgUpdateController update_controller = 948;
        GCGMsgModifyAdd modify_add = 761;
        GCGMsgModifyRemove modify_remove = 1863;
        GCGMsgUseSkillEnd use_skill_end = 1956;
        GCGMsgDuelDataChange duel_data_change = 1834;
        GCGMsgClientPerform client_perform = 1305;
        GCGMsgGameOver game_over = 1760;
        GCGMsgOpTimer op_timer = 1132;
        GCGMsgWaitingListChange waiting_list_change = 1429;
        GCGMsgCardUpdate card_update = 1809;
        GCGMsgSelectOnStageByEffect select_on_stage_by_effect = 436;
        GCGMsgCostRevise cost_revise = 197;
        GCGMsgPhaseContinue phase_continue = 54;
        GCGMsgPVEIntentionInfo pve_intention_info = 930;
        GCGMsgPVEIntentionChange pve_intention_change = 1306;
        GCGMsgSkillLimitsChange skill_limits_change = 1718;
        GCGMsgNoDamageSkillResult no_damage_skill_result = 458;
        GCGMsgReactionBegin reaction_begin = 1867;
        GCGMsgReactionEnd reaction_end = 1440;
    }
}

message GCGMessagePack {
    GCGActionType action_type = 12;
    uint32 JFLANONHNDG = 6;
    repeated GCGMessage msg_list = 9;
    uint32 controller_id = 3;
}

// CmdId: 7133
message GCGMessagePackNotify {
    uint32 server_seq = 2;
    repeated GCGMessagePack msg_pack_list = 14;
}

message GCGMsgAddCards {
    uint32 pos = 15;
    repeated uint32 card_guid_list = 9;
    GCGReason reason = 13;
    uint32 controller_id = 3;
    GCGZoneType zone = 14;
}

message GCGMsgAddDice {
    map<uint32, GCGDiceSideType> BOBBDPDJCCF = 12;
    uint32 controller_id = 15;
    int32 change_count = 2;
    GCGReason reason = 13;
    map<uint32, GCGDiceSideType> OHFMGAOOGED = 9;
}

message GCGMsgCardUpdate {
    GCGCard card = 4;
}

message GCGMsgClientPerform {
    GCGClientPerformType perform_type = 9;
    repeated uint32 param_list = 5;
}

message GCGMsgCostDice {
    GCGReason reason = 15;
    repeated uint32 select_dice_index_list = 8;
    uint32 controller_id = 4;
}

message GCGMsgCostRevise {
    GCGCostReviseInfo cost_revise = 5;
    uint32 controller_id = 10;
}

message GCGMsgDiceReroll {
    repeated uint32 select_dice_index_list = 7;
    uint32 controller_id = 2;
    repeated GCGDiceSideType dice_side_list = 8;
}

message GCGMsgDiceRoll {
    repeated GCGDiceSideType dice_side_list = 15;
    uint32 controller_id = 3;
    uint32 dice_num = 11;
}

message GCGMsgDuelDataChange {
    uint32 round = 5;
}

message GCGMsgGameOver {
    GCGEndReason end_reason = 11;
    uint32 win_controller_id = 4;
}

message GCGMsgModifyAdd {
    uint32 pos = 6;
    uint32 controller_id = 13;
    uint32 owner_card_guid = 8;
    GCGReason reason = 2;
    repeated uint32 card_guid_list = 15;
}

message GCGMsgModifyRemove {
    repeated uint32 card_guid_list = 9;
    GCGReason reason = 2;
    uint32 controller_id = 15;
    uint32 owner_card_guid = 4;
}

message GCGMsgMoveCard {
    repeated uint32 fail_guid_list = 4;
    GCGZoneType HHOPBNJEOEJ = 12;
    GCGZoneType ILGFDPDGINH = 9;
    repeated uint32 card_guid_list = 5;
    uint32 controller_id = 10;
    GCGReason reason = 14;
}

message GCGMsgNewCard {
    GCGCard card = 8;
}

message GCGMsgNoDamageSkillResult {
    repeated GCGDamageDetail detail_list = 11;
    uint32 GKHNAEEAAOA = 12;
    uint32 CNHCLIBHJFK = 7;
    uint32 skill_id = 2;
    uint32 BDAICMLHECC = 14;
    uint32 HLKMOAAALJF = 4;
    uint32 OBLPBCDOIAK = 13;
}

message GCGMsgOpTimer {
    fixed64 time_stamp = 1;
    GCGPhaseType phase = 5;
    fixed64 begin_time = 10;
    uint32 controller_id = 7;
}

message GCGMsgPass {
    uint32 controller_id = 3;
}

message GCGMsgPhaseChange {
    repeated Uint32Pair allow_controller_map = 5;
    GCGPhaseType GPGCGGBIMPI = 3;
    GCGPhaseType FLEPBKJCEIE = 15;
}

message GCGMsgPhaseContinue {
}

message GCGMsgPVEIntention {
    uint32 card_guid = 15;
    repeated uint32 skill_id_list = 10;
}

message GCGMsgPVEIntentionChange {
    GCGIntentionChangeType change_type = 11;
    repeated GCGMsgPVEIntention change_intention_list = 3;
}

message GCGMsgPVEIntentionInfo {
    map<uint32, GCGMsgPVEIntention> intention_map = 9;
}

message GCGMsgReactionBegin {
    uint32 card_guid = 8;
    uint32 skill_id = 10;
}

message GCGMsgReactionEnd {
    uint32 skill_id = 4;
}

message GCGMsgRemoveCards {
    uint32 controller_id = 4;
    GCGZoneType zone = 5;
    GCGReason reason = 1;
    repeated uint32 card_guid_list = 10;
}

message GCGMsgSelectOnStage {
    uint32 controller_id = 9;
    GCGReason reason = 12;
    uint32 card_guid = 15;
}

message GCGMsgSelectOnStageByEffect {
    uint32 skill_id = 5;
    uint32 card_guid = 2;
    uint32 controller_id = 4;
}

message GCGMsgSkillLimitsChange {
    repeated GCGCardSkillLimitsInfo COOLNNBMKAC = 6;
}

message GCGMsgSkillResult {
    uint32 GKHNAEEAAOA = 6;
    uint32 CNHCLIBHJFK = 9;
    repeated GCGDamageDetail detail_list = 4;
    uint32 HLKMOAAALJF = 11;
    uint32 IBBCGCNPENN = 8;
    uint32 damage = 12;
    uint32 BLCGOPCAIKF = 14;
    uint32 skill_id = 10;
    uint32 EIIPECHJBJK = 2;
    uint32 OBLPBCDOIAK = 3;
    uint32 BDAICMLHECC = 5;
}

message GCGMsgTokenChange {
    uint32 KOECFICGDOI = 8;
    uint32 card_guid = 13;
    uint32 NBCLHDEBGGP = 1;
    GCGReason reason = 11;
    uint32 BKHAKDNDMIO = 14;
}

message GCGMsgUpdateController {
    repeated Uint32Pair allow_controller_map = 4;
}

message GCGMsgUseSkill {
    uint32 card_guid = 8;
    uint32 skill_id = 2;
}

message GCGMsgUseSkillEnd {
    uint32 card_guid = 11;
    uint32 skill_id = 14;
}

message GCGMsgWaitingListChange {
    uint32 controller_id = 13;
    uint32 cur_index = 4;
}

message GCGOperation {
    oneof op {
        GCGOperationRedraw op_redraw = 13;
        GCGOperationOnStageSelect op_select_on_stage = 5;
        GCGOperationReroll op_reroll = 7;
        GCGOperationAttack op_attack = 4;
        GCGOperationPass op_pass = 14;
        GCGOperationPlayCard op_play_card = 1;
        GCGOperationReboot op_reboot = 10;
        GCGOperationSurrender op_surrender = 9;
    }
}

message GCGOperationAttack {
    uint32 skill_id = 3;
    repeated uint32 cost_dice_index_list = 9;
}

message GCGOperationOnStageSelect {
    repeated uint32 cost_dice_index_list = 11;
    uint32 card_guid = 7;
}

message GCGOperationPass {
}

message GCGOperationPlayCard {
    repeated uint32 cost_dice_index_list = 1;
    uint32 card_guid = 5;
    repeated uint32 target_card_guid_list = 10;
    uint32 replace_card_guid = 6;
}

message GCGOperationReboot {
    repeated uint32 cost_card_guid_list = 10;
    repeated uint32 dice_index_list = 2;
}

message GCGOperationRedraw {
    repeated uint32 card_list = 1;
}

// CmdId: 7479
message GCGOperationReq {
    uint32 redirect_uid = 10;
    uint32 op_seq = 8;
    GCGOperation op = 1;
}

message GCGOperationReroll {
    repeated uint32 dice_index_list = 9;
}

// CmdId: 7925
message GCGOperationRsp {
    int32 retcode = 8;
    uint32 op_seq = 1;
}

message GCGOperationSurrender {
}

message GCGPhase {
    map<uint32, uint32> allow_controller_map = 14;
    GCGPhaseType phase_type = 10;
}

message GCGPlayCardCostInfo {
    uint32 card_id = 5;
    repeated Uint32Pair cost_map = 6;
}

message GCGPlayerBriefData {
    string nick_name = 7;
    string psn_id = 14;
    repeated uint32 card_id_list = 6;
    uint32 uid = 12;
    map<uint32, uint32> card_face_map = 3;
    ProfilePicture profile_picture = 2;
    string online_id = 11;
    uint32 controller_id = 15;
}

message GCGPlayerField {
    map<uint32, GCGZone> modify_zone_map = 11;
    repeated GCGDiceSideType dice_side_list = 5;
    repeated FOBNGECBEBK BGLJDAIDGEJ = 13;
    uint32 MGHEKGHODFC = 6;
    uint32 CLKDCEFCLPC = 1;
    uint32 HMBPCLPFOHL = 12;
    GCGZone JFABLHNLOJE = 7;
    uint32 HGMGNCDLHEL = 1424;
    bool is_passed = 3;
    uint32 KGKNKJGOOLG = 4;
    uint32 LHKPDFPOMAI = 9;
    GCGZone PFIPNPLNJLK = 10;
    GCGZone LHPELBOAMFC = 15;
    GCGZone OAPLAEMOEOB = 14;
    GCGZone PKAMKJIDCKG = 2;
    uint32 controller_id = 8;
}

message GCGPlayerGCGState {
    bool GFNDMEBDCIK = 5;
    uint32 uid = 2;
    bool CHBHOPHJBPM = 12;
}

message GCGPVEIntention {
    repeated uint32 skill_id_list = 15;
    uint32 card_guid = 6;
}

// CmdId: 7670
message GCGResourceStateNotify {
    bool is_complete = 3;
}

message GCGSelectOnStageCostInfo {
    uint32 card_guid = 4;
    repeated Uint32Pair cost_map = 7;
}

// CmdId: 7504
message GCGSettleNotify {
    uint32 game_id = 10;
    bool is_win = 7;
    repeated ItemParam reward_item_list = 15;
    GCGGameBusinessType business_type = 2;
    repeated uint32 finished_challenge_id_list = 12;
    repeated uint32 forbid_finish_challenge_list = 11;
    GCGEndReason reason = 1;
    uint32 win_controller_id = 5;
}

// CmdId: 7706
message GCGSettleOptionReq {
    GCGSettleOption option = 9;
}

// CmdId: 7356
message GCGSettleOptionRsp {
    int32 retcode = 8;
    GCGSettleOption option = 15;
}

message GCGSkillLimitsInfo {
    uint32 skill_id = 11;
    repeated GCGLimitsInfo limits_list = 1;
}

// CmdId: 7283
message GCGSkillPreviewAskReq {
}

// CmdId: 7775
message GCGSkillPreviewAskRsp {
    int32 retcode = 15;
}

message GCGSkillPreviewCardInfo {
    GCGZoneType zone_type = 3;
    uint32 card_id = 9;
    uint32 owner_card_guid = 10;
    uint32 controller_id = 13;
    uint32 face_type = 12;
    uint32 card_guid = 11;
}

message GCGSkillPreviewElementReactionInfo {
    repeated uint32 APFLEJEMNKA = 4;
    repeated GCGSkillPreviewReactionInfo reaction_list = 15;
    repeated uint32 PFNNOMPLCEC = 13;
}

message GCGSkillPreviewExtraInfo {
    repeated GCGSkillPreviewCardInfo FLOOBAAJGAL = 1;
    repeated GCGSkillPreviewCardInfo NKKHNKBCOAG = 14;
}

message GCGSkillPreviewHpInfo {
    GCGSkillHpChangeType change_type = 5;
    uint32 hp_change_value = 10;
}

message GCGSkillPreviewInfo {
    repeated GCGSkillPreviewCardInfo NKLKLKJCIMF = 9;
    map<uint32, GCGSkillPreviewHpInfo> hp_info_map = 11;
    map<uint32, GCGSkillPreviewTokenChangeInfo> card_token_change_map = 15;
    GCGSkillPreviewExtraInfo extra_info = 1;
    repeated GCGSkillPreviewCardInfo IJAMMNCLDEP = 3;
    repeated GCGSkillPreviewOnstageChangeInfo change_onstage_character_list = 13;
    uint32 skill_id = 10;
    map<uint32, GCGSkillPreviewElementReactionInfo> reaction_info_map = 5;
}

// CmdId: 7993
message GCGSkillPreviewNotify {
    repeated GCGSkillPreviewInfo skill_preview_list = 5;
    uint32 onstage_card_guid = 11;
    uint32 controller_id = 12;
    repeated GCGChangeOnstageInfo change_onstage_preview_list = 8;
    repeated GCGSkillPreviewPlayCardInfo play_card_list = 1;
}

message GCGSkillPreviewOnstageChangeInfo {
    uint32 MBGBIHBOPIF = 8;
    uint32 IJBIHEKEEHD = 3;
}

message GCGSkillPreviewPlayCardInfo {
    uint32 GKHNAEEAAOA = 4;
    GCGSkillPreviewInfo play_card_info = 13;
    uint32 JGMIHIGGIDB = 7;
}

message GCGSkillPreviewReactionInfo {
    uint32 EIJFJJJBIIH = 9;
    uint32 LKDBPBBGDBN = 12;
}

message GCGSkillPreviewTokenChangeInfo {
    repeated GCGSkillPreviewTokenInfo token_change_list = 4;
}

message GCGSkillPreviewTokenInfo {
    uint32 PFPJPOEDPON = 15;
    uint32 MEKGLJAFFHC = 4;
    uint32 BKHAKDNDMIO = 2;
}

// CmdId: 7949
message GCGStartChallengeByCheckRewardReq {
    uint32 level_id = 4;
    GCGLevelType level_type = 9;
    uint32 config_id = 5;
}

// CmdId: 7020
message GCGStartChallengeByCheckRewardRsp {
    uint32 config_id = 10;
    GCGLevelType level_type = 3;
    int32 retcode = 4;
    uint32 level_id = 5;
    repeated uint32 DKMOFJKMINH = 2;
    repeated uint32 IEKDCIFFABE = 11;
}

// CmdId: 7547
message GCGStartChallengeReq {
    GCGLevelType level_type = 11;
    uint32 level_id = 12;
    uint32 config_id = 9;
}

// CmdId: 7763
message GCGStartChallengeRsp {
    GCGLevelType level_type = 13;
    uint32 level_id = 4;
    uint32 config_id = 7;
    int32 retcode = 8;
}

message GCGTavernNpcInfo {
    uint32 level_id = 6;
    uint32 scene_point_id = 12;
    uint32 id = 7;
}

// CmdId: 7111
message GCGTavernNpcInfoNotify {
    GCGTavernNpcInfo character_npc = 4;
    repeated GCGTavernNpcInfo ELBDENMOANJ = 3;
    repeated GCGTavernNpcInfo ABGFKOHNMFD = 5;
}

// CmdId: 7926
message GCGTCInviteReq {
    uint32 level_id = 13;
    uint32 character_id = 1;
}

// CmdId: 7994
message GCGTCInviteRsp {
    uint32 character_id = 9;
    int32 retcode = 11;
}

message GCGTCTavernChallengeData {
    uint32 character_id = 2;
    repeated uint32 unlock_level_id_list = 13;
}

// CmdId: 7414
message GCGTCTavernChallengeDataNotify {
    repeated GCGTCTavernChallengeData tavern_challenge_list = 7;
}

// CmdId: 7281
message GCGTCTavernChallengeUpdateNotify {
    GCGTCTavernChallengeData tavern_challenge = 3;
}

// CmdId: 7507
message GCGTCTavernInfoNotify {
    bool PIBHPPGGFAH = 9;
    uint32 avatar_id = 6;
    uint32 level_id = 7;
    uint32 point_id = 1;
    bool ANNJEIOGNGA = 14;
    uint32 element_type = 12;
    uint32 character_id = 10;
}

message GCGToken {
    uint32 value = 15;
    uint32 key = 9;
}

message GCGWeekChallengeInfo {
    uint32 unlock_time = 14;
    uint32 npc_id = 13;
    bool is_finished = 3;
}

// CmdId: 7747
message GCGWeekChallengeInfoNotify {
    uint32 next_refresh_time = 7;
    repeated GCGWeekChallengeInfo challenge_info_list = 13;
    bool is_notify_npc_change = 6;
}

// CmdId: 7766
message GCGWorldChallengeUnlockNotify {
    repeated uint32 unlock_id_list = 9;
}

// CmdId: 7605
message GCGWorldPlayerGCGStateReq {
}

// CmdId: 7880
message GCGWorldPlayerGCGStateRsp {
    repeated GCGPlayerGCGState player_state = 1;
    int32 retcode = 10;
}

message GCGZone {
    repeated uint32 card_list = 6;
}

message GearActivityDetailInfo {
    JigsawPictureData jigsaw_picture_data = 8;
    repeated GearLevelData gear_level_data_list = 3;
}

// CmdId: 22172
message GearActivityFinishPlayGearReq {
    uint32 level_id = 11;
    repeated GearColumnInfo gear_column_info_list = 13;
    bool is_success = 12;
    bool use_clue = 1;
}

// CmdId: 21164
message GearActivityFinishPlayGearRsp {
    bool is_success = 11;
    uint32 level_id = 5;
    int32 retcode = 4;
}

// CmdId: 20007
message GearActivityFinishPlayPictureReq {
    bool is_success = 5;
}

// CmdId: 22295
message GearActivityFinishPlayPictureRsp {
    bool is_success = 12;
    int32 retcode = 10;
}

// CmdId: 24658
message GearActivityStartPlayGearReq {
    uint32 level_id = 3;
}

// CmdId: 20410
message GearActivityStartPlayGearRsp {
    int32 retcode = 11;
    uint32 level_id = 4;
}

// CmdId: 20870
message GearActivityStartPlayPictureReq {
}

// CmdId: 20091
message GearActivityStartPlayPictureRsp {
    int32 retcode = 4;
}

message GearColumnInfo {
    uint32 gear_id = 5;
    uint32 HHKCHFDLAMO = 2;
    bool IGLHBIKHHFL = 8;
    bool EJJFGFOKOPC = 10;
    uint32 LCHKEEDFCCL = 3;
}

message GearLevelData {
    uint32 open_time = 3;
    uint32 ACAPFNOLMKE = 1;
    uint32 level_id = 2;
    uint32 NJPEANGOAMC = 9;
    bool is_open = 6;
    bool is_finished = 15;
}

// CmdId: 7920
message GEBNMMPJMPG {
    uint32 id = 13;
    bool FJOJGDKMFDG = 1;
}

// CmdId: 21051
message GELGLOAKDBI {
    uint32 level_id = 4;
    bool is_success = 5;
}

message GeneralMatchInfo {
    repeated MatchPlayerInfo player_list = 12;
    uint32 match_id = 3;
    uint32 match_param = 15;
}

message GEPJEEOPGMK {
    Vector rot = 15;
    Vector pos = 3;
}

// CmdId: 2044
message GetActivityInfoReq {
    repeated uint32 activity_id_list = 3;
}

// CmdId: 2187
message GetActivityInfoRsp {
    repeated ActivityInfo activity_info_list = 1;
    repeated Uint32Pair disable_transfer_point_interaction_list = 12;
    repeated uint32 activated_sale_id_list = 7;
    int32 retcode = 6;
}

// CmdId: 2169
message GetActivityScheduleReq {
}

// CmdId: 2182
message GetActivityScheduleRsp {
    repeated ActivityScheduleInfo activity_schedule_list = 9;
    uint32 remain_fly_sea_lamp_num = 1;
    int32 retcode = 15;
}

// CmdId: 741
message GetActivityShopSheetInfoReq {
    uint32 shop_type = 11;
}

// CmdId: 772
message GetActivityShopSheetInfoRsp {
    uint32 shop_type = 9;
    int32 retcode = 8;
    repeated ActivityShopSheetInfo sheet_info_list = 1;
}

// CmdId: 497
message GetAllActivatedBargainDataReq {
}

// CmdId: 481
message GetAllActivatedBargainDataRsp {
    int32 retcode = 10;
    repeated BargainSnapshot snapshot_list = 8;
}

// CmdId: 5666
message GetAllH5ActivityInfoReq {
}

// CmdId: 5659
message GetAllH5ActivityInfoRsp {
    repeated H5ActivityInfo h5_activity_info_list = 9;
    int32 retcode = 7;
    uint32 client_red_dot_timestamp = 5;
}

// CmdId: 1465
message GetAllMailNotify {
    bool is_collected = 7;
}

// CmdId: 1459
message GetAllMailReq {
    bool is_collected = 15;
}

// CmdId: 1499
message GetAllMailResultNotify {
    uint32 CDLABECFBPJ = 7;
    repeated MailData mail_list = 5;
    bool is_collected = 12;
    uint32 GAAHHONLFPA = 8;
    int32 retcode = 2;
    string transaction = 10;
}

// CmdId: 1478
message GetAllMailRsp {
    bool is_collected = 4;
    repeated MailData mail_list = 6;
    bool is_truncated = 10;
    int32 retcode = 7;
}

// CmdId: 5541
message GetAllSceneGalleryInfoReq {
}

// CmdId: 5572
message GetAllSceneGalleryInfoRsp {
    int32 retcode = 9;
    repeated SceneGalleryInfo gallery_info_list = 14;
}

// CmdId: 4095
message GetAllUnlockNameCardReq {
}

// CmdId: 4050
message GetAllUnlockNameCardRsp {
    repeated uint32 name_card_list = 15;
    int32 retcode = 3;
}

// CmdId: 243
message GetAreaExplorePointReq {
    repeated uint32 area_id_list = 2;
}

// CmdId: 229
message GetAreaExplorePointRsp {
    int32 retcode = 8;
    repeated uint32 area_id_list = 11;
    repeated uint32 explore_point_list = 5;
}

// CmdId: 1472
message GetAuthkeyReq {
    string auth_appid = 9;
    uint32 EAFDADOGNIF = 10;
    uint32 OBPIIAHOMOE = 5;
}

// CmdId: 1492
message GetAuthkeyRsp {
    uint32 OBPIIAHOMOE = 3;
    int32 retcode = 8;
    uint32 EAFDADOGNIF = 10;
    string game_biz = 4;
    string authkey = 1;
    string auth_appid = 15;
}

// CmdId: 2123
message GetAuthSalesmanInfoReq {
    uint32 schedule_id = 15;
}

// CmdId: 2010
message GetAuthSalesmanInfoRsp {
    uint32 day_reward_id = 4;
    uint32 schedule_id = 13;
    int32 retcode = 10;
}

// CmdId: 448
message GetBargainDataReq {
    uint32 bargain_id = 15;
}

// CmdId: 498
message GetBargainDataRsp {
    int32 retcode = 11;
    uint32 bargain_id = 6;
    BargainSnapshot snapshot = 2;
}

// CmdId: 2620
message GetBattlePassProductReq {
    uint32 battle_pass_product_play_type = 1;
}

// CmdId: 2623
message GetBattlePassProductRsp {
    string price_tier = 9;
    int32 retcode = 2;
    uint32 cur_schedule_id = 11;
    string product_id = 15;
    uint32 battle_pass_product_play_type = 3;
}

// CmdId: 2790
message GetBlossomBriefInfoListReq {
    repeated uint32 city_id_list = 4;
}

// CmdId: 2796
message GetBlossomBriefInfoListRsp {
    int32 retcode = 5;
    repeated BlossomBriefInfo brief_info_list = 6;
}

// CmdId: 2599
message GetBonusActivityRewardReq {
    uint32 bonus_activity_id = 13;
}

// CmdId: 2575
message GetBonusActivityRewardRsp {
    BonusActivityInfo bonus_activity_info_list = 12;
    int32 retcode = 8;
}

// CmdId: 4019
message GetChatEmojiCollectionReq {
}

// CmdId: 4027
message GetChatEmojiCollectionRsp {
    ChatEmojiCollectionData chat_emoji_collection_data = 3;
    int32 retcode = 8;
}

// CmdId: 4317
message GetCityHuntingOfferReq {
    uint32 city_id = 12;
}

// CmdId: 4349
message GetCityHuntingOfferRsp {
    int32 retcode = 9;
    uint32 city_id = 11;
    repeated HuntingOfferData hunting_offer_list = 3;
    HuntingPair ongoing_hunting_pair = 1;
    uint32 cur_week_finished_count = 4;
    uint32 next_refresh_time = 5;
}

// CmdId: 2890
message GetCityReputationInfoReq {
    uint32 city_id = 10;
}

// CmdId: 2896
message GetCityReputationInfoRsp {
    int32 retcode = 3;
    uint32 city_id = 12;
    CityReputationInfo city_reputation_info = 1;
}

// CmdId: 2878
message GetCityReputationMapInfoReq {
}

// CmdId: 2812
message GetCityReputationMapInfoRsp {
    int32 retcode = 11;
    repeated uint32 EDAOAKIHGDE = 7;
    repeated uint32 PBGGOGLHINL = 8;
    bool MDAOIPDBBLN = 4;
    bool KOIGFJPNDIO = 1;
}

// CmdId: 143
message GetCompoundDataReq {
}

// CmdId: 129
message GetCompoundDataRsp {
    repeated CompoundQueueData compound_que_data_list = 14;
    repeated uint32 unlock_compound_list = 2;
    int32 retcode = 1;
}

// CmdId: 6201
message GetCustomDungeonReq {
}

// CmdId: 6246
message GetCustomDungeonRsp {
    CustomDungeonBanInfo ban_info = 12;
    int32 retcode = 10;
    repeated CustomDungeonBrief brief_list = 11;
}

// CmdId: 949
message GetDailyDungeonEntryInfoReq {
    uint32 scene_id = 6;
}

// CmdId: 918
message GetDailyDungeonEntryInfoRsp {
    repeated DailyDungeonEntryInfo daily_dungeon_info_list = 15;
    int32 retcode = 6;
}

// CmdId: 3062
message GetDungeonEntryExploreConditionReq {
    uint32 LNDLCHHFFEA = 13;
    uint32 OLGJHFAHKNA = 6;
    uint32 scene_id = 1;
}

// CmdId: 3261
message GetDungeonEntryExploreConditionRsp {
    DungeonEntryCond dungeon_entry_cond = 13;
    int32 retcode = 14;
}

// CmdId: 2017
message GetExpeditionAssistInfoListReq {
}

// CmdId: 2056
message GetExpeditionAssistInfoListRsp {
    repeated ExpeditionAssistInfo assist_info_list = 6;
    int32 retcode = 12;
}

// CmdId: 4015
message GetFriendShowAvatarInfoReq {
    uint32 uid = 13;
}

// CmdId: 4026
message GetFriendShowAvatarInfoRsp {
    repeated ShowAvatarInfo show_avatar_info_list = 10;
    uint32 uid = 3;
    int32 retcode = 15;
}

// CmdId: 4034
message GetFriendShowNameCardInfoReq {
    uint32 uid = 7;
}

// CmdId: 4064
message GetFriendShowNameCardInfoRsp {
    repeated uint32 show_name_card_id_list = 15;
    int32 retcode = 9;
    uint32 uid = 2;
}

// CmdId: 4845
message GetFurnitureCurModuleArrangeCountReq {
}

// CmdId: 1590
message GetGachaInfoReq {
}

// CmdId: 1596
message GetGachaInfoRsp {
    repeated GachaInfo gacha_info_list = 9;
    int32 retcode = 7;
    uint32 PAHELCJNHAH = 4;
    bool HFEKPDOKLDK = 15;
    bool PKOIBFIOLAO = 6;
    uint32 PKPENDLDPKI = 2;
}

// CmdId: 114
message GetGameplayRecommendationReq {
    uint32 avatar_id = 7;
    oneof detail {
        GameplayRecommendationSkillRequest skill_request = 1417;
        GameplayRecommendationReliquaryRequest reliquary_request = 616;
        GameplayRecommendationElementReliquaryRequest element_reliquary_request = 2013;
    }
}

// CmdId: 102
message GetGameplayRecommendationRsp {
    int32 retcode = 8;
    uint32 avatar_id = 11;
    oneof detail {
        GameplayRecommendationSkillResponse skill_response = 645;
        GameplayRecommendationReliquaryResponse reliquary_response = 1180;
        GameplayRecommendationElementReliquaryResponse element_reliquary_response = 1053;
    }
}

// CmdId: 4708
message GetHomeExchangeWoodInfoReq {
}

// CmdId: 4480
message GetHomeExchangeWoodInfoRsp {
    message HomeExchangeWoodInfo {
        uint32 KLNKMDGAOJI = 14;
        uint32 wood_id = 8;
        uint32 NMOCBJLDBGH = 9;
        fixed32 next_refresh_time = 1;
    }
    int32 retcode = 4;
    repeated HomeExchangeWoodInfo wood_info_list = 3;
}

// CmdId: 4503
message GetHomeLevelUpRewardReq {
    uint32 level = 6;
}

// CmdId: 4757
message GetHomeLevelUpRewardRsp {
    int32 retcode = 11;
    uint32 level = 4;
}

// CmdId: 4315
message GetHuntingOfferRewardReq {
    uint32 city_id = 3;
    HuntingPair hunting_pair = 6;
}

// CmdId: 4326
message GetHuntingOfferRewardRsp {
    int32 retcode = 12;
    HuntingPair hunting_pair = 10;
    uint32 city_id = 11;
}

// CmdId: 1909
message GetInvestigationMonsterReq {
    bool is_for_mark = 2;
    repeated uint32 city_id_list = 15;
}

// CmdId: 1922
message GetInvestigationMonsterRsp {
    bool is_for_mark = 8;
    int32 retcode = 9;
    repeated InvestigationMonster monster_list = 2;
}

// CmdId: 1476
message GetMailItemReq {
    repeated uint32 mail_id_list = 9;
}

// CmdId: 1416
message GetMailItemRsp {
    repeated EquipParam item_list = 5;
    repeated uint32 mail_id_list = 2;
    int32 retcode = 3;
}

// CmdId: 3273
message GetMapAreaReq {
}

// CmdId: 3286
message GetMapAreaRsp {
    int32 retcode = 1;
    repeated MapAreaInfo map_area_info_list = 12;
}

// CmdId: 3008
message GetMapMarkTipsReq {
}

// CmdId: 3030
message GetMapMarkTipsRsp {
    repeated MapMarkTipsInfo mark_tips_list = 12;
    int32 retcode = 14;
}

// CmdId: 3990
message GetMechanicusInfoReq {
}

// CmdId: 3996
message GetMechanicusInfoRsp {
    MechanicusInfo mechanicus_info = 14;
    int32 retcode = 11;
}

// CmdId: 147
message GetNextResourceInfoReq {
}

// CmdId: 136
message GetNextResourceInfoRsp {
    ResVersionConfig next_res_version_config = 14;
    string next_resource_url = 12;
    int32 retcode = 15;
}

// CmdId: 46
message GetOnlinePlayerInfoReq {
    bool is_online_id = 11;
    oneof player_id {
        uint32 target_uid = 4;
        string online_id = 3;
        string psn_id = 14;
    }
}

// CmdId: 82
message GetOnlinePlayerInfoRsp {
    OnlinePlayerInfo target_player_info = 9;
    uint32 param = 3;
    int32 retcode = 14;
    uint32 target_uid = 15;
}

// CmdId: 72
message GetOnlinePlayerListReq {
}

// CmdId: 92
message GetOnlinePlayerListRsp {
    repeated OnlinePlayerInfo player_info_list = 15;
    int32 retcode = 4;
    uint32 param = 10;
}

// CmdId: 5190
message GetOpActivityInfoReq {
}

// CmdId: 5196
message GetOpActivityInfoRsp {
    int32 retcode = 7;
    repeated OpActivityInfo op_activity_info_list = 5;
}

// CmdId: 415
message GetParentQuestVideoKeyReq {
    uint32 parent_quest_id = 4;
}

// CmdId: 426
message GetParentQuestVideoKeyRsp {
    uint64 video_key = 3;
    uint32 parent_quest_id = 8;
    int32 retcode = 10;
}

// CmdId: 4069
message GetPlayerAskFriendListReq {
}

// CmdId: 4032
message GetPlayerAskFriendListRsp {
    int32 retcode = 9;
    repeated FriendBrief ask_friend_list = 11;
}

// CmdId: 4029
message GetPlayerBlacklistReq {
}

// CmdId: 4028
message GetPlayerBlacklistRsp {
    repeated FriendBrief blacklist = 11;
    int32 retcode = 5;
}

// CmdId: 4090
message GetPlayerFriendListReq {
}

// CmdId: 4096
message GetPlayerFriendListRsp {
    repeated FriendBrief friend_list = 9;
    repeated FriendBrief ask_friend_list = 8;
    int32 retcode = 5;
}

// CmdId: 4814
message GetPlayerHomeCompInfoReq {
}

// CmdId: 1820
message GetPlayerMpModeAvailabilityReq {
}

// CmdId: 1823
message GetPlayerMpModeAvailabilityRsp {
    int32 retcode = 6;
    int32 mp_ret = 2;
    repeated uint32 param_list = 5;
}

// CmdId: 4092
message GetPlayerSocialDetailReq {
    uint32 uid = 3;
}

// CmdId: 4063
message GetPlayerSocialDetailRsp {
    SocialDetail detail_data = 2;
    int32 retcode = 13;
}

// CmdId: 190
message GetPlayerTokenReq {
    uint32 KDIHPMJOCPG = 7;
    string HKNHLNJCCLP = 5;
    uint32 platform_type = 3;
    string account_token = 12;
    uint32 JGDGPILDCHJ = 576;
    string online_id = 8;
    string account_uid = 15;
    string KIIHGMPJKDJ = 6;
    string birthday = 713;
    string psn_id = 1;
    uint32 IEPOFPNOOKD = 176;
    uint32 channel_id = 4;
    uint32 uid = 14;
    bool is_guest = 13;
    string OOABKBBNBKL = 963;
    uint32 key_id = 970;
    uint32 CIJNPHDIOND = 2;
    string AAEIDEMEKFF = 9;
    uint32 CJHEEAGCFJG = 10;
    string IDMEOEHPCGF = 11;
    string client_rand_key = 831;
}

// CmdId: 196
message GetPlayerTokenRsp {
    string birthday = 1258;
    string msg = 11;
    string sign = 907;
    bytes JLOPICGGPBP = 9;
    uint32 CIJNPHDIOND = 12;
    uint32 KDIHPMJOCPG = 834;
    uint32 platform_type = 1;
    uint32 channel_id = 1156;
    int32 retcode = 10;
    string account_uid = 4;
    uint32 IEPOFPNOOKD = 1572;
    string token = 15;
    uint32 key_id = 1470;
    uint32 LFPHHMGKIIP = 1474;
    string server_rand_key = 1291;
    bool MPKKNNFFINM = 1058;
    bool is_proficient_player = 14;
    uint32 tag = 1489;
    uint32 uid = 13;
    uint64 secret_key_seed = 5;
    string AAEIDEMEKFF = 446;
    StopServerInfo stop_server = 1928;
    bool is_guest = 2;
    uint32 JJNLKCNPOLA = 7;
    bool EHGCBOCIJPA = 1881;
    uint32 FGAKKMHIKHF = 6;
    string client_version_random_key = 238;
    string secret_key = 3;
    bytes MFPGIGPEFBK = 8;
    repeated uint32 finish_collection_id_list = 785;
    string psn_id = 1146;
    string HKNHLNJCCLP = 265;
}

// CmdId: 2295
message GetPushTipsRewardReq {
    repeated uint32 push_tips_id_list = 5;
}

// CmdId: 2250
message GetPushTipsRewardRsp {
    repeated uint32 push_tips_id_list = 13;
    int32 retcode = 5;
}

// CmdId: 418
message GetQuestLackingResourceReq {
    uint32 quest_id = 5;
}

// CmdId: 458
message GetQuestLackingResourceRsp {
    map<uint32, uint32> lacked_npc_map = 14;
    map<uint32, uint32> lacked_place_map = 13;
    uint32 quest_id = 1;
    repeated uint32 lacked_npc_list = 9;
    repeated uint32 lacked_place_list = 15;
    int32 retcode = 11;
}

// CmdId: 472
message GetQuestTalkHistoryReq {
    uint32 parent_quest_id = 11;
}

// CmdId: 492
message GetQuestTalkHistoryRsp {
    repeated uint32 talk_id_list = 3;
    uint32 parent_quest_id = 5;
    int32 retcode = 13;
}

// CmdId: 4035
message GetRecentMpPlayerListReq {
}

// CmdId: 4033
message GetRecentMpPlayerListRsp {
    int32 retcode = 10;
    repeated FriendBrief recent_mp_player_brief_list = 2;
}

// CmdId: 6237
message GetRecommendCustomDungeonReq {
    bool is_refresh = 14;
}

// CmdId: 6248
message GetRecommendCustomDungeonRsp {
    int32 retcode = 11;
    repeated OtherCustomDungeonBrief custom_dungeon_list = 3;
}

// CmdId: 5615
message GetRegionSearchReq {
}

// CmdId: 5070
message GetReunionMissionInfoReq {
    uint32 mission_id = 8;
}

// CmdId: 5073
message GetReunionMissionInfoRsp {
    ReunionMissionInfo mission_info = 8;
    int32 retcode = 1;
}

// CmdId: 5074
message GetReunionPrivilegeInfoReq {
    uint32 privilege_id = 12;
}

// CmdId: 5075
message GetReunionPrivilegeInfoRsp {
    ReunionPrivilegeInfo privilege_info = 2;
    int32 retcode = 9;
}

// CmdId: 5065
message GetReunionSignInInfoReq {
    uint32 sign_in_config_id = 7;
}

// CmdId: 5076
message GetReunionSignInInfoRsp {
    int32 retcode = 12;
    ReunionSignInInfo sign_in_info = 10;
}

// CmdId: 8083
message GetRogueDairyRepairInfoReq {
}

// CmdId: 8005
message GetRogueDairyRepairInfoRsp {
    int32 retcode = 1;
}

// CmdId: 286
message GetSceneAreaReq {
    uint32 belong_uid = 1;
    uint32 scene_id = 9;
}

// CmdId: 251
message GetSceneAreaRsp {
    uint32 scene_id = 11;
    repeated uint32 area_id_list = 9;
    repeated CityInfo city_info_list = 12;
    int32 retcode = 2;
}

// CmdId: 576
message GetSceneNpcPositionReq {
    repeated uint32 npc_id_list = 1;
    uint32 scene_id = 7;
}

// CmdId: 516
message GetSceneNpcPositionRsp {
    int32 retcode = 9;
    repeated NpcPositionInfo npc_info_list = 14;
    uint32 scene_id = 11;
}

// CmdId: 3461
message GetScenePerformanceReq {
}

// CmdId: 3454
message GetScenePerformanceRsp {
    uint32 LJCBJLEAKJF = 7;
    uint32 DMEEGEIMBDB = 2;
    uint32 BFIIPKLKFCK = 15;
    int32 retcode = 4;
    uint32 JEGLKPIKBLJ = 3;
    uint32 HDNCFOKNHEF = 14;
    uint32 EDFGDFFFLKO = 8;
    uint32 HLGMNFHKIDA = 5;
    Vector pos = 11;
}

// CmdId: 265
message GetScenePointReq {
    uint32 scene_id = 1;
    uint32 belong_uid = 2;
    bool BJLCFHHIGJD = 15;
}

// CmdId: 299
message GetScenePointRsp {
    uint32 scene_id = 3;
    repeated uint32 JECOFNNDAJP = 9;
    repeated uint32 ELNACLNNKIO = 14;
    uint32 belong_uid = 4;
    repeated uint32 GNNBFLNNODN = 11;
    repeated uint32 OLIIBIKADBB = 2;
    repeated uint32 CBNONONIPKH = 1;
    repeated uint32 MLBGHEBJAOH = 7;
    bool BJLCFHHIGJD = 10;
    repeated uint32 BHLFAJLFEGC = 13;
    repeated uint32 MNOLEGHOAOB = 8;
    int32 retcode = 6;
    repeated uint32 unlocked_point_list = 12;
}

// CmdId: 716
message GetShopmallDataReq {
}

// CmdId: 756
message GetShopmallDataRsp {
    repeated uint32 shop_type_list = 9;
    int32 retcode = 15;
}

// CmdId: 790
message GetShopReq {
    uint32 shop_type = 11;
}

// CmdId: 796
message GetShopRsp {
    Shop shop = 5;
    int32 retcode = 9;
}

// CmdId: 2516
message GetSignInRewardReq {
    uint32 reward_day = 13;
    uint32 schedule_id = 6;
}

// CmdId: 2556
message GetSignInRewardRsp {
    int32 retcode = 2;
    SignInInfo sign_in_info = 1;
}

// CmdId: 6212
message GetStoreCustomDungeonReq {
}

// CmdId: 6219
message GetStoreCustomDungeonRsp {
    repeated OtherCustomDungeonBrief custom_dungeon_list = 6;
    int32 retcode = 5;
}

// CmdId: 6317
message GetUgcBriefInfoReq {
    uint64 ugc_guid = 10;
    UgcType ugc_type = 1;
}

// CmdId: 6349
message GetUgcBriefInfoRsp {
    uint64 ugc_guid = 5;
    int32 retcode = 10;
    UgcType ugc_type = 2;
    oneof brief {
        UgcMusicBriefInfo music_brief_info = 1;
    }
}

// CmdId: 6309
message GetUgcReq {
    GetUgcType get_ugc_type = 15;
    UgcType ugc_type = 1;
    uint32 schedule_id = 11;
    RecordUsage ugc_record_usage = 6;
    uint64 ugc_guid = 3;
    bool is_require_brief = 4;
}

// CmdId: 6316
message GetUgcRsp {
    UgcType ugc_type = 9;
    RecordUsage ugc_record_usage = 11;
    uint64 ugc_guid = 4;
    int32 retcode = 10;
    oneof record {
        UgcMusicRecord music_record = 7;
    }
    oneof brief {
        UgcMusicBriefInfo music_brief_info = 2005;
    }
}

// CmdId: 4258
message GetWidgetSlotReq {
}

// CmdId: 4291
message GetWidgetSlotRsp {
    repeated WidgetSlotData slot_list = 12;
    int32 retcode = 8;
}

// CmdId: 3100
message GetWorldMpInfoReq {
}

// CmdId: 3353
message GetWorldMpInfoRsp {
    int32 retcode = 13;
    bool is_in_mp_mode = 9;
    uint32 quit_mp_valid_time = 11;
}

// CmdId: 2916
message GFGKHDBBKIL {
    int32 retcode = 10;
    uint32 offering_id = 4;
}

message GGFLMPNCCNA {
    uint32 apply_entity_id = 14;
}

// CmdId: 123
message GHMNCNNHLAI {
    bool is_force_set = 6;
    uint32 game_time = 5;
    uint32 client_game_time = 14;
}

// CmdId: 22187
message GIIHGMKANHL {
    int32 retcode = 14;
    uint32 pos_id = 15;
}

// CmdId: 8253
message GiveUpRoguelikeDungeonCardReq {
}

// CmdId: 8563
message GiveUpRoguelikeDungeonCardRsp {
    int32 retcode = 13;
}

message GivingRecord {
    bool is_gadget_giving = 2;
    bool is_finished = 13;
    uint32 last_group_id = 3;
    map<uint32, uint32> material_cnt_map = 9;
    uint32 giving_id = 7;
    uint32 group_id = 8;
    uint32 config_id = 14;
}

// CmdId: 124
message GivingRecordChangeNotify {
    GivingRecord giving_record = 11;
    bool is_deactive = 7;
}

// CmdId: 137
message GivingRecordNotify {
    repeated GivingRecord giving_record_list = 15;
}

message GKPKECDLNPD {
    float AJHLPJGEIMN = 9;
    float OHHCCMMBDIH = 5;
}

// CmdId: 5336
message GlobalBuildingInfoNotify {
    repeated BuildingInfo building_list = 7;
    uint32 current_num = 6;
    uint32 max_num = 4;
}

message GMObstacleInfo {
    ShapeType shape = 2;
    int64 timestamp = 8;
    MathQuaternion rotation = 11;
    Vector center = 1;
    int32 obstacle_id = 6;
    Vector3Int extents = 13;
}

// CmdId: 2400
message GMShowNavMeshReq {
    Vector center = 13;
    Vector extent = 12;
    int32 uid = 6;
}

// CmdId: 2357
message GMShowNavMeshRsp {
    int32 retcode = 15;
    repeated PBNavMeshTile tiles = 12;
}

// CmdId: 2334
message GMShowObstacleReq {
    int32 uid = 9;
}

// CmdId: 2364
message GMShowObstacleRsp {
    int32 retcode = 15;
    repeated GMObstacleInfo obstacles = 5;
}

// CmdId: 50
message GmTalkNotify {
    string msg = 7;
}

// CmdId: 96
message GmTalkReq {
    string msg = 3;
}

// CmdId: 89
message GmTalkRsp {
    string msg = 6;
    string retmsg = 14;
    int32 retcode = 5;
}

// CmdId: 2911
message GNENODIAGCE {
    int32 retcode = 5;
    uint32 offering_id = 10;
    repeated ItemParam item_list = 11;
}

// CmdId: 697
message GrantRewardNotify {
    Reward reward = 11;
}

message GravenInnocenceCampInfo {
    repeated GravenInnocenceCampStageInfo stage_info_list = 2;
}

message GravenInnocenceCampStageInfo {
    bool is_open = 11;
    bool is_finished = 2;
    uint32 level_id = 14;
    uint32 stage_id = 5;
}

message GravenInnocenceCarveInfo {
    uint32 can_edit_count = 1;
    repeated GravenInnocenceCarveStageInfo stage_info_list = 7;
    repeated uint32 has_edit_config_id_list = 10;
}

message GravenInnocenceCarveStageInfo {
    bool is_open = 13;
    uint32 stage_id = 11;
}

message GravenInnocenceDetailInfo {
    GravenInnocencePhotoInfo photo_info = 4;
    bool is_content_closed = 8;
    GravenInnocenceCarveInfo carve_info = 15;
    GravenInnocenceCampInfo camp_info = 9;
    GravenInnocenceRaceInfo race_info = 13;
}

// CmdId: 24050
message GravenInnocenceEditCarveCombinationReq {
    uint32 entity_id = 1;
    CustomGadgetTreeInfo combination_info = 2;
}

// CmdId: 24702
message GravenInnocenceEditCarveCombinationRsp {
    int32 retcode = 5;
}

// CmdId: 23232
message GravenInnocencePhotoFinishReq {
    uint32 param = 12;
    uint32 object_id = 1;
}

// CmdId: 21852
message GravenInnocencePhotoFinishRsp {
    uint32 param = 7;
    int32 retcode = 5;
    uint32 object_id = 6;
}

message GravenInnocencePhotoInfo {
    repeated GravenInnocencePhotoStageInfo stage_info_list = 10;
    repeated GravenInnocencePhotoObjectInfo object_info_list = 4;
}

message GravenInnocencePhotoObjectInfo {
    uint32 object_id = 2;
    uint32 finish_time = 6;
    uint32 param = 4;
}

// CmdId: 24631
message GravenInnocencePhotoReminderNotify {
    uint32 group_bundle_id = 3;
    uint32 reminder_id = 5;
}

message GravenInnocencePhotoStageInfo {
    bool is_finished = 2;
    uint32 stage_id = 15;
    bool is_open = 3;
}

message GravenInnocenceRaceInfo {
    repeated GravenInnocenceRaceLevelInfo level_info_list = 14;
}

message GravenInnocenceRaceLevelInfo {
    uint32 max_score = 10;
    bool is_open = 13;
    uint32 level_id = 14;
}

// CmdId: 21853
message GravenInnocenceRaceRestartReq {
    uint32 gallery_id = 11;
}

// CmdId: 20494
message GravenInnocenceRaceRestartRsp {
    int32 retcode = 15;
    uint32 gallery_id = 5;
}

// CmdId: 24786
message GravenInnocenceRaceSettleNotify {
    GalleryStopReason reason = 7;
    uint32 level_id = 8;
    bool is_new_record = 13;
    uint32 JCFJLLKLHFO = 10;
    uint32 score = 5;
    uint32 CCIKKABKAPE = 1;
    uint32 MFJBNDHNNMO = 2;
    uint32 gallery_id = 15;
    uint32 IFECDFBGBAA = 14;
    bool is_success = 3;
}

// CmdId: 5759
message GroupLinkAllNotify {
    repeated GroupLinkBundle bundle_list = 6;
}

message GroupLinkBundle {
    bool is_show_mark = 10;
    uint32 bundle_id = 14;
    Vector center = 7;
    EDGEOCMAKEP PKFPGJJLJKE = 11;
    uint32 radius = 12;
    bool is_activated = 3;
    uint32 scene_id = 5;
}

// CmdId: 5766
message GroupLinkChangeNotify {
    GroupLinkBundle bundle = 3;
}

// CmdId: 5767
message GroupLinkDeleteNotify {
    uint32 bundle_id = 14;
}

// CmdId: 5799
message GroupLinkMarkUpdateNotify {
    GroupLinkBundle bundle = 13;
}

// CmdId: 3026
message GroupSuiteNotify {
    map<uint32, uint32> group_map = 15;
}

// CmdId: 3281
message GroupUnloadNotify {
    repeated uint32 group_list = 6;
}

// CmdId: 3457
message GuestBeginEnterSceneNotify {
    uint32 scene_id = 6;
    uint32 uid = 12;
}

// CmdId: 3145
message GuestPostEnterSceneNotify {
    uint32 uid = 4;
    uint32 scene_id = 3;
}

// CmdId: 5667
message H5ActivityIdsNotify {
    map<uint32, uint32> h5_activity_map = 15;
    uint32 client_red_dot_timestamp = 14;
}

message H5ActivityInfo {
    uint32 OBINALNIFGI = 9;
    string prefab_path = 10;
    uint32 begin_time = 11;
    uint32 EKOKDKCNOOA = 13;
    uint32 end_time = 2;
    uint32 content_close_time = 3;
    bool is_entrance_open = 12;
    string url = 1;
}

message HachiActivityDetailInfo {
    map<uint32, HachiStageInfo> stage_map = 14;
}

message HachiStageInfo {
    uint32 stage_id = 2;
    bool is_open = 7;
    uint32 open_time = 13;
    bool is_finished = 4;
}

// CmdId: 21126
message HCCDEDBNNLH {
    uint32 level_id = 1;
    repeated uint32 CHFJCPHLGDI = 7;
}

// CmdId: 5504
message HDHPLGOCHCP {
    uint32 gallery_id = 15;
    uint32 target_id = 3;
}

message HDOMFAKCLHG {
    uint32 min_finish_time = 10;
    uint32 level_id = 12;
}

message HHHLHLJODIG {
    float EAOKBGDLBJD = 3;
    uint32 entity_id = 4;
    float OFEGAMLNHDE = 12;
    Vector target_pos = 7;
    float speed = 1;
}

message HHIIKNAKENK {
    uint32 GEBOJENAOEN = 12;
}

message HideAndSeekActivityDetailInfo {
    repeated HideAndSeekMapInfo open_map_info_list = 5;
    repeated uint32 COGIIPOBNCN = 15;
    repeated uint32 KLBGALDPIJK = 4;
    repeated uint32 HBGNHHJEENH = 12;
    repeated uint32 EOICLHOPHNL = 11;
}

// CmdId: 8583
message HideAndSeekChooseMapReq {
    repeated uint32 map_list = 5;
}

// CmdId: 8636
message HideAndSeekChooseMapRsp {
    repeated uint32 map_list = 13;
    int32 retcode = 10;
}

message HideAndSeekMapInfo {
    uint32 id = 10;
    repeated uint32 match_lock_reason_list = 13;
}

message HideAndSeekPlayerBattleInfo {
    bool is_ready = 11;
    uint32 avatar_id = 14;
    uint32 costume_id = 12;
    repeated uint32 skill_list = 7;
}

// CmdId: 5535
message HideAndSeekPlayerCapturedNotify {
    uint32 ghost_skill_id = 6;
}

// CmdId: 5340
message HideAndSeekPlayerReadyNotify {
    repeated uint32 uid_list = 6;
}

// CmdId: 5345
message HideAndSeekPlayerSetAvatarNotify {
    uint32 uid = 9;
    uint32 avatar_id = 8;
    uint32 costume_id = 5;
}

// CmdId: 5349
message HideAndSeekSelectAvatarReq {
    uint32 avatar_id = 12;
}

// CmdId: 5318
message HideAndSeekSelectAvatarRsp {
    uint32 avatar_id = 11;
    int32 retcode = 6;
}

// CmdId: 8030
message HideAndSeekSelectSkillReq {
    repeated uint32 skill_list = 7;
}

// CmdId: 8916
message HideAndSeekSelectSkillRsp {
    int32 retcode = 9;
    repeated uint32 skill_list = 6;
}

// CmdId: 5358
message HideAndSeekSetReadyReq {
}

// CmdId: 5315
message HideAndSeekSetReadyRsp {
    int32 retcode = 11;
}

message HideAndSeekSettleInfo {
    repeated ExhibitionDisplayInfo card_list = 4;
    string online_id = 11;
    uint32 uid = 9;
    ProfilePicture profile_picture = 12;
    uint32 head_image = 10;
    string nickname = 3;
}

// CmdId: 5326
message HideAndSeekSettleNotify {
    enum SettleReason {

        SETTLE_REASON_TIME_OUT = 0;
        SETTLE_PLAY_END = 1;
        SETTLE_PLAYER_QUIT = 2;
    }
    repeated HideAndSeekSettleInfo settle_info_list = 5;
    uint32 cost_time = 13;
    uint32 stage_type = 7;
    repeated ExhibitionDisplayInfo score_list = 6;
    uint32 play_index = 9;
    repeated uint32 winner_list = 1;
    SettleReason reason = 10;
    bool is_record_score = 11;
}

message HideAndSeekStageInfo {
    repeated uint32 hider_uid_list = 11;
    uint32 map_id = 9;
    bool is_record_score = 6;
    uint32 hunter_uid = 3;
    HideAndSeekStageType stage_type = 12;
    map<uint32, HideAndSeekPlayerBattleInfo> battle_info_map = 4;
}

// CmdId: 6324
message HIDEKBNDDIP {
    repeated UgcMusicBriefInfo JIDGICBBLBG = 9;
    repeated UgcMusicBriefInfo AKDNFEAGLCO = 5;
}

// CmdId: 253
message HitClientTrivialNotify {
    uint32 owner_entity_id = 8;
    Vector position = 3;
}

message HitCollision {
    float FEKCJAKMKFP = 5;
    Vector GJHIABHJFAL = 4;
    Vector HMFHFOBAMHL = 12;
    int32 hit_box_index = 14;
    HitColliderType hit_collider_type = 10;
    float JNGOHDMOBPJ = 8;
}

message HitTreeInfo {
    Vector tree_pos = 14;
    uint32 tree_type = 15;
}

// CmdId: 3035
message HitTreeNotify {
    Vector tree_pos = 12;
    Vector drop_pos = 1;
    uint32 tree_type = 9;
}

message HLPPCOCFGFL {
}

// CmdId: 184
message HMHLMKOOGFJ {
}

// CmdId: 23343
message HMOBMGADFAJ {
}

// CmdId: 24470
message HNBJBLPCGIK {
}

// CmdId: 21624
message HNHDBOANHDF {
    repeated uint64 CLBBLIFIFEH = 11;
}

message HNHGMNGAODO {
    bool FLKPHNGDIPO = 10;
}

// CmdId: 21621
message HNMGHDHJJMF {
    int32 retcode = 11;
}

// CmdId: 993
message HOJHJGGEABM {
    message ALMDBKOCELN {
        repeated uint32 monster_id_list = 6;
        string HAFEEECHHOJ = 2;
        repeated PlatformType CHOPMGJFOKD = 7;
    }
    repeated ALMDBKOCELN BGFGADONCPI = 15;
}

message HOKJIFJPJLB {
    bool IOILPCOLCGM = 13;
}

// CmdId: 4820
message HomeAllUnlockedBgmIdListNotify {
    repeated uint32 all_unlocked_bgm_id_list = 9;
}

message HomeAnimalData {
    Vector spawn_pos = 10;
    uint32 furniture_id = 5;
    Vector spawn_rot = 13;
}

// CmdId: 4662
message HomeAvatarAllFinishRewardNotify {
    repeated uint32 event_id_list = 7;
}

// CmdId: 4713
message HomeAvatarCostumeChangeNotify {
    uint32 avatar_id = 14;
    uint32 costume_id = 4;
}

// CmdId: 4788
message HomeAvatarRewardEventGetReq {
    uint32 event_id = 4;
    uint32 avatar_id = 1;
}

// CmdId: 4565
message HomeAvatarRewardEventGetRsp {
    int32 retcode = 7;
    uint32 event_id = 1;
    repeated ItemParam item_list = 2;
}

message HomeAvatarRewardEventInfo {
    uint32 event_id = 2;
    uint32 guid = 6;
    uint32 random_position = 1;
    uint32 suite_id = 3;
    uint32 avatar_id = 11;
}

// CmdId: 4626
message HomeAvatarRewardEventNotify {
    HomeAvatarRewardEventInfo reward_event = 1;
    bool is_event_trigger = 6;
    repeated HomeAvatarRewardEventInfo pending_list = 5;
}

// CmdId: 4464
message HomeAvatarSummonAllEventNotify {
    repeated HomeAvatarSummonEventInfo summon_event_list = 1;
}

message HomeAvatarSummonEventInfo {
    uint32 avatar_id = 5;
    uint32 random_position = 3;
    uint32 event_over_time = 8;
    uint32 guid = 12;
    uint32 suit_id = 2;
    uint32 event_id = 1;
}

// CmdId: 4776
message HomeAvatarSummonEventReq {
    uint32 guid = 5;
    uint32 suit_id = 9;
    uint32 avatar_id = 13;
}

// CmdId: 4647
message HomeAvatarSummonEventRsp {
    uint32 event_id = 9;
    int32 retcode = 15;
}

// CmdId: 4638
message HomeAvatarSummonFinishReq {
    uint32 event_id = 4;
}

// CmdId: 4686
message HomeAvatarSummonFinishRsp {
    int32 retcode = 3;
    uint32 event_id = 2;
}

message HomeAvatarTalkFinishInfo {
    repeated uint32 finish_talk_id_list = 3;
    uint32 avatar_id = 2;
}

// CmdId: 4768
message HomeAvatarTalkFinishInfoNotify {
    repeated HomeAvatarTalkFinishInfo avatar_talk_info_list = 9;
}

// CmdId: 4522
message HomeAvatarTalkReq {
    uint32 talk_id = 2;
    uint32 avatar_id = 12;
}

// CmdId: 4628
message HomeAvatarTalkRsp {
    int32 retcode = 15;
    HomeAvatarTalkFinishInfo avatar_talk_info = 8;
}

// CmdId: 4533
message HomeAvtarAllFinishRewardNotify {
    repeated uint32 event_id_list = 14;
}

message HomeBalloonGalleryRecord {
    uint32 hit_count = 9;
    uint32 score = 4;
    uint32 timestamp = 11;
    HomeGroupPlayerInfo player_info = 2;
}

// CmdId: 4606
message HomeBalloonGalleryScoreNotify {
    uint32 add_score = 5;
    uint32 trigger_entity_id = 4;
    uint32 gallery_id = 7;
    uint32 cur_score = 8;
}

// CmdId: 4782
message HomeBalloonGallerySettleNotify {
    uint32 rank = 5;
    bool is_new_record = 14;
    BalloonGallerySettleInfo settle_info = 15;
    uint32 gallery_id = 8;
}

message HomeBalloonRecord {
    repeated HomeBalloonGalleryRecord record_list = 6;
}

message HomeBasicInfo {
    HomeLimitedShopInfo limited_shop_info = 2;
    uint64 exp = 11;
    string owner_nick_name = 9;
    uint32 OCBCKIIJNFD = 5;
    uint32 KJEBPOOEKJG = 3;
    uint32 level = 15;
    bool is_in_edit_mode = 12;
    uint32 DHJNNKOAPEA = 1;
}

// CmdId: 4727
message HomeBasicInfoNotify {
    HomeBasicInfo basic_info = 14;
}

message HomeBlockArrangementInfo {
    uint32 comfort_value = 2;
    bool is_unlocked = 3;
    repeated HomeFurnitureSuiteData furniture_suite_list = 6;
    repeated HomeAnimalData deploy_animal_list = 4;
    repeated WeekendDjinnInfo weekend_djinn_info_list = 1;
    repeated HomeFurnitureGroupData furniture_group_list = 11;
    repeated HomeBlockFieldData field_list = 5;
    repeated HomeBlockDotPattern dot_pattern_list = 15;
    repeated HomeFurnitureCustomSuiteData furniture_custom_suite_list = 12;
    repeated HomeNpcData deploy_npc_list = 9;
    uint32 block_id = 10;
    repeated HomeFurnitureData NOLOJAIDCGA = 13;
    repeated HomeFurnitureData CIKCBEBJEIK = 8;
}

message HomeBlockDotPattern {
    bytes data = 8;
    uint32 width = 3;
    uint32 height = 15;
}

message HomeBlockFieldData {
    Vector pos = 14;
    Vector rot = 5;
    uint32 furniture_id = 4;
    uint32 guid = 9;
    repeated HomeBlockSubFieldData sub_field_list = 6;
}

// CmdId: 4705
message HomeBlockNotify {
    uint32 end_time = 15;
}

message HomeBlockSubFieldData {
    Vector pos = 7;
    Vector rot = 5;
}

// CmdId: 4609
message HomeBlueprintInfoNotify {
    bool PKDOOEMFGDL = 6;
    bool ADPGCNNFAHJ = 14;
}

message HomeBlueprintSearchInfo {
    uint32 module_id = 7;
    string share_code = 10;
    uint32 scene_id = 11;
    uint32 block_id = 9;
}

message HomeBlueprintSlotInfo {
    uint32 module_id = 3;
    bool is_allow_copy = 8;
    uint32 create_time = 15;
    uint32 slot_id = 10;
    uint32 scene_id = 13;
    string share_code = 11;
    bool IEPNMCGOGEN = 7;
    uint32 block_id = 5;
}

// CmdId: 4897
message HomeChangeBgmNotify {
    uint32 bgm_id = 10;
}

// CmdId: 4470
message HomeChangeBgmReq {
    uint32 bgm_id = 3;
}

// CmdId: 4794
message HomeChangeBgmRsp {
    int32 retcode = 15;
}

// CmdId: 4879
message HomeChangeEditModeReq {
    bool is_enter_edit_mode = 10;
}

// CmdId: 4701
message HomeChangeEditModeRsp {
    bool is_enter_edit_mode = 8;
    int32 retcode = 15;
}

// CmdId: 4587
message HomeChangeModuleReq {
    uint32 target_module_id = 4;
}

// CmdId: 4516
message HomeChangeModuleRsp {
    uint32 target_module_id = 8;
    int32 retcode = 14;
}

// CmdId: 4457
message HomeChooseModuleReq {
    uint32 module_id = 4;
}

// CmdId: 4834
message HomeChooseModuleRsp {
    uint32 module_id = 3;
    int32 retcode = 10;
}

// CmdId: 4582
message HomeClearGroupRecordReq {
    uint32 group_id = 7;
}

// CmdId: 4527
message HomeClearGroupRecordRsp {
    uint32 group_id = 6;
    int32 retcode = 11;
}

// CmdId: 4631
message HomeComfortInfoNotify {
    repeated HomeModuleComfortInfo module_info_list = 12;
}

// CmdId: 4806
message HomeCreateBlueprintReq {
    uint32 gen_share_code_count = 9;
    string server_share_code = 4;
    uint32 slot_id = 6;
    HomeSceneArrangementInfo scene_arrangement_info = 13;
}

// CmdId: 4553
message HomeCreateBlueprintRsp {
    int32 retcode = 3;
    HomeBlueprintSlotInfo slot_info = 15;
}

message HomeCustomFurnitureInfo {
    uint32 guid = 11;
    repeated CustomCommonNodeInfo sub_furniture_list = 12;
}

// CmdId: 4510
message HomeCustomFurnitureInfoNotify {
    repeated uint32 delete_custom_furniture_list = 10;
    map<uint32, uint32> used_sub_furniture_count_map = 1;
    repeated HomeCustomFurnitureInfo custom_furniture_info_list = 14;
}

// CmdId: 4737
message HomeDeleteBlueprintReq {
    uint32 slot_id = 12;
}

// CmdId: 4894
message HomeDeleteBlueprintRsp {
    uint32 slot_id = 1;
    int32 retcode = 12;
}

// CmdId: 4550
message HomeEditCustomFurnitureReq {
    HomeCustomFurnitureInfo custom_furniture_info = 8;
}

// CmdId: 4755
message HomeEditCustomFurnitureRsp {
    int32 retcode = 7;
    HomeCustomFurnitureInfo custom_furniture_info = 9;
}

// CmdId: 4892
message HomeEnterEditModeFinishReq {
}

// CmdId: 4769
message HomeEnterEditModeFinishRsp {
    int32 retcode = 3;
}

// CmdId: 4883
message HomeExchangeWoodReq {
    map<uint32, uint32> material_count_map = 7;
    uint32 wood_id = 6;
}

// CmdId: 4644
message HomeExchangeWoodRsp {
    uint32 wood_id = 5;
    int32 retcode = 8;
    uint32 NMNCDDNAKLK = 12;
    uint32 KLNKMDGAOJI = 9;
}

message HomeFishFarmingInfo {
    uint32 fishpond_guid = 15;
    repeated uint32 fish_id_list = 5;
}

// CmdId: 4882
message HomeFishFarmingInfoNotify {
    repeated HomeFishFarmingInfo fish_farming_info_list = 15;
}

message HomeFurnitureCustomSuiteData {
    uint32 guid = 6;
    Vector spawn_pos = 1;
    repeated int32 included_furniture_index_list = 11;
}

message HomeFurnitureData {
    uint32 furniture_id = 10;
    Vector spawn_rot = 15;
    int32 parent_furniture_index = 11;
    Vector spawn_pos = 6;
    uint32 version = 13;
    uint32 guid = 3;
}

message HomeFurnitureGroupData {
    repeated HomeFurnitureData virtual_furniure_list = 15;
    uint32 group_furniture_index = 12;
}

message HomeFurnitureSuiteData {
    Vector spawn_pos = 2;
    uint32 guid = 9;
    uint32 suite_id = 4;
    bool is_allow_summon = 1;
    repeated int32 included_furniture_index_list = 11;
}

// CmdId: 5594
message HomeGalleryInPlayingNotify {
    uint32 gallery_id = 3;
}

// CmdId: 4593
message HomeGetArrangementInfoReq {
    repeated uint32 scene_id_list = 10;
}

// CmdId: 4822
message HomeGetArrangementInfoRsp {
    repeated HomeSceneArrangementInfo scene_arrangement_info_list = 12;
    int32 retcode = 5;
}

// CmdId: 4858
message HomeGetBasicInfoReq {
}

// CmdId: 4790
message HomeGetBlueprintSlotInfoReq {
}

// CmdId: 4781
message HomeGetBlueprintSlotInfoRsp {
    repeated HomeBlueprintSlotInfo slot_info_list = 5;
    repeated uint32 delete_slot_id_list = 11;
    int32 retcode = 8;
}

// CmdId: 4807
message HomeGetFishFarmingInfoReq {
}

// CmdId: 4775
message HomeGetFishFarmingInfoRsp {
    int32 retcode = 1;
    repeated HomeFishFarmingInfo fish_farming_info_list = 7;
}

// CmdId: 4756
message HomeGetGroupRecordReq {
    uint32 group_id = 10;
}

// CmdId: 4594
message HomeGetGroupRecordRsp {
    HomeGroupRecord group_record = 3;
    int32 retcode = 6;
    uint32 record_type = 2;
}

// CmdId: 4873
message HomeGetOnlineStatusReq {
}

// CmdId: 4649
message HomeGetOnlineStatusRsp {
    int32 retcode = 6;
    repeated OnlinePlayerInfo player_info_list = 14;
}

message HomeGroupPlayerInfo {
    uint32 uid = 10;
    uint32 player_level = 14;
    ProfilePicture profile_picture = 6;
    string psn_id = 1;
    string nickname = 9;
    string online_id = 11;
}

message HomeGroupRecord {
    uint32 group_id = 10;
    oneof detail {
        HomeRacingRecord racing_gallery_info = 388;
        HomeBalloonRecord balloon_gallery_info = 1949;
        HomeStakeRecord stake_play_info = 748;
        HomeSeekFurnitureAllRecord seek_furniture_gallery_info = 1996;
    }
}

// CmdId: 4632
message HomeKickPlayerReq {
    uint32 target_uid = 3;
    bool is_kick_all = 2;
}

// CmdId: 4771
message HomeKickPlayerRsp {
    bool is_kick_all = 5;
    int32 retcode = 15;
    uint32 target_uid = 7;
}

message HomeLimitedShop {
    repeated HomeLimitedShopGoods goods_list = 5;
}

// CmdId: 4867
message HomeLimitedShopBuyGoodsReq {
    uint32 buy_count = 1;
    HomeLimitedShopGoods goods = 13;
}

// CmdId: 4823
message HomeLimitedShopBuyGoodsRsp {
    uint32 buy_count = 1;
    repeated HomeLimitedShopGoods goods_list = 12;
    int32 retcode = 5;
    HomeLimitedShopGoods goods = 15;
}

message HomeLimitedShopGoods {
    uint32 BKONLAFGBFC = 7;
    uint32 OLFIOBININC = 4;
    uint32 LAKDFDKCMKC = 11;
    repeated ItemParam cost_item_list = 1;
    ItemParam goods_item = 5;
    uint32 bought_num = 3;
}

// CmdId: 4515
message HomeLimitedShopGoodsListReq {
}

// CmdId: 4597
message HomeLimitedShopGoodsListRsp {
    int32 retcode = 4;
    HomeLimitedShop shop = 14;
}

message HomeLimitedShopInfo {
    fixed32 KILKJHNKDJB = 15;
    uint32 uid = 2;
    Vector PCIJFOPGEDO = 14;
    fixed32 HEEGDABINMD = 8;
    Vector NPFLGEPMDHD = 6;
    fixed32 MBAMOPJCAHC = 13;
}

// CmdId: 4751
message HomeLimitedShopInfoChangeNotify {
    repeated HomeLimitedShopGoods goods_list = 2;
}

// CmdId: 4825
message HomeLimitedShopInfoNotify {
    HomeLimitedShopInfo shop_info = 9;
}

// CmdId: 4511
message HomeLimitedShopInfoReq {
}

// CmdId: 4731
message HomeLimitedShopInfoRsp {
    HomeLimitedShopInfo shop_info = 9;
    int32 retcode = 1;
}

message HomeMarkPointFurnitureData {
    uint32 guid = 1;
    uint32 furniture_id = 2;
    uint32 furniture_type = 3;
    Vector pos = 4;
    oneof extra {
        HomeMarkPointNPCData npc_data = 6;
        HomeMarkPointSuiteData suite_data = 7;
    }
}

// CmdId: 4551
message HomeMarkPointNotify {
    repeated HomeMarkPointSceneData mark_point_data_list = 10;
}

message HomeMarkPointNPCData {
    uint32 avatar_id = 1;
    uint32 costume_id = 2;
}

message HomeMarkPointSceneData {
    Vector PEIAJDDGMIG = 6;
    uint32 module_id = 5;
    Vector IPPBNCILPHJ = 3;
    repeated HomeMarkPointFurnitureData furniture_list = 2;
    uint32 scene_id = 8;
}

message HomeMarkPointSuiteData {
    uint32 suite_id = 1;
}

message HomeModuleComfortInfo {
    uint32 module_id = 11;
    repeated uint32 world_scene_block_comfort_value_list = 7;
    uint32 room_scene_comfort_value = 10;
}

// CmdId: 4896
message HomeModuleSeenReq {
    repeated uint32 seen_module_id_list = 11;
}

// CmdId: 4605
message HomeModuleSeenRsp {
    repeated uint32 seen_module_id_list = 11;
    int32 retcode = 8;
}

// CmdId: 4660
message HomeModuleUnlockNotify {
    uint32 module_id = 2;
}

// CmdId: 4669
message HomeNewUnlockedBgmIdListNotify {
    repeated uint32 new_unlocked_bgm_id_list = 13;
}

message HomeNpcData {
    uint32 avatar_id = 8;
    Vector spawn_pos = 13;
    uint32 costume_id = 2;
    Vector spawn_rot = 12;
}

message HomePictureFrameInfo {
    uint32 picture_id = 11;
    uint32 guid = 3;
}

// CmdId: 4683
message HomePictureFrameInfoNotify {
    repeated HomePictureFrameInfo picture_frame_info_list = 5;
}

message HomePlantFieldData {
    uint32 field_guid = 1;
    uint32 furniture_id = 8;
    uint32 scene_id = 9;
    repeated HomePlantSubFieldData sub_field_list = 11;
    Vector spawn_pos = 13;
}

// CmdId: 4612
message HomePlantFieldNotify {
    HomePlantFieldData field = 1;
}

// CmdId: 4852
message HomePlantInfoNotify {
    repeated HomePlantFieldData field_list = 9;
}

// CmdId: 4600
message HomePlantInfoReq {
}

// CmdId: 4604
message HomePlantInfoRsp {
    int32 retcode = 4;
    repeated HomePlantFieldData field_list = 9;
}

// CmdId: 4624
message HomePlantSeedReq {
    uint32 index = 3;
    repeated uint32 seed_id_list = 10;
    uint32 field_guid = 1;
}

// CmdId: 4479
message HomePlantSeedRsp {
    int32 retcode = 14;
}

message HomePlantSubFieldData {
    HomePlantFieldStatus field_status = 14;
    uint32 LLGHDIMCDAG = 11;
    repeated uint32 entity_id_list = 7;
    fixed32 end_time = 6;
    uint32 MAIEPKDDLJF = 13;
}

// CmdId: 4476
message HomePlantWeedReq {
    uint32 index = 12;
    uint32 field_guid = 15;
}

// CmdId: 4570
message HomePlantWeedRsp {
    int32 retcode = 9;
}

// CmdId: 4490
message HomePreChangeEditModeNotify {
    bool is_enter_edit_mode = 11;
}

// CmdId: 4841
message HomePreviewBlueprintReq {
    uint32 slot_id = 2;
    string share_code = 11;
}

// CmdId: 4590
message HomePreviewBlueprintRsp {
    string share_code = 14;
    HomeSceneArrangementInfo scene_arrangement_info = 6;
    int32 retcode = 12;
}

// CmdId: 4501
message HomePriorCheckNotify {
    fixed32 end_time = 4;
}

message HomeRacingGalleryRecord {
    HomeGroupPlayerInfo player_info = 4;
    uint32 timestamp = 2;
    uint32 use_time = 7;
}

// CmdId: 4840
message HomeRacingGallerySettleNotify {
    RacingGallerySettleInfo settle_info = 5;
    bool is_new_record = 13;
    uint32 gallery_id = 10;
    uint32 rank = 7;
}

message HomeRacingRecord {
    repeated HomeRacingGalleryRecord record_list = 2;
}

message HomeResource {
    fixed32 next_refresh_time = 9;
    uint32 GBBFEOLGIPA = 13;
    uint32 ELNCBCIJMJJ = 10;
}

// CmdId: 4687
message HomeResourceNotify {
    HomeResource fetter_exp = 11;
    HomeResource home_coin = 15;
}

// CmdId: 4577
message HomeResourceTakeFetterExpReq {
}

// CmdId: 4519
message HomeResourceTakeFetterExpRsp {
    HomeResource fetter_exp = 14;
    int32 retcode = 15;
}

// CmdId: 4694
message HomeResourceTakeHomeCoinReq {
}

// CmdId: 4672
message HomeResourceTakeHomeCoinRsp {
    HomeResource home_coin = 11;
    int32 retcode = 2;
}

// CmdId: 4715
message HomeSaveArrangementNoChangeReq {
    uint32 scene_id = 12;
}

// CmdId: 4887
message HomeSaveArrangementNoChangeRsp {
    uint32 scene_id = 10;
    int32 retcode = 1;
}

message HomeSceneArrangementInfo {
    repeated HomeFurnitureData DMALLBPIKFC = 12;
    uint32 tmp_version = 7;
    uint32 comfort_value = 5;
    repeated HomeBlockArrangementInfo block_arrangement_info_list = 15;
    uint32 scene_id = 9;
    Vector FGMCFDMLGEB = 13;
    bool is_set_born_pos = 11;
    HomeFurnitureData main_house = 4;
    uint32 bgm_id = 6;
    Vector PCIJFOPGEDO = 3;
    Vector born_pos = 2;
    repeated HomeFurnitureData NIHPFMMOMDA = 8;
}

// CmdId: 4613
message HomeSceneInitFinishReq {
}

// CmdId: 4536
message HomeSceneInitFinishRsp {
    int32 retcode = 14;
}

// CmdId: 4844
message HomeSceneJumpReq {
    bool is_enter_room_scene = 14;
}

// CmdId: 4518
message HomeSceneJumpRsp {
    int32 retcode = 1;
    bool is_enter_room_scene = 4;
}

message HomeScenePointFishFarmingInfo {
    uint32 scene_id = 9;
    repeated uint32 fish_id_list = 15;
    uint32 local_entity_id = 1;
}

// CmdId: 4851
message HomeScenePointFishFarmingInfoNotify {
    repeated HomeScenePointFishFarmingInfo fish_farming_info_list = 6;
}

// CmdId: 4720
message HomeSearchBlueprintReq {
    string share_code = 14;
}

// CmdId: 4697
message HomeSearchBlueprintRsp {
    int32 retcode = 8;
    HomeBlueprintSearchInfo search_info = 14;
}

message HomeSeekFurnitureAllRecord {
    repeated HomeSeekFurnitureOneRecord record_list = 12;
}

// CmdId: 4791
message HomeSeekFurnitureGalleryScoreNotify {
    HomeSeekFurnitureOneRecord record = 2;
    uint32 gallery_id = 15;
    GalleryStopReason reason = 13;
}

message HomeSeekFurnitureInfo {
	uint32 Unk3300_LGEAPLJCJFH = 10;
	uint32 Unk3300_DAEEBIEAOMN = 11;
	uint32 Unk3300_ENKOGPIEHFD = 8;
	map<uint32, uint32> playerScoreMap = 12;
}

message HomeSeekFurnitureOneRecord {
    repeated HomeSeekFurniturePlayerScore engaged_player_score_list = 8;
    uint32 timestamp = 10;
}

message HomeSeekFurniturePlayerScore {
    HomeGroupPlayerInfo player_info = 6;
    uint32 score = 10;
}

// CmdId: 4547
message HomeSetBlueprintFriendOptionReq {
    bool ADPGCNNFAHJ = 11;
    bool PKDOOEMFGDL = 2;
}

// CmdId: 4849
message HomeSetBlueprintFriendOptionRsp {
    bool PKDOOEMFGDL = 8;
    bool ADPGCNNFAHJ = 11;
    int32 retcode = 4;
}

// CmdId: 4785
message HomeSetBlueprintSlotOptionReq {
    uint32 slot_id = 14;
    bool is_allow_copy = 1;
}

// CmdId: 4469
message HomeSetBlueprintSlotOptionRsp {
    uint32 slot_id = 14;
    int32 retcode = 12;
    bool is_allow_copy = 11;
}

message HomeStakePlayRecord {
    uint32 timestamp = 11;
    repeated HomeGroupPlayerInfo engaged_player_info_list = 3;
}

message HomeStakeRecord {
    repeated HomeStakePlayRecord record_list = 13;
}

// CmdId: 4681
message HomeTransferReq {
    bool EIEPKFHNILM = 5;
    uint32 guid = 1;
    bool OJAFECKPAJE = 10;
}

// CmdId: 4741
message HomeTransferRsp {
    int32 retcode = 10;
}

// CmdId: 4461
message HomeUpdateArrangementInfoReq {
    HomeSceneArrangementInfo scene_arrangement_info = 15;
}

// CmdId: 4888
message HomeUpdateArrangementInfoRsp {
    int32 retcode = 15;
}

// CmdId: 4889
message HomeUpdateFishFarmingInfoReq {
    HomeFishFarmingInfo fish_farming_info = 8;
}

// CmdId: 4764
message HomeUpdateFishFarmingInfoRsp {
    int32 retcode = 6;
}

// CmdId: 4836
message HomeUpdatePictureFrameInfoReq {
    HomePictureFrameInfo picture_frame_info = 12;
}

// CmdId: 4543
message HomeUpdatePictureFrameInfoRsp {
    int32 retcode = 12;
    HomePictureFrameInfo picture_frame_info = 3;
}

// CmdId: 4777
message HomeUpdateScenePointFishFarmingInfoReq {
    HomeScenePointFishFarmingInfo fish_farming_info = 1;
}

// CmdId: 4800
message HomeUpdateScenePointFishFarmingInfoRsp {
    int32 retcode = 10;
}

message HomeVerifyFurnitureData {
    repeated uint32 type = 6;
    uint32 num = 13;
    uint32 id = 5;
}

// CmdId: 389
message HostPlayerNotify {
    uint32 host_peer_id = 3;
    uint32 host_uid = 11;
}

// CmdId: 24533
message HPJKJMBIFPH {
    int32 retcode = 10;
    int32 gallery_id = 7;
}

// CmdId: 4342
message HuntingFailNotify {
    HuntingPair hunting_pair = 15;
}

// CmdId: 4331
message HuntingGiveUpReq {
    HuntingPair hunting_pair = 10;
}

// CmdId: 4321
message HuntingGiveUpRsp {
    int32 retcode = 12;
    HuntingPair hunting_pair = 7;
}

message HuntingOfferData {
    uint32 city_id = 6;
    HuntingOfferState state = 5;
    HuntingPair hunting_pair = 2;
}

// CmdId: 4336
message HuntingOngoingNotify {
    bool is_final = 6;
    uint32 finish_clue_count = 15;
    bool is_started = 11;
    Vector next_position = 5;
    HuntingPair hunting_pair = 2;
    uint32 fail_time = 10;
}

message HuntingPair {
    uint32 monster_config_id = 8;
    uint32 refresh_id = 6;
}

// CmdId: 4322
message HuntingRevealClueNotify {
    Vector clue_position = 8;
    uint32 finish_clue_count = 6;
    HuntingPair hunting_pair = 3;
    uint32 finished_group_id = 2;
}

// CmdId: 4320
message HuntingRevealFinalNotify {
    uint32 finished_group_id = 15;
    Vector final_position = 13;
    HuntingPair hunting_pair = 10;
}

// CmdId: 4345
message HuntingStartNotify {
    uint32 fail_time = 10;
    Vector clue_position = 4;
    HuntingPair hunting_pair = 15;
    bool is_final = 1;
}

// CmdId: 4323
message HuntingSuccessNotify {
    HuntingPair hunting_pair = 10;
}

// CmdId: 21605
message IBEBIDMINKK {
    uint32 dungeon_id = 10;
    bool OBIIGFOOFIK = 14;
}

// CmdId: 7669
message ICCLMODGOGJ {
    uint32 close_time = 14;
    int32 retcode = 12;
}

// CmdId: 21525
message IFMDOEMIPDM {
    uint32 gallery_id = 5;
}

// CmdId: 24495
message IFOKONFKCDP {
    int32 retcode = 1;
    uint32 gallery_id = 8;
}

// CmdId: 1714
message IIBEEMFEJHJ {
    repeated uint64 avatar_team_guid_list = 2;
    uint64 cur_avatar_guid = 1;
}

message IKHBGFEGGFD {
    uint32 OCEKEOCKCFH = 8;
}

// CmdId: 7433
message IKJBDPHEAAD {
    GCGGameBriefData CMBDEKMPLCB = 8;
}

message ILFHJOCEDHJ {
    uint32 BGHILBMNPCK = 4;
}

message InBattleChessInfo {
    ChessMysteryInfo mystery_info = 3;
    uint32 round = 10;
    repeated uint32 ban_card_tag_list = 12;
    uint32 left_monsters = 7;
    map<uint32, ChessPlayerInfo> player_info_map = 13;
    uint32 excaped_monsters = 9;
    repeated ChessCardInfo selected_card_info_list = 2;
    uint32 MMLJDCLICFL = 15;
    uint32 NFNKKDHGPAN = 5;
}

message InBattleChessSettleInfo {
    uint32 OEGOGJACMFM = 10;
    bool is_success = 14;
    uint64 scene_time_ms = 2;
    uint32 JAAMDPPLIKM = 13;
    uint32 PBGBDOFPHDN = 8;
    repeated ExhibitionDisplayInfo score_list = 12;
    uint32 OMOKCHKJJKC = 5;
}

message InBattleFleurFairInfo {
    uint32 KNJNIILLBNC = 6;
    repeated uint32 CHLKFGNAEBL = 14;
    repeated uint32 NNMCCEGMNLK = 8;
    uint32 DDGOJCJLFAM = 4;
    uint32 DJOFKGFMBKK = 3;
}

message InBattleIrodoriChessInfo {
    uint32 KHNEENKECBK = 7;
    uint32 left_monsters = 11;
    repeated uint32 selected_card_id_list = 14;
    IrodoriChessMysteryInfo mystery_info = 5;
    uint32 FABNMNFMJFG = 12;
}

message InBattleIrodoriChessSettleInfo {
    bool is_new_record = 13;
    bool is_activity_end = 14;
    uint64 scene_time_ms = 5;
    bool is_perfect = 2;
    uint32 DPLOCABFHKK = 7;
    uint32 KHNEENKECBK = 8;
}

message InBattleMechanicusBuildingInfo {
    uint32 refund_points = 7;
    uint32 level = 4;
    uint32 cost_points = 8;
    uint32 building_id = 14;
}

// CmdId: 5341
message InBattleMechanicusBuildingPointsNotify {
    map<uint32, uint32> player_building_points_map = 14;
}

message InBattleMechanicusCardInfo {
    uint32 AMLCAOLJCHK = 8;
    uint32 card_id = 1;
    uint32 PIIOIDEHFDD = 3;
    uint32 DEGFCIHNLEG = 6;
    InBattleMechanicusCardChallengeState challenge_state = 14;
    uint32 cost_points = 10;
}

// CmdId: 5365
message InBattleMechanicusCardResultNotify {
    uint32 group_id = 7;
    uint32 wait_seconds = 15;
    map<uint32, uint32> player_confirmed_card_map = 2;
    uint64 wait_begin_time_us = 5;
    uint32 play_index = 4;
    repeated InBattleMechanicusCardInfo card_list = 6;
}

// CmdId: 5312
message InBattleMechanicusConfirmCardNotify {
    uint32 card_id = 5;
    uint32 player_uid = 9;
    uint32 group_id = 14;
    uint32 play_index = 8;
}

// CmdId: 5359
message InBattleMechanicusConfirmCardReq {
    uint32 card_id = 12;
    uint32 play_index = 10;
    uint32 group_id = 14;
}

// CmdId: 5378
message InBattleMechanicusConfirmCardRsp {
    uint32 card_id = 11;
    uint32 group_id = 3;
    int32 retcode = 13;
    uint32 play_index = 5;
}

// CmdId: 5316
message InBattleMechanicusExcapeMonsterNotify {
    uint32 excaped_monster_num = 1;
}

message InBattleMechanicusInfo {
    uint32 excaped_monster_num = 2;
    uint64 ACGHDNCENEK = 13;
    uint64 wait_begin_time_us = 12;
    uint32 IFPJMEJGMEA = 9;
    repeated InBattleMechanicusMonsterInfo monster_list = 8;
    uint32 wait_seconds = 14;
    repeated uint32 IHPACAHCKCH = 1582;
    uint32 round = 4;
    repeated InBattleMechanicusCardInfo pick_card_list = 3;
    uint32 MMLJDCLICFL = 7;
    uint32 left_monster = 11;
    repeated uint32 EFEBPAKIIKH = 576;
    InBattleMechanicusStageType stage = 15;
    uint64 ANCACNKMJPL = 5;
    uint32 JBPNIJKKEFD = 10;
    repeated InBattleMechanicusCardInfo history_card_list = 1;
    repeated InBattleMechanicusPlayerInfo player_list = 6;
}

// CmdId: 5356
message InBattleMechanicusLeftMonsterNotify {
    uint32 left_monster = 3;
}

message InBattleMechanicusMonsterInfo {
    uint32 level = 9;
    uint32 count = 15;
    uint32 monster_id = 5;
}

// CmdId: 5363
message InBattleMechanicusPickCardNotify {
    uint32 play_index = 9;
    uint32 card_id = 4;
    uint32 player_uid = 13;
    uint32 group_id = 14;
}

// CmdId: 5372
message InBattleMechanicusPickCardReq {
    uint32 play_index = 13;
    uint32 group_id = 2;
    uint32 card_id = 3;
}

// CmdId: 5392
message InBattleMechanicusPickCardRsp {
    uint32 card_id = 5;
    uint32 play_index = 2;
    int32 retcode = 8;
    uint32 group_id = 13;
}

message InBattleMechanicusPlayerInfo {
    uint32 uid = 6;
    bool is_card_confirmed = 9;
    repeated InBattleMechanicusBuildingInfo building_list = 10;
    uint32 FABNMNFMJFG = 12;
    uint32 OGEKLCAABAG = 3;
}

message InBattleMechanicusSettleInfo {
    repeated MultistageSettleWatcherInfo watcher_list = 6;
    uint32 group_id = 3;
    uint64 scene_time_ms = 7;
    bool is_success = 15;
    uint32 EDEPJBIHFEB = 5;
    uint32 GIAMAGCEFII = 10;
    uint32 play_index = 13;
    uint32 MPDLHJGFMFK = 14;
}

// CmdId: 5375
message InBattleMechanicusSettleNotify {
    uint32 EDEPJBIHFEB = 3;
    uint32 MPDLHJGFMFK = 4;
    uint32 GIAMAGCEFII = 6;
    uint32 group_id = 10;
    bool is_success = 12;
    uint32 play_index = 2;
    uint64 scene_time_ms = 9;
    repeated MultistageSettleWatcherInfo watcher_list = 14;
}

message InferencePageInfo {
    uint32 page_id = 2;
    repeated InfernceWordInfo unlock_word_list = 15;
}

message InfernceWordInfo {
    bool MDPDECFIPAN = 11;
    uint32 unlock_by_word_id = 1;
    uint32 word_id = 10;
    bool DJFAOPBHEAL = 4;
    bool OPBALHEMOEE = 3;
}

// CmdId: 7274
message INJOAAKAIKI {
}

message InstableSprayAvatarInfo {
    bool is_trial = 7;
    uint64 avatar_id = 5;
}

message InstableSprayDetailInfo {
    repeated InstableSprayStageInfo stage_info_list = 2;
}

message InstableSprayDungeonSettleInfo {
    uint32 stage_id = 9;
    repeated uint32 score_list = 14;
    uint32 level_id = 2;
    uint32 round = 4;
    bool is_new_record = 15;
    uint32 difficulty = 1;
}

// CmdId: 21466
message InstableSprayEnterDungeonReq {
    uint32 difficulty = 3;
    repeated InstableSprayAvatarInfo avatar_info_list = 4;
    uint32 stage_id = 8;
}

// CmdId: 22439
message InstableSprayEnterDungeonRsp {
    int32 retcode = 2;
    uint32 level_id = 6;
}

// CmdId: 5548
message InstableSprayGalleryInfoNotify {
    uint32 score = 11;
}

// CmdId: 24758
message InstableSprayLevelFinishNotify {
    uint32 round = 15;
    uint32 difficulty = 13;
    bool KHKAMOPPEBE = 10;
    repeated uint32 score_list = 4;
    bool BMHBNKGBKEK = 12;
    uint32 stage_id = 14;
    uint32 level_id = 3;
}

// CmdId: 24092
message InstableSprayRestartDungeonReq {
    repeated InstableSprayAvatarInfo avatar_info_list = 12;
}

// CmdId: 23497
message InstableSprayRestartDungeonRsp {
    int32 retcode = 11;
    uint32 level_id = 7;
}

message InstableSprayStageInfo {
    uint32 max_score = 13;
    bool is_finished = 4;
    uint32 stage_id = 15;
    repeated InstableSprayTeamInfo team_info_list = 10;
}

// CmdId: 21869
message InstableSpraySwitchTeamReq {
    repeated InstableSprayAvatarInfo avatar_info_list = 8;
}

// CmdId: 20469
message InstableSpraySwitchTeamRsp {
    uint32 level_id = 8;
    int32 retcode = 4;
}

message InstableSprayTeamInfo {
    repeated InstableSprayAvatarInfo avatar_info_list = 7;
}

// CmdId: 945
message InteractDailyDungeonInfoNotify {
}

// CmdId: 445
message InterpretInferenceWordReq {
    uint32 word_id = 4;
    uint32 page_id = 5;
}

// CmdId: 434
message InterpretInferenceWordRsp {
    uint32 page_id = 8;
    int32 retcode = 10;
    uint32 word_id = 1;
}

// CmdId: 5512
message InterruptGalleryReq {
    uint32 gallery_id = 2;
}

// CmdId: 5565
message InterruptGalleryRsp {
    uint32 gallery_id = 4;
    int32 retcode = 5;
}

message Investigation {
    enum State {

        INVALID = 0;
        IN_PROGRESS = 1;
        COMPLETE = 2;
        REWARD_TAKEN = 3;
    }
    uint32 total_progress = 11;
    State state = 8;
    uint32 id = 3;
    uint32 progress = 15;
}

message InvestigationMonster {
    enum LockState {

        LOCK_NONE = 0;
        LOCK_QUEST = 1;
    }
    bool is_area_locked = 8;
    uint32 city_id = 5;
    uint32 CBBFLPAGFOI = 10;
    uint32 next_refresh_time = 1;
    WeeklyBossResinDiscountInfo weekly_boss_resin_discount_info = 12;
    bool is_alive = 14;
    uint32 level = 13;
    uint32 MGMCKOOBFBJ = 9;
    uint32 DHMMIBILNEE = 11;
    Vector pos = 2;
    uint32 group_id = 1212;
    uint32 id = 7;
    uint32 scene_id = 6;
    uint32 resin = 3;
    uint32 monster_id = 518;
    LockState lock_state = 4;
    uint32 HKBNEBOAMDI = 15;
}

// CmdId: 1912
message InvestigationMonsterUpdateNotify {
    InvestigationMonster investigation_monster = 7;
}

// CmdId: 1918
message InvestigationQuestDailyNotify {
}

// CmdId: 1904
message InvestigationReadQuestDailyNotify {
}

message InvestigationTarget {
    enum State {

        INVALID = 0;
        IN_PROGRESS = 1;
        COMPLETE = 2;
        REWARD_TAKEN = 3;
    }
    uint32 investigation_id = 3;
    uint32 total_progress = 5;
    uint32 progress = 15;
    uint32 quest_id = 4;
    State state = 9;
}

message IOBIPOLNCGP {
    float NDOPKKCFNNL = 5;
}

message IOEGJEEFKLA {
}

message IrodoriActivityDetailInfo {
    IrodoriFlowerData flower_data = 11;
    IrodoriPoetryData poetry_data = 14;
    IrodoriChessData chess_data = 4;
    repeated IrodoriMasterLevelInfo master_level_list = 3;
}

message IrodoriChessData {
    repeated IrodoriChessLevelData level_data_list = 10;
    bool is_open = 14;
}

message IrodoriChessEntranceDetailInfo {
    repeated IrodoriChessEntranceInfo info_list = 3;
}

message IrodoriChessEntranceInfo {
    repeated IrodoriChessMonsterInfo monster_info_list = 8;
    uint32 entrance_point_id = 11;
}

// CmdId: 8466
message IrodoriChessEquipCardReq {
    bool is_hard_map = 7;
    uint32 card_id = 11;
    uint32 level_id = 10;
}

// CmdId: 8650
message IrodoriChessEquipCardRsp {
    int32 retcode = 9;
    bool is_hard_map = 13;
    uint32 card_id = 6;
    uint32 level_id = 3;
}

// CmdId: 5360
message IrodoriChessLeftMonsterNotify {
    uint32 left_monsters = 4;
}

message IrodoriChessLevelData {
    IrodoriChessMapData OEMKKEEKONG = 9;
    uint32 level_id = 8;
    IrodoriChessMapData JCCNLMMCENC = 15;
    uint32 open_time = 6;
}

message IrodoriChessMapData {
    uint32 best_score = 2;
    repeated uint32 equiped_card_list = 11;
    uint32 map_id = 1;
    IrodoriChessEntranceDetailInfo entrance_detail_info = 14;
}

message IrodoriChessMonsterInfo {
    uint32 monster_id = 7;
    uint32 level = 2;
    uint32 grant_points = 8;
    repeated uint32 affix_list = 3;
}

message IrodoriChessMysteryInfo {
    IrodoriChessEntranceDetailInfo entrance_detail_info = 14;
    repeated uint32 exit_point_id_list = 10;
    repeated uint32 entrance_point_id_list = 13;
}

message IrodoriChessPlayerInfo {
    uint32 KHNEENKECBK = 2;
    uint32 FABNMNFMJFG = 9;
    uint32 uid = 3;
}

// CmdId: 5338
message IrodoriChessPlayerInfoNotify {
    IrodoriChessPlayerInfo player_info = 13;
}

// CmdId: 8995
message IrodoriChessUnequipCardReq {
    uint32 card_id = 15;
    bool is_hard_map = 9;
    uint32 level_id = 11;
}

// CmdId: 8424
message IrodoriChessUnequipCardRsp {
    int32 retcode = 13;
    uint32 card_id = 15;
    uint32 level_id = 9;
    bool is_hard_map = 1;
}

// CmdId: 8944
message IrodoriEditFlowerCombinationReq {
    CustomGadgetTreeInfo combination_info = 3;
    uint32 entity_id = 7;
}

// CmdId: 8387
message IrodoriEditFlowerCombinationRsp {
    bool NCECAIKEDLC = 15;
    int32 retcode = 6;
    bool GJMFJJEFFHH = 4;
}

// CmdId: 8769
message IrodoriFillPoetryReq {
    uint32 BNNBEAHNPNH = 7;
    uint32 JKJHPHOGAHE = 11;
}

// CmdId: 8910
message IrodoriFillPoetryRsp {
    IrodoriPoetryThemeData theme_data = 11;
    int32 retcode = 3;
}

message IrodoriFlowerData {
    repeated uint32 finished_theme_list = 12;
    repeated ItemParam used_flower_list = 6;
}

// CmdId: 8577
message IrodoriMasterGalleryCgEndNotify {
    uint32 gallery_id = 15;
    uint32 level_id = 6;
}

message IrodoriMasterGallerySettleInfo {
    uint32 difficult = 14;
    GalleryStopReason reason = 3;
    uint32 finish_time = 1;
    uint32 level_id = 5;
    bool is_finish = 9;
}

// CmdId: 8390
message IrodoriMasterGallerySettleNotify {
    IrodoriMasterGallerySettleInfo settle_info = 13;
    uint32 gallery_id = 8;
}

message IrodoriMasterLevelDetailInfo {
    uint32 min_finish_time = 2;
    bool is_have_try = 11;
    bool is_finish = 10;
    uint32 diffculty = 14;
}

message IrodoriMasterLevelInfo {
    repeated IrodoriMasterLevelDetailInfo detail_info = 7;
    uint32 level_id = 4;
}

// CmdId: 8260
message IrodoriMasterStartGalleryReq {
    uint32 difficulty = 13;
    uint32 level_id = 14;
}

// CmdId: 8754
message IrodoriMasterStartGalleryRsp {
    int32 retcode = 6;
}

message IrodoriPoetryData {
    uint32 cur_theme_id = 2;
    repeated IrodoriPoetryThemeData theme_data_list = 15;
}

message IrodoriPoetryThemeData {
    uint32 BNNBEAHNPNH = 5;
    repeated uint32 EFBGNKCHODA = 9;
    uint32 OPPGKAGCJBJ = 7;
    uint32 CGNFCGJIOGM = 11;
    uint32 progress = 6;
    uint32 NGBIFFGKFHN = 4;
    repeated uint32 DJEKCGJNNDE = 3;
}

// CmdId: 8825
message IrodoriScanEntityReq {
    uint32 entity_id = 12;
}

// CmdId: 8540
message IrodoriScanEntityRsp {
    bool is_get_inspiration = 3;
    int32 retcode = 5;
    IrodoriPoetryThemeData theme_data = 12;
}

message IslandPartyDetailInfo {
    repeated IslandPartyStageData stage_data_list = 15;
}

message IslandPartyGallerySettleInfo {
    repeated ExhibitionDisplayInfo card_list = 14;
    OnlinePlayerInfo player_info = 10;
}

// CmdId: 5586
message IslandPartyRaftInfoNotify {
    uint32 DPKCLCKNEOF = 13;
    uint32 point_id = 11;
    uint32 CDJPPMFEPHL = 6;
    uint32 coin = 14;
}

// CmdId: 5551
message IslandPartySailInfoNotify {
    uint32 coin = 5;
    uint32 progress = 11;
    IslandPartySailStage stage = 1;
    uint32 kill_monster_count = 4;
}

// CmdId: 21749
message IslandPartySettleNotify {
    GalleryStopReason reason = 4;
    uint32 time_remain = 15;
    repeated ExhibitionDisplayInfo score_list = 3;
    repeated IslandPartyGallerySettleInfo settle_info_list = 2;
    bool is_new_record = 1;
}

message IslandPartyStageData {
    uint32 stage_id = 3;
    bool is_open = 12;
    uint32 best_score = 11;
}

message Item {
    uint32 item_id = 1;
    uint64 guid = 2;
    oneof detail {
        Material material = 5;
        Equip equip = 6;
        Furniture furniture = 7;
    }
}

// CmdId: 616
message ItemAddHintNotify {
    repeated ItemHint item_list = 12;
    Vector position = 9;
    repeated ItemHint overflow_transformed_item_list = 15;
    uint32 quest_id = 6;
    bool OCIEEDOLGDB = 3;
    bool ENCLFHLBLLA = 8;
    bool JPDJLIPKABJ = 13;
    uint32 reason = 11;
}

// CmdId: 635
message ItemCdGroupTimeNotify {
    map<uint32, uint64> item_cd_map = 7;
}

// CmdId: 101
message ItemGivingReq {
    enum ItemGivingType {

        QUEST = 0;
        GADGET = 1;
    }
    uint32 giving_id = 10;
    ItemGivingType item_giving_type = 15;
    repeated ItemParam item_param_list = 2;
    map<uint64, uint32> item_guid_count_map = 3;
}

// CmdId: 169
message ItemGivingRsp {
    uint32 giving_group_id = 9;
    int32 retcode = 6;
    uint32 giving_id = 2;
}

message ItemHint {
    uint32 item_id = 4;
    uint64 guid = 15;
    bool is_new = 11;
    uint32 count = 7;
}

message ItemParam {
    uint32 item_id = 1;
    uint32 count = 2;
}

// CmdId: 1617
message ItemRenameAvatarReq {
    string avatar_name = 10;
    uint32 rename_id = 5;
}

// CmdId: 1656
message ItemRenameAvatarRsp {
    int32 retcode = 13;
    uint32 cd_time = 3;
    uint32 rename_id = 6;
}

message JAAACKLMLHI {
    uint32 DHNNFFCLPGH = 12;
    bool is_finish = 2;
    bool is_open = 10;
    uint32 level_id = 1;
}

message JCNNHJLLOFC {
    Vector velocity = 4;
    Vector pos = 11;
    Vector face_dir = 14;
    uint32 entity_id = 7;
}

// CmdId: 20071
message JDPJGAHPGFH {
    uint32 level_id = 2;
    repeated EEKGPJAAGNH EOFCOHEIPNO = 8;
    bool ADGAFGPMCJO = 7;
}

// CmdId: 7804
message JEHMOJKEODL {
    enum HPKGGDFBHPI {

        HPKGGDFBHPI_GCG_HINT_NONE = 0;
        HPKGGDFBHPI_GCG_HINT_GAME_NOT_FOUND = 1;
    }
    HPKGGDFBHPI KIOADFKKCCK = 12;
}

message JEIFKDDEDEE {
    bool HHHCHKPECLL = 5;
    repeated DCJBJCDFAAE JEAPENKJEGB = 6;
    repeated uint32 BNKMHJMPCPJ = 2;
    repeated KMNPJIFBGJD ADIJKDFNCFA = 3;
}

// CmdId: 20509
message JFDELDDOOIJ {
    int32 retcode = 14;
}

message JigsawPictureData {
    uint32 NJPEANGOAMC = 7;
    bool is_finished = 10;
    bool is_open = 12;
    uint32 ACAPFNOLMKE = 15;
}

message JILBANAJEEF {
    repeated CFFFGFFKINK level_info_list = 8;
}

message JKFJFNMCNDN {
    bool is_open = 12;
    uint32 stage_id = 4;
}

// CmdId: 22940
message JLFLCCDNNIL {
    int32 retcode = 10;
}

// CmdId: 24764
message JMBNLGPPMDP {
    bool is_save_score = 1;
    uint64 ugc_guid = 9;
    uint32 music_basic_id = 14;
}

message JNMLLBGCBOB {
    repeated CKMJBOGJFMB level_info_list = 4;
}

// CmdId: 4611
message JoinHomeWorldFailNotify {
    uint32 target_uid = 15;
    int32 retcode = 14;
}

// CmdId: 262
message JoinPlayerFailNotify {
    int32 retcode = 8;
}

// CmdId: 247
message JoinPlayerSceneReq {
    uint32 target_uid = 4;
}

// CmdId: 236
message JoinPlayerSceneRsp {
    int32 retcode = 14;
}

// CmdId: 2301
message JPKNOEMJICG {
    enum HMNKHDMCEKN {

        HMNKHDMCEKN_STATUS_FAIL = 0;
        HMNKHDMCEKN_STATUS_SUCC = 1;
        HMNKHDMCEKN_STATUS_PARTIAL = 2;
    }
    repeated DGJFFNNBPND HPLEHEAMEEC = 2;
    repeated DGJFFNNBPND KLGDHOIPMAF = 3;
    repeated Vector corners = 10;
    repeated Vector AOIKBPNEEPO = 6;
    HMNKHDMCEKN query_status = 4;
    int32 query_id = 12;
    int32 retcode = 5;
}

// CmdId: 90
message KeepAliveNotify {
}

message KHHEAFGCOMJ {
    uint32 start_time = 12;
}

// CmdId: 23597
message KHJBEOHBNBG {
}

// CmdId: 22846
message KKEAGOHBCMA {
}

message KLMOCINFPME {
    float MGDCCBBHFOL = 7;
    float FOMFKNOIEHD = 8;
    uint32 element_type = 15;
    uint32 FDKBBDNOIMN = 11;
}

// CmdId: 2324
message KLNMFNNADPG {
    Vector destination_pos = 14;
    uint32 scene_id = 13;
    Vector3Int FOJHBGHIMDG = 15;
    QueryFilter filter = 10;
    int32 uid = 9;
    Vector3Int LCOAPOJGMKL = 8;
    int32 query_id = 12;
    Vector source_pos = 4;
}

message KMFKLGOBMJJ {
    Vector FGMHEEBAAIO = 8;
    Vector DCMLDOPJOIO = 9;
    uint32 entity_id = 4;
}

message KMNPJIFBGJD {
    uint32 target_score = 14;
    GENJGPDIPNI type = 13;
    uint32 HKPLPJIBMOC = 8;
    repeated uint32 KAOGGMEJPBD = 6;
    string name = 3;
    oneof detail {
        PPBLCBFKEHE normal = 1759;
        KHHEAFGCOMJ countdown = 360;
        DIJILDLCPLG timer = 492;
    }
}

message KNAFPAKIBMO {
    float OHFFCHIDPJF = 3;
    uint32 target_id = 1;
    uint32 BAOMNMEKHOE = 8;
}

message KOFLKOIFKLK {
    uint32 BLKFMKAACGP = 6;
    uint64 DLIPKCGAALG = 9;
}

message LanternProjectionInfo {
    repeated ClientInputType OFBHBGHNMKN = 9;
    repeated ClientInputType KDDNLOBMNFD = 12;
    repeated uint32 open_stage_list = 14;
    repeated LanternProjectionLevelInfo level_list = 1;
}

message LanternProjectionLevelInfo {
    uint32 id = 5;
    bool is_finished = 1;
    bool is_show_tips = 15;
    uint32 min_finish_time = 8;
    bool is_can_start = 6;
}

message LanternRiteActivityDetailInfo {
    bool AHIBJCCBCBI = 2;
    bool is_content_closed = 9;
    LanternRiteFireworksInfo fireworks_info = 13;
    bool ODDJOICLCNC = 6;
    repeated SalvageStageInfo stage_info_list = 5;
    LanternProjectionInfo projection_info = 8;
}

message LanternRiteActivityInfo {
	_lantern_rite_fireworks_info fireworks_info = 6;
	_lantern_projection_info projection_info = 11;
	bool left_monsters = 9;
	bool Unk3300_PDFJNCDGKGH = 3;
	repeated SalvageStageInfo stageInfoList = 1;
	bool Unk3300_DKBJLCIMBAL = 7;
}

// CmdId: 8462
message LanternRiteDoFireworksReformReq {
    uint32 stage_id = 5;
    uint32 factor_id = 1;
    uint32 challenge_id = 10;
    uint32 skill_id = 12;
}

// CmdId: 8191
message LanternRiteDoFireworksReformRsp {
    uint32 EFLPMIIEPNG = 13;
    uint32 challenge_id = 9;
    bool is_lucky = 6;
    int32 retcode = 7;
    uint32 MAKIBNPJGEJ = 2;
    repeated LanternRiteFireworksReformFactorInfo factor_info_list = 12;
    uint32 HEAJHLGGKLM = 10;
    uint32 ALIIBHKIMBM = 8;
    uint32 stage_id = 14;
}

// CmdId: 8245
message LanternRiteEndFireworksReformReq {
    uint32 challenge_id = 13;
    uint32 stage_id = 3;
}

// CmdId: 8160
message LanternRiteEndFireworksReformRsp {
    uint32 challenge_id = 2;
    int32 retcode = 9;
    bool is_full_score = 5;
    bool BGODKPDDOOG = 14;
    bool IMLAMOOOKAL = 15;
    uint32 final_score = 4;
    bool AGFGCOGCEOC = 8;
    uint32 stage_id = 6;
    bool is_new_record = 3;
}

message LanternRiteFireworksChallengeInfo {
    uint32 challenge_id = 5;
    uint32 best_score = 14;
    bool is_full_score = 13;
}

message LanternRiteFireworksInfo {
    repeated LanternRiteFireworksStageInfo stage_info_list = 11;
}

message LanternRiteFireworksReformFactorInfo {
    uint32 factor_id = 11;
    uint32 factor_value = 4;
}

message LanternRiteFireworksReformSkillInfo {
    uint32 FOKOINJOONI = 15;
    bool is_unlock = 11;
    uint32 skill_id = 9;
    uint32 DCFIKGHLPJP = 8;
}

message LanternRiteFireworksStageInfo {
    repeated LanternRiteFireworksChallengeInfo challenge_info_list = 3;
    uint32 stage_id = 5;
    bool is_open = 7;
}

// CmdId: 8079
message LanternRiteStartFireworksReformReq {
    uint32 challenge_id = 7;
    uint32 stage_id = 2;
}

// CmdId: 8555
message LanternRiteStartFireworksReformRsp {
    repeated LanternRiteFireworksReformFactorInfo factor_info_list = 7;
    int32 retcode = 4;
    repeated LanternRiteFireworksReformSkillInfo skill_info_list = 5;
    uint32 ALIIBHKIMBM = 3;
    uint32 EFLPMIIEPNG = 11;
    uint32 HEAJHLGGKLM = 6;
    uint32 stage_id = 10;
    uint32 challenge_id = 12;
    uint32 MAKIBNPJGEJ = 15;
}

// CmdId: 8354
message LanternRiteTakeSkinRewardReq {
}

// CmdId: 8928
message LanternRiteTakeSkinRewardRsp {
    int32 retcode = 13;
}

// CmdId: 24992
message LanV3BoatGameStartSingleReq {
}

// CmdId: 24118
message LanV3BoatGameStartSingleRsp {
    int32 retcode = 12;
}

// CmdId: 20841
message LanV3BoatGameTransferFinishNotify {
    bool is_reenter = 14;
}

// CmdId: 24158
message LanV3BoatInterruptSettleStageReq {
}

// CmdId: 21299
message LanV3BoatInterruptSettleStageRsp {
    int32 retcode = 13;
}

message LanV3BoatMultiPlayerData {
    uint32 BGBKKDGAPIM = 11;
    uint32 uid = 4;
}

// CmdId: 6497
message LanV3BoatPlayerPrepareNotify {
    uint32 play_index = 8;
}

message LanV3BoatSettleInfo {
    string nickname = 11;
    ProfilePicture profile_picture = 2;
    repeated ExhibitionDisplayInfo card_list = 15;
    uint32 head_image = 4;
    string online_id = 8;
    uint32 uid = 6;
}

// CmdId: 6598
message LanV3BoatSettleNotify {
    uint32 duration = 13;
    uint32 begin_time = 5;
    repeated LanV3BoatSettleInfo settle_info_list = 15;
    repeated ExhibitionDisplayInfo score_list = 11;
    bool is_single = 14;
    uint32 stage_type = 12;
    uint32 play_index = 1;
    repeated uint32 winner_uid_list = 3;
    bool is_gallery_succ = 7;
}

message LanV3BoatStageInfo {
    uint32 map_id = 14;
    uint32 match_id = 3;
    repeated uint32 player_uid_list = 9;
    bool is_single = 13;
}

// CmdId: 23047
message LanV3RaceRestartReq {
    uint32 gallery_id = 7;
}

// CmdId: 20283
message LanV3RaceRestartRsp {
    int32 retcode = 5;
    uint32 gallery_id = 9;
}

// CmdId: 20675
message LanV3RaceSettleNotify {
    uint32 level_id = 13;
    uint32 gallery_id = 2;
    uint32 MFJBNDHNNMO = 15;
    uint32 JCFJLLKLHFO = 3;
    uint32 score = 5;
    bool is_new_record = 9;
    uint32 IFECDFBGBAA = 7;
    bool is_success = 14;
}

// CmdId: 23886
message LanV3ShadowFinishLevelReq {
    uint32 level_id = 15;
    uint32 finish_time = 12;
}

// CmdId: 24969
message LanV3ShadowFinishLevelRsp {
    int32 retcode = 6;
}

// CmdId: 48
message LastPacketPrintNotify {
}

// CmdId: 6022
message LaunchFireworksReq {
    FireworksLaunchSchemeData scheme_data = 14;
}

// CmdId: 6086
message LaunchFireworksRsp {
    int32 retcode = 8;
}

// CmdId: 22710
message LBFHEDFPGMI {
    int32 reason = 15;
    bool is_success = 7;
}

message LCMFDAHJIBK {
    uint32 level_id = 2;
    LLBFJGELKIB CKNPDDAHIPK = 10;
}

// CmdId: 4833
message LDAKAIIPNGI {
    uint32 src_app_id = 7;
    OnlinePlayerInfo src_player_info = 3;
}

// CmdId: 829
message LDMCFCEHKJH {
    bool KOKIFJMPGLI = 3;
    map<uint32, uint32> gadget_chain_level_map = 1;
}

// CmdId: 296
message LeaveSceneReq {
}

// CmdId: 289
message LeaveSceneRsp {
    int32 retcode = 12;
}

// CmdId: 3487
message LeaveWorldNotify {
}

// CmdId: 1592
message LEKKBIGCOGI {
    repeated uint32 KFBNLDJDFJE = 2;
}

// CmdId: 3263
message LevelTagDataNotify {
    repeated uint32 level_tag_id_list = 6;
}

// CmdId: 237
message LevelupCityReq {
    uint32 item_num = 13;
    uint32 area_id = 3;
    uint32 scene_id = 5;
}

// CmdId: 224
message LevelupCityRsp {
    int32 retcode = 14;
    CityInfo city_info = 2;
    uint32 area_id = 6;
    uint32 scene_id = 8;
}

// CmdId: 7310
message LGDLKBJBEOE {
    repeated uint32 GNGDMHNANEH = 15;
    int32 retcode = 7;
    repeated uint32 BKFNFJGFCAD = 9;
    repeated OJGNBGJFLDC JBDAEBOBLBI = 14;
}

// CmdId: 20971
message LGLHGBPEOGD {
    uint32 level_id = 15;
    uint32 NIKGAFDFHCD = 12;
}

// CmdId: 22570
message LIDABDAPMJK {
}

// CmdId: 20158
message LIDDFAKFGLG {
    int32 retcode = 14;
    uint32 score = 3;
    bool is_new_record = 8;
    bool is_success = 6;
}

// CmdId: 1296
message LifeStateChangeNotify {
    repeated ServerBuff server_buff_list = 13;
    uint32 life_state = 3;
    string attack_tag = 10;
    PlayerDieType die_type = 15;
    uint32 entity_id = 5;
    uint32 source_entity_id = 8;
    uint32 move_reliable_seq = 2;
}

message LIGDPKNNMMM {
    repeated string KAGOLBFBHBI = 1;
}

// CmdId: 6232
message LikeCustomDungeonReq {
    uint64 dungeon_guid = 8;
    bool is_cancel_like = 7;
}

// CmdId: 6230
message LikeCustomDungeonRsp {
    int32 retcode = 13;
}

// CmdId: 870
message LiveEndNotify {
    uint32 live_id = 4;
}

// CmdId: 898
message LiveStartNotify {
    uint32 live_id = 14;
}

// CmdId: 22028
message LJPLMCEJECG {
    repeated InstableSprayAvatarInfo avatar_info_list = 10;
}

message LMANBIFIBEJ {
    uint32 target_entity_id = 14;
}

message LMBNPEALNMF {
    uint32 IAPDLOALCDH = 5;
    repeated uint32 BOOENGOOJGN = 9;
    uint32 KLPIHHBCMBP = 13;
    uint32 BNFLIGNODHB = 8;
    uint32 DCFMMEHPHOG = 1;
    uint32 phase = 11;
}

// CmdId: 2165
message LoadActivityTerrainNotify {
    uint32 activity_id = 13;
}

message LOCFPLGHHCM {
    float NDOPKKCFNNL = 13;
}

message LockedPersonallineData {
    enum LockReason {

        LEVEL = 0;
        QUEST = 1;
    }
    uint32 personal_line_id = 7;
    LockReason lock_reason = 4;
    oneof param {
        uint32 chapter_id = 8;
        uint32 level = 12;
    }
}

message LPGAFDIGHDF {
    bool HPGBNJHEJEE = 2;
    uint32 OECJPOKNGNA = 7;
}

// CmdId: 2924
message LPKHFHJDGOG {
    uint32 offering_id = 12;
}

// CmdId: 3207
message LuaEnvironmentEffectNotify {
    uint32 type = 4;
    repeated float float_param_list = 7;
    repeated int32 int_param_list = 3;
    string effect_alias = 5;
}

// CmdId: 337
message LuaSetOptionNotify {
    enum LuaOptionType {

        LUA_OPTION_NONE = 0;
        LUA_OPTION_PLAYER_INPUT = 1;
    }
    LuaOptionType option_type = 14;
    string lua_set_param = 10;
}

message LuminanceStoneChallengeActivityDetailInfo {
    uint32 current_stage_id = 1;
    uint32 best_score = 6;
    bool is_content_closed = 13;
    bool is_final_gallery_complete = 9;
}

message LuminanceStoneChallengeGallerySettleInfo {
    uint32 gallery_id = 15;
    GalleryStopReason reason = 13;
    uint32 kill_special_monster_count = 6;
    uint32 clean_mud_count = 4;
    uint32 kill_monster_count = 9;
    uint32 final_score = 3;
}

message LuminanceStoneChallengeSettleInfo {
    LuminanceStoneChallengeGallerySettleInfo settle_info = 2;
    bool is_new_record = 8;
}

// CmdId: 8785
message LuminanceStoneChallengeSettleNotify {
    uint32 gallery_id = 1;
    LuminanceStoneChallengeSettleInfo settle_info = 2;
}

// CmdId: 8209
message LunaRiteAreaFinishNotify {
    uint32 area_id = 9;
}

message LunaRiteAreaInfo {
    uint32 area_id = 14;
    repeated uint32 sacrifice_list = 4;
    LunaRiteHintStatusType hint_status = 1;
    repeated uint32 sacrifice_reward_list = 13;
    uint32 challenge_index = 15;
}

message LunaRiteDetailInfo {
    repeated LunaRiteAreaInfo area_info_list = 2;
    repeated LunaRiteHintPoint hint_point = 15;
}

// CmdId: 8794
message LunaRiteGroupBundleRegisterNotify {
    uint32 group_link_bundle_id = 1;
}

message LunaRiteHintPoint {
    LunaRiteHintPointType type = 5;
    uint32 index = 1;
    uint32 area_id = 14;
    Vector pos = 10;
}

// CmdId: 8663
message LunaRiteHintPointRemoveNotify {
    repeated uint32 hint_point_index = 9;
}

// CmdId: 8351
message LunaRiteHintPointReq {
    uint32 area_id = 10;
}

// CmdId: 8822
message LunaRiteHintPointRsp {
    repeated LunaRiteHintPoint hint_point = 11;
    uint32 area_id = 7;
    LunaRiteHintStatusType hint_status = 12;
    int32 retcode = 13;
}

// CmdId: 8447
message LunaRiteSacrificeReq {
    uint32 index = 14;
    uint32 area_id = 13;
}

// CmdId: 8980
message LunaRiteSacrificeRsp {
    int32 retcode = 2;
    uint32 area_id = 5;
    repeated uint32 sacrifice_list = 14;
    uint32 index = 10;
}

// CmdId: 8853
message LunaRiteTakeSacrificeRewardReq {
    uint32 area_id = 4;
    uint32 index = 3;
}

// CmdId: 8646
message LunaRiteTakeSacrificeRewardRsp {
    uint32 index = 2;
    uint32 area_id = 12;
    uint32 sacrifice_reward_index = 9;
    int32 retcode = 8;
    repeated uint32 sacrifice_reward_list = 14;
}

message LunchBoxData {
    map<uint32, uint32> slot_material_map = 10;
}


// CmdId: 1496
message MailChangeNotify {
    repeated uint32 del_mail_id_list = 5;
    repeated MailData mail_list = 15;
}

message MailData {
    uint32 mail_id = 1;
    MailTextContent mail_text_content = 4;
    repeated MailItem item_list = 7;
    uint32 send_time = 8;
    uint32 expire_time = 9;
    uint32 importance = 10;
    bool is_read = 11;
    bool is_attachment_got = 12;
    uint32 config_id = 13;
    repeated string argument_list = 14;
    MailCollectState collect_state = 15;
}

message MailItem {
    EquipParam equip_param = 1;
    MaterialDeleteInfo delete_info = 2;
}

message MailTextContent {
    string title = 1;
    string content = 2;
    string sender = 3;
}

message MainCoop {
    enum Status {

        INVALID = 0;
        RUNNING = 1;
        FINISHED = 2;
    }
    map<uint32, int32> JFNGFEFMHMM = 5;
    uint32 id = 12;
    uint32 self_confidence = 10;
    repeated uint32 save_point_id_list = 8;
    map<uint32, uint32> seen_ending_map = 11;
    map<uint32, int32> KINJAIJMLPM = 2;
    Status status = 4;
}

// CmdId: 1953
message MainCoopFailNotify {
    uint32 chapter_id = 2;
    string textmap_id = 8;
}

// CmdId: 1966
message MainCoopUpdateNotify {
    repeated MainCoop main_coop_list = 5;
}

// CmdId: 3018
message MapAreaChangeNotify {
    repeated MapAreaInfo map_area_info_list = 12;
}

message MapAreaInfo {
    uint32 map_area_id = 1;
    bool is_open = 2;
}

message MapMarkPoint {
    uint32 scene_id = 1;
    string name = 2;
    Vector pos = 3;
    MapMarkPointType point_type = 4;
    uint32 monster_id = 5;
    MapMarkFromType from_type = 6;
    uint32 quest_id = 7;
}

message MapMarkTipsInfo {
    MapMarkTipsType tips_type = 1;
    repeated uint32 point_id_list = 2;
}

// CmdId: 240
message MarkEntityInMinMapNotify {
    Vector position = 3;
    uint32 entity_id = 4;
    uint32 monster_id = 8;
}

// CmdId: 3483
message MarkMapReq {
    enum Operation {

        ADD = 0;
        MOD = 1;
        DEL = 2;
        GET = 3;
    }
    MapMarkPoint old = 15;
    MapMarkPoint mark = 11;
    Operation op = 7;
}

// CmdId: 3050
message MarkMapRsp {
    int32 retcode = 2;
    repeated MapMarkPoint mark_list = 3;
}

// CmdId: 1278
message MarkNewNotify {
    uint32 mark_new_type = 2;
    repeated uint32 id_list = 7;
}

// CmdId: 1924
message MarkTargetInvestigationMonsterNotify {
    uint32 group_id = 13;
    uint32 scene_id = 15;
    uint32 investigation_monster_id = 4;
    uint32 monster_id = 8;
}

message MassiveBoxInfo {
    int32 id = 1;
    uint32 config_id = 2;
    Vector center = 3;
    Vector extents = 4;
    Vector up = 5;
    Vector forward = 6;
    Vector right = 7;
}

// CmdId: 400
message MassiveEntityElementOpBatchNotify {
    int32 entity_type = 5;
    float attack_element_durability = 6;
    int32 FJPCMHBFKLB = 9;
    uint32 ODJPGAKLKAK = 7;
    int32 BAPFIFOEPHB = 8;
    uint32 IFJIEDHNCFA = 10;
    uint32 attacker_id = 13;
    oneof check_shape {
        ShapeSphere shape_sphere = 12;
        ShapeBox shape_box = 14;
    }
}

message MassiveEntityState {
    uint32 entity_type = 1;
    int64 obj_id = 2;
    uint32 element_state = 3;
}

// CmdId: 315
message MassiveEntityStateChangedNotify {
    repeated MassiveEntityState massive_entity_state_list = 12;
}

message MassiveGrassInfo {
    uint32 id = 1;
    Vector center = 2;
    Vector size = 3;
}

message MassivePropParam {
    int32 type = 1;
    repeated uint32 reaction_info_list = 2;
    repeated float param_list = 3;
    uint32 sync_flag = 4;
}

message MassivePropSyncInfo {
    int64 id = 1;
    repeated MassivePropParam prop_list = 2;
}

message MassiveWaterInfo {
    int64 id = 1;
}

message MatchPlayerInfo {
    OnlinePlayerInfo player_info = 3;
    bool is_agreed = 15;
}

message Material {
    uint32 count = 1;
    MaterialDeleteInfo delete_info = 2;
}

message MaterialDeleteInfo {
    message CountDownDelete {
        map<uint32, uint32> delete_time_num_map = 1;
        uint32 config_count_down_time = 2;
    }
    message DateTimeDelete {
        uint32 delete_time = 1;
    }
    message DelayWeekCountDownDelete {
        map<uint32, uint32> delete_time_num_map = 1;
        uint32 config_delay_week = 2;
        uint32 config_count_down_time = 3;
    }
    bool has_delete_config = 1;
    oneof delete_info {
        CountDownDelete count_down_delete = 2;
        DateTimeDelete date_delete = 3;
        DelayWeekCountDownDelete delay_week_count_down_delete = 4;
    }
}

// CmdId: 634
message MaterialDeleteReturnNotify {
    map<uint32, uint32> DCCFDJCFDMO = 14;
    MaterialDeleteReturnType type = 9;
    map<uint32, uint32> HJCFPDMMNFK = 10;
}

// CmdId: 657
message MaterialDeleteUpdateNotify {
}

message MaterialInfo {
    uint32 count = 13;
    uint64 guid = 4;
}

message MaterilaInfo {
    uint32 count = 3;
    uint64 guid = 14;
}

message MathQuaternion {
    float x = 1;
    float y = 2;
    float z = 3;
    float w = 4;
}

// CmdId: 637
message McoinExchangeHcoinReq {
    uint32 PBPMGONFBPF = 12;
    uint32 MLKHDJPCJLG = 13;
}

// CmdId: 624
message McoinExchangeHcoinRsp {
    int32 retcode = 1;
    uint32 MLKHDJPCJLG = 11;
    uint32 PBPMGONFBPF = 3;
}

// CmdId: 20143
message MDBHGIIOPKI {
    uint32 pos_id = 7;
    uint32 check_root_id = 5;
    bool is_succ = 13;
}

// CmdId: 5543
message MDHPLAGPINN {
    uint32 end_time = 7;
    uint32 gallery_id = 2;
}

// CmdId: 3999
message MechanicusCandidateTeamCreateReq {
    uint32 difficult_level = 8;
}

// CmdId: 3975
message MechanicusCandidateTeamCreateRsp {
    int32 retcode = 8;
    uint32 dungeon_id = 9;
    uint32 difficult_level = 1;
}

// CmdId: 3956
message MechanicusCloseNotify {
    uint32 mechanicus_id = 11;
}

// CmdId: 3976
message MechanicusCoinNotify {
    uint32 mechanicus_id = 2;
    uint32 coin = 14;
}

message MechanicusInfo {
    repeated uint32 LLONNKHKKHA = 11;
    uint32 coin = 5;
    uint32 mechanicus_id = 6;
    repeated Uint32Pair gear_level_pair_list = 9;
    bool is_finish_teach_dungeon = 8;
    repeated uint32 FBPPLFNPECI = 3;
    uint32 punish_over_time = 15;
}

// CmdId: 3992
message MechanicusLevelupGearReq {
    uint32 gear_id = 10;
    uint32 mechanicus_id = 5;
}

// CmdId: 3963
message MechanicusLevelupGearRsp {
    uint32 mechanicus_id = 1;
    uint32 after_gear_level = 10;
    uint32 gear_id = 14;
    int32 retcode = 6;
}

// CmdId: 3916
message MechanicusOpenNotify {
    uint32 mechanicus_id = 14;
}

// CmdId: 3989
message MechanicusSequenceOpenNotify {
    uint32 mechanicus_id = 7;
    uint32 sequence_id = 4;
}

// CmdId: 3941
message MechanicusUnlockGearReq {
    uint32 mechanicus_id = 8;
    uint32 gear_id = 15;
}

// CmdId: 3972
message MechanicusUnlockGearRsp {
    uint32 gear_id = 5;
    uint32 mechanicus_id = 8;
    int32 retcode = 6;
}

// CmdId: 541
message MeetNpcReq {
    uint32 npc_id = 12;
}

// CmdId: 572
message MeetNpcRsp {
    uint32 npc_first_met_id = 9;
    int32 retcode = 15;
}

// CmdId: 556
message MetNpcIdListNotify {
    repeated uint32 npc_first_met_id_list = 8;
}

// CmdId: 22376
message MFEOLMIMPCE {
    repeated uint32 JNLFELKMPPM = 14;
    uint32 difficulty_level = 12;
    uint32 level_id = 8;
    repeated uint32 NFJHJMKEAEH = 7;
}

// CmdId: 24781
message MGEHIFOHGIA {
}

// CmdId: 7500
message MHIGNIDFIJO {
    uint32 id = 8;
}

message MichiaeMatsuriActivityDetailInfo {
    repeated MichiaeMatsuriChestPositionInfo chest_pos_list = 12;
    repeated uint32 unlocked_crystal_skill_list = 6;
    repeated MichiaeMatsuriChallengePositionInfo challenge_pos_list = 13;
    uint32 gain_crystal_exp = 4;
    repeated MichiaeMatsuriStage stage_list = 14;
}

message MichiaeMatsuriChallengePositionInfo {
    Vector pos = 14;
    uint32 group_id = 5;
    uint32 gadget_id = 2;
}

message MichiaeMatsuriChestPositionInfo {
    uint32 config_id = 15;
    Vector pos = 8;
    uint32 group_id = 11;
}

// CmdId: 8616
message MichiaeMatsuriDarkPressureLevelUpdateNotify {
    uint32 dark_pressure_level = 4;
}

// CmdId: 8147
message MichiaeMatsuriGainCrystalExpUpdateNotify {
    uint32 gain_crystal_exp = 4;
    uint32 activity_id = 13;
}

// CmdId: 8531
message MichiaeMatsuriInteractStatueReq {
    uint32 statue_entity_id = 9;
}

// CmdId: 8535
message MichiaeMatsuriInteractStatueRsp {
    int32 retcode = 12;
}

// CmdId: 8836
message MichiaeMatsuriRemoveChallengeMarkNotify {
    uint32 gadget_id = 7;
    uint32 group_id = 6;
}

// CmdId: 8051
message MichiaeMatsuriRemoveChestMarkNotify {
    uint32 config_id = 9;
    uint32 group_id = 12;
}

message MichiaeMatsuriStage {
    uint32 open_time = 8;
    uint32 stage_id = 9;
    bool is_open = 15;
}

// CmdId: 8214
message MichiaeMatsuriStartBossChallengeReq {
    uint32 difficulty = 5;
    uint32 gadget_entity_id = 12;
}

// CmdId: 8061
message MichiaeMatsuriStartBossChallengeRsp {
    int32 retcode = 13;
}

// CmdId: 8797
message MichiaeMatsuriStartDarkChallengeReq {
    uint32 worktop_entity_id = 7;
}

// CmdId: 8021
message MichiaeMatsuriStartDarkChallengeRsp {
    int32 retcode = 8;
}

// CmdId: 8006
message MichiaeMatsuriUnlockCrystalSkillReq {
    uint32 crystal_skill_id = 15;
}

// CmdId: 8432
message MichiaeMatsuriUnlockCrystalSkillRsp {
    int32 retcode = 7;
    uint32 crystal_skill_id = 3;
}

message MIIHOLHIIFN {
    repeated uint32 data = 15;
}

// CmdId: 7988
message MILOEMBOIBJ {
    int32 retcode = 10;
}

// CmdId: 5217
message MiracleRingDataNotify {
    uint32 gadget_entity_id = 9;
    uint32 IMOIJDCCEOP = 14;
    bool is_gadget_created = 15;
    uint32 IEPBEPDPKBN = 6;
    uint32 MGHNJCCINLK = 10;
}

// CmdId: 5245
message MiracleRingDeliverItemReq {
    repeated uint64 food_weapon_guid_list = 2;
    repeated ItemParam item_param_list = 3;
    uint32 gadget_id = 7;
    InterOpType op_type = 5;
    uint32 gadget_entity_id = 11;
}

// CmdId: 5222
message MiracleRingDeliverItemRsp {
    uint32 gadget_id = 13;
    InterOpType op_type = 7;
    uint32 gadget_entity_id = 12;
    InteractType interact_type = 11;
    int32 retcode = 6;
}

// CmdId: 5220
message MiracleRingDestroyNotify {
    uint32 entity_id = 8;
}

// CmdId: 5226
message MiracleRingDropResultNotify {
    int32 JJMPKOPPOFI = 5;
    uint32 IMOIJDCCEOP = 13;
}

// CmdId: 5249
message MiracleRingTakeRewardReq {
    uint32 gadget_id = 2;
    uint32 gadget_entity_id = 15;
}

// CmdId: 5215
message MiracleRingTakeRewardRsp {
    int32 retcode = 7;
}

message MirrorAvatarInfo {
    uint32 copy_from_avatar_type = 1;
}

message MistTrialActivityDetailInfo {
    repeated MistTrialLevelData trial_level_data_list = 8;
}

message MistTrialActivityInfo {
	repeated MistTrialLevelData trialLevelDataList = 7;
}

message MistTrialBestAvatar {
    AvatarType avatar_type = 9;
    uint32 costume_id = 15;
    uint32 avatar_id = 4;
}

// CmdId: 8243
message MistTrialDunegonFailNotify {
    int32 dungeon_id = 12;
}

// CmdId: 919
message MistTrialFloorLevelNotify {
    uint32 dungeon_scene_id = 11;
    uint32 floor_level = 7;
}

// CmdId: 8804
message MistTrialGetChallengeMissionReq {
    uint32 trial_id = 1;
}

// CmdId: 8558
message MistTrialGetChallengeMissionRsp {
    repeated MistTrialMissionInfo mission_info_list = 5;
    int32 retcode = 2;
    uint32 trial_id = 14;
}

// CmdId: 8459
message MistTrialGetDungeonExhibitionDataReq {
    uint32 trial_id = 8;
}

// CmdId: 8086
message MistTrialGetDungeonExhibitionDataRsp {
    uint32 trial_id = 2;
    int32 retcode = 12;
}

message MistTrialLevelData {
    repeated MistTrialBestAvatar best_avatar_list = 12;
    uint32 first_pass_time = 9;
    bool is_open = 10;
    MistTrialBestAvatar best_hit_avatar = 14;
    uint32 level_id = 15;
    uint32 open_time = 8;
}

message MistTrialMissionInfo {
    uint32 param = 6;
    uint32 watcher_list_id = 3;
}

// CmdId: 8943
message MistTrialSelectAvatarAndEnterDungeonReq {
    message SelectAvatarIndex {
        oneof detail {
            uint32 mist_trial_avatar_id = 6;
            uint64 formal_avatar_guid = 11;
        }
    }
    repeated uint32 select_trial_avatar_id_list = 10;
    repeated SelectAvatarIndex select_avatar_index_list = 3;
    uint32 trial_id = 12;
    uint32 enter_point_id = 1;
}

// CmdId: 8364
message MistTrialSelectAvatarAndEnterDungeonRsp {
    int32 retcode = 11;
    uint32 trial_id = 1;
}

// CmdId: 8393
message MistTrialSettleNotify {
    repeated MistTrialBestAvatar best_avatar_list = 6;
    uint32 first_pass_time = 8;
    map<uint32, uint32> DKBPGAGEGPL = 12;
    MistTrialBestAvatar best_hit_avatar = 15;
    uint32 dungeon_scene_id = 11;
    map<uint32, uint32> AGCNLMLPFKE = 4;
}

message MKDCPKPECPP {
    Vector rot = 10;
    Vector pos = 8;
}

// CmdId: 23464
message MMBGBMHBIBA {
    repeated EEKGPJAAGNH EOFCOHEIPNO = 3;
}

// CmdId: 22907
message MMPGFBFANOB {
    int32 retcode = 14;
}

message MNMIOBKDNJG {
    bool PEIGKACIBNJ = 14;
}

message ModifierDurability {
    float HGJMHAFDFOC = 1;
    float AFFIDFJHCFM = 2;
}

message ModifierProperty {
    AbilityString key = 12;
    float value = 14;
}

// CmdId: 3467
message MonsterAIConfigHashNotify {
    uint32 entity_id = 3;
    int32 hash_value = 4;
    uint32 job_id = 8;
}

// CmdId: 397
message MonsterAlertChangeNotify {
    uint32 is_alert = 14;
    repeated uint32 monster_entity_list = 2;
    uint32 avatar_entity_id = 3;
}

// CmdId: 381
message MonsterForceAlertNotify {
    uint32 monster_entity_id = 3;
}

// CmdId: 3307
message MonsterPointArrayRouteUpdateNotify {
    uint32 entity_id = 6;
    MonsterRoute monster_route = 10;
}

message MonsterRoute {
    repeated RoutePoint route_points = 1;
    uint32 speed_level = 2;
    uint32 route_type = 3;
    float arrive_range = 4;
}

// CmdId: 1390
message MonsterSummonTagNotify {
    map<uint32, uint32> summon_tag_map = 3;
    uint32 monster_entity_id = 15;
}

message MoonfinTrialActivityDetailInfo {
    map<uint32, MoonfinTrialLevelInfo> level_info_map = 5;
    uint32 special_fish_count = 3;
}

message MoonfinTrialLevelInfo {
    uint32 best_record = 12;
    uint32 open_time = 7;
}

message MotionInfo {
    Vector pos = 1;
    Vector rot = 2;
    Vector speed = 3;
    MotionState state = 4;
    repeated Vector params = 5;
    Vector ref_pos = 6;
    uint32 ref_id = 7;
    uint32 scene_time = 8;
    uint64 interval_velocity = 9;
}

// CmdId: 1803
message MpBlockNotify {
    uint32 end_time = 9;
}

// CmdId: 20385
message MPBPNIEHNJH {
    bool CLJALLCIAFL = 1;
}

message MPLevelEntityInfo {
    AbilitySyncStateInfo ability_info = 15;
    uint32 authority_peer_id = 10;
    uint32 entity_id = 11;
}

// CmdId: 1848
message MpPlayGuestReplyInviteReq {
    uint32 mp_play_id = 6;
    bool is_agree = 15;
}

// CmdId: 1812
message MpPlayGuestReplyInviteRsp {
    int32 retcode = 3;
    uint32 mp_play_id = 10;
}

// CmdId: 1819
message MpPlayGuestReplyNotify {
    bool is_agree = 11;
    uint32 uid = 3;
    uint32 mp_play_id = 8;
}

// CmdId: 1818
message MpPlayInviteResultNotify {
    uint32 mp_play_id = 4;
    bool all_argee = 11;
}

// CmdId: 1850
message MpPlayOwnerCheckReq {
    uint32 mp_play_id = 3;
    bool is_skip_match = 11;
}

// CmdId: 1824
message MpPlayOwnerCheckRsp {
    uint32 wrong_uid = 13;
    uint32 mp_play_id = 1;
    bool is_skip_match = 7;
    int32 retcode = 4;
}

// CmdId: 1837
message MpPlayOwnerInviteNotify {
    uint32 mp_play_id = 12;
    uint32 cd = 7;
    bool is_remain_reward = 9;
}

// CmdId: 1825
message MpPlayOwnerStartInviteReq {
    uint32 mp_play_id = 2;
    bool is_skip_match = 15;
}

// CmdId: 1843
message MpPlayOwnerStartInviteRsp {
    bool is_skip_match = 11;
    int32 retcode = 15;
    uint32 mp_play_id = 4;
}

// CmdId: 1847
message MpPlayPrepareInterruptNotify {
    uint32 mp_play_id = 11;
}

// CmdId: 1844
message MpPlayPrepareNotify {
    uint32 mp_play_id = 2;
    uint32 prepare_end_time = 4;
}

message MpPlayRewardInfo {
    uint32 resin = 1;
    repeated uint32 remain_uid_list = 2;
    repeated uint32 qualify_uid_list = 3;
}

message MsgParam {
    oneof param {
        uint32 int_param = 11;
        float flt_param = 13;
        string str_param = 12;
    }
}

// CmdId: 5366
message MultistagePlayEndNotify {
    uint32 play_index = 5;
    uint32 group_id = 8;
}

// CmdId: 5396
message MultistagePlayFinishStageReq {
    uint32 group_id = 9;
    uint32 play_index = 10;
}

// CmdId: 5399
message MultistagePlayFinishStageRsp {
    int32 retcode = 13;
    uint32 play_index = 10;
    uint32 group_id = 3;
}

message MultistagePlayInfo {
    uint32 begin_time = 1;
    uint32 stage_type = 4;
    uint32 play_index = 10;
    uint32 group_id = 3;
    uint32 stage_index = 2;
    uint32 duration = 13;
    uint32 play_type = 11;
    oneof detail {
        InBattleMechanicusInfo mechanicus_info = 126;
        InBattleFleurFairInfo fleur_fair_info = 604;
        HideAndSeekStageInfo hide_and_seek_info = 1873;
        InBattleChessInfo chess_info = 167;
        InBattleIrodoriChessInfo irodori_chess_info = 1680;
        CharAmusementInfo char_amusement_info = 193;
        BrickBreakerStageInfo brick_breaker_info = 1784;
        CoinCollectStageInfo coin_collect_info = 1813;
        LanV3BoatStageInfo lan_v3_boat_info = 1754;
        FleurFairV2PacmanStageInfo fleur_fair_v2_pacman_info = 1281;
    }
}

// CmdId: 5390
message MultistagePlayInfoNotify {
    MultistagePlayInfo info = 9;
}

// CmdId: 5371
message MultistagePlaySettleNotify {
    uint32 play_index = 3;
    uint32 group_id = 4;
    oneof detail {
        InBattleMechanicusSettleInfo mechanicus_settle_info = 1266;
        InBattleChessSettleInfo chess_settle_info = 121;
        InBattleIrodoriChessSettleInfo irodori_chess_settle_info = 671;
    }
}

// CmdId: 5355
message MultistagePlayStageEndNotify {
    uint32 group_id = 15;
    uint32 play_index = 11;
}

message MultistageSettleWatcherInfo {
    uint32 watcher_id = 3;
    uint32 cur_progress = 7;
    bool is_inverse = 14;
    uint32 total_progress = 12;
}

message MuqadasPotionActivityDetailInfo {
    repeated MuqadasPotionLevelData muqadas_potion_level_data_list = 1;
}

// CmdId: 24826
message MuqadasPotionActivityEnterDungeonReq {
    uint32 level_id = 14;
}

// CmdId: 20591
message MuqadasPotionActivityEnterDungeonRsp {
    uint32 level_id = 14;
    int32 retcode = 3;
}

// CmdId: 21132
message MuqadasPotionCaptureWeaknessReq {
    uint32 capture_weakness_count = 13;
    uint32 level_id = 2;
}

// CmdId: 23287
message MuqadasPotionCaptureWeaknessRsp {
    int32 retcode = 7;
}

// CmdId: 20024
message MuqadasPotionDungeonSettleNotify {
    uint32 capture_weakness_count = 11;
    bool is_new_record = 2;
    uint32 final_score = 10;
    bool is_success = 9;
    uint32 level_id = 14;
}

message MuqadasPotionLevelData {
    uint32 level_id = 6;
    bool is_open = 2;
    uint32 max_score = 7;
}

// CmdId: 24974
message MuqadasPotionRestartDungeonReq {
}

// CmdId: 21870
message MuqadasPotionRestartDungeonRsp {
    int32 retcode = 5;
}

// Proto has been converted from Sorapointa to Grasscutter format

message MusicBeatmap {
	uint32 music_id = 1;
	repeated MusicBeatmapList beatmap_item_list = 2;
}

// Proto has been converted from Sorapointa to Grasscutter format

message MusicBeatmapList {
	repeated MusicBeatmapNote beatmap_note_list = 1;
}

// Proto has been converted from Sorapointa to Grasscutter format

message MusicBeatmapNote {
	uint32 start_time = 1;
	uint32 end_time = 2;
}

message MusicBriefInfo {
	uint64 ugc_guid = 8;
	uint32 Unk3300_CCMMPAHIMDO = 88;
	uint32 Unk3300_PLNOFOHFAPE = 15;
	repeated uint32 Unk3300_HKBHAIMOBKO = 1363;
	bool Unk3300_FKIGPAJFPLG = 5;
	uint64 importFromUgcGuid = 6;
	uint32 music_id = 14;
	repeated uint32 Unk3300_JEEBFPFEHHG = 1062;
	uint32 Unk3300_MBKDGBNFPOA = 1837;
	uint32 Unk3300_OJOKFBJALIJ = 7;
	uint32 Unk3300_EGIGIOOKBAB = 287;
	uint32 Unk3300_OBBMCFADNIN = 2;
	uint32 Unk3300_PBENMAHHGIL = 9;
	bool Unk3300_NCDKCNOLGKB = 4;
	uint32 version = 1;
	string creator_nickname = 3;
	bool Unk3300_GDNAPNAINBA = 11;
	uint32 max_score = 12;
	uint32 Unk3300_KMMBLIMKJCM = 10;
	bool is_psn_platform = 13;
}

message MusicGameActivityDetailInfo {
    repeated UgcMusicBriefInfo AKDNFEAGLCO = 2;
    map<uint32, MusicGameRecord> music_game_record_map = 14;
    repeated UgcMusicBriefInfo JIDGICBBLBG = 1;
}

message MusicGameRecord {
    bool is_unlock = 9;
    uint32 max_score = 6;
    uint32 max_combo = 5;
}

// CmdId: 8512
message MusicGameSettleReq {
    uint32 score = 15;
    uint32 LFBNPBMNLKD = 7;
    uint32 max_combo = 2;
    uint32 HDOIBKCMFPK = 1291;
    uint32 correct_hit = 9;
    bool JBDMHEJEGIB = 23;
    uint32 PDAEMLNANJB = 599;
    bool JGNMPPLDBON = 878;
    uint64 ugc_guid = 8;
    bool is_save_score = 6;
    uint32 AHGFEMANIFF = 1415;
    uint32 CNAJIGJCBAA = 12;
    uint32 NGCEDFEHHIM = 5;
    float speed = 161;
    uint32 combo = 1;
    uint32 music_basic_id = 14;
    repeated uint32 DLGEHGGHDAI = 491;
    repeated uint32 IENNECCNIFA = 4;
}

// CmdId: 8156
message MusicGameSettleRsp {
    bool is_unlock_next_level = 6;
    int32 retcode = 14;
    uint32 music_basic_id = 13;
    bool is_new_record = 4;
    uint64 ugc_guid = 2;
}

// CmdId: 8292
message MusicGameStartReq {
    uint32 music_basic_id = 2;
    uint64 ugc_guid = 11;
    bool is_save_score = 10;
}

// CmdId: 8128
message MusicGameStartRsp {
    int32 retcode = 11;
    uint32 music_basic_id = 9;
    uint64 ugc_guid = 4;
}

// CmdId: 2337
message NavMeshStatsNotify {
    repeated PbNavMeshStatsInfo infos = 12;
}

// CmdId: 131
message NicknameAuditConfigNotify {
    uint32 submit_limit = 15;
    bool is_open = 7;
}

message NightCrowGadgetInfo {
    repeated uint32 argument_list = 1;
}

// CmdId: 804
message NightCrowGadgetObservationMatchReq {
    uint32 target_gadget_state = 4;
    uint32 gadget_entity_id = 3;
}

// CmdId: 854
message NightCrowGadgetObservationMatchRsp {
    int32 retcode = 6;
}

// CmdId: 6089
message NJIKLIJCLDA {
    HOKJIFJPJLB HPHEBMLGPIH = 11;
}

message NJLGINKGBPH {
    Vector pos = 9;
    Vector rot = 8;
}

// CmdId: 5583
message NLMGCGCNKHG {
    uint32 gallery_id = 1;
    KMNPJIFBGJD PBGEHNAGDJL = 10;
}

// CmdId: 5765
message NLPPFFGOIED {
    GroupLinkBundle bundle = 7;
}

// CmdId: 7486
message NMPEGOIHHIH {
    repeated GCGMessagePack msg_pack_list = 4;
    GCGDuel duel = 5;
    int32 retcode = 15;
}

message NMPGPDDEPHH {
    uint32 PAALMECIKEM = 4;
    Vector target_pos = 2;
    uint32 BOPAJJJKPCB = 13;
    uint32 entity_id = 8;
}

// CmdId: 21876
message NNOJLDPDPIE {
    int32 retcode = 1;
}

// CmdId: 23303
message NOEABFFFIBJ {
    uint32 level_id = 6;
    bool OBIIGFOOFIK = 5;
}

// CmdId: 5574
message NOOGKCGHOPN {
    bool is_success = 2;
    uint32 gallery_id = 5;
}

// CmdId: 5709
message NormalUidOpNotify {
    uint32 param_index = 6;
    repeated uint32 param_uid_list = 10;
    repeated uint32 param_list = 2;
    uint32 duration = 7;
}

message NpcPositionInfo {
    uint32 npc_id = 1;
    Vector pos = 2;
}

// CmdId: 590
message NpcTalkReq {
    uint32 npc_entity_id = 7;
    uint32 entity_id = 14;
    uint32 talk_id = 11;
}

// CmdId: 596
message NpcTalkRsp {
    uint32 entity_id = 5;
    uint32 cur_talk_id = 3;
    int32 retcode = 12;
    uint32 npc_entity_id = 8;
}

// CmdId: 449
message NpcTalkStateNotify {
    bool is_ban = 15;
}

message OBECMPAGPAJ {
    uint32 apply_entity_id = 13;
}

message ObstacleInfo {
    enum ShapeType {

        OBSTACLE_SHAPE_CAPSULE = 0;
        OBSTACLE_SHAPE_BOX = 1;
    }
    int32 obstacle_id = 15;
    MathQuaternion rotation = 1;
    ShapeType shape = 12;
    Vector3Int extents = 10;
    Vector center = 3;
}

// CmdId: 2389
message ObstacleModifyNotify {
    uint32 scene_id = 2;
    repeated int32 remove_obstacle_ids = 13;
    repeated ObstacleInfo add_obstacles = 5;
}

// CmdId: 21648
message ODCPBFFABNO {
    int32 retcode = 3;
}

message OfferingInfo {
    uint32 offering_id = 1;
}

// CmdId: 2907
message OfferingInteractReq {
    uint32 offering_id = 8;
}

// CmdId: 2920
message OfferingInteractRsp {
    PlayerOfferingData offering_data = 9;
    int32 retcode = 11;
}

message OfficialCustomDungeon {
    uint32 dungeon_id = 13;
    uint32 win_times = 15;
}

// CmdId: 20508
message OFJKMJFMLCO {
    uint32 pos_id = 14;
    int32 retcode = 9;
}

// CmdId: 21758
message OHAGCADDFGA {
}

message OJGNBGJFLDC {
    bool is_invalid = 8;
    uint32 controller_id = 3;
    uint32 game_id = 11;
    uint32 win_controller_id = 9;
    fixed32 expire_time = 14;
    GCGGameBusinessType business_type = 2;
    repeated GCGPlayerBriefData player_brief_list = 7;
    uint32 id = 4;
    fixed32 time_stamp = 10;
    repeated Uint32Pair CEEKAANHKID = 12;
}

message OKIJBAEPFFD {
    repeated int32 param_list = 5;
}

// CmdId: 20858
message OKNMFKCKJGP {
    bool is_unlock_next_level = 7;
    uint32 music_basic_id = 8;
    int32 retcode = 3;
    bool is_new_record = 4;
    uint64 ugc_guid = 2;
}

// CmdId: 24985
message OLCOENGMPPC {
    int32 retcode = 13;
}

message ONENOLPLBCI {
    uint32 LJLHBEEDOCF = 4;
}

message OneoffGatherPointDetectorData {
    Vector hint_center_pos = 4;
    bool is_hint_valid = 11;
    uint32 config_id = 10;
    bool is_all_collected = 5;
    uint32 hint_radius = 1;
    uint32 group_id = 7;
    uint32 material_id = 14;
}

// CmdId: 4274
message OneoffGatherPointDetectorDataNotify {
    repeated OneoffGatherPointDetectorData oneoff_gather_point_detector_data_list = 4;
}

message OnlinePlayerInfo {
    uint32 uid = 1;
    string nickname = 2;
    uint32 player_level = 3;
    uint32 avatar_id = 4;
    MpSettingType mp_setting_type = 5;
    uint32 cur_player_num_in_world = 6;
    uint32 world_level = 7;
    string online_id = 8;
    uint32 name_card_id = 9;
    repeated uint32 blacklist_uid_list = 10;
    string signature = 11;
    ProfilePicture profile_picture = 12;
    string psn_id = 13;
}

// CmdId: 5554
message ONMECJLKJJC {
    uint32 gallery_id = 14;
}

message OOIAJKGPIIJ {
    float DHKJDIBANIF = 9;
}

// CmdId: 5189
message OpActivityDataNotify {
    repeated OpActivityInfo op_activity_info_list = 6;
}

message OpActivityInfo {
    uint32 end_time = 2;
    bool is_has_change = 6;
    uint32 begin_time = 12;
    uint32 schedule_id = 9;
    uint32 activity_id = 11;
    oneof detail {
        BonusOpActivityInfo bonus_info = 5;
    }
}

// CmdId: 2590
message OpActivityStateNotify {
    repeated uint32 finished_bonus_activity_id_list = 1;
    repeated OpActivityTagBriefInfo opened_op_activity_info_list = 10;
}

message OpActivityTagBriefInfo {
    uint32 config_id = 10;
    bool has_reward = 5;
    uint32 op_activity_type = 15;
}

// CmdId: 5176
message OpActivityUpdateNotify {
    OpActivityInfo op_activity_info = 9;
}

// CmdId: 2741
message OpenBlossomCircleCampGuideNotify {
    uint32 refresh_id = 2;
    repeated uint32 circle_camp_id_list = 8;
}

// CmdId: 195
message OpenStateChangeNotify {
    map<uint32, uint32> open_state_map = 11;
}

// CmdId: 139
message OpenStateUpdateNotify {
    map<uint32, uint32> open_state_map = 9;
}

// CmdId: 4126
message OrderDisplayNotify {
    uint32 order_id = 8;
}

// CmdId: 4117
message OrderFinishNotify {
    uint32 card_product_remain_days = 2;
    uint32 order_id = 5;
    repeated ItemParam item_list = 1;
    uint32 add_mcoin = 10;
    string product_id = 9;
}

message OtherCustomDungeonBrief {
    CustomDungeonSetting setting = 11;
    CustomDungeonSocial social = 1;
    SocialDetail creator_detail = 3;
    uint32 battle_min_cost_time = 9;
    repeated uint32 tag_list = 6;
    CustomDungeonAbstract abstract = 7;
    bool DODBAMEJAFH = 5;
    bool OBLLPOAMFKN = 4;
    uint64 dungeon_guid = 10;
    uint32 dungeon_id = 2;
    bool is_psn_platform = 12;
}

// CmdId: 4876
message OtherPlayerEnterHomeNotify {
    enum Reason {

        INVALID = 0;
        ENTER = 1;
        LEAVE = 2;
    }
    string nickname = 10;
    Reason reason = 3;
}

// CmdId: 6206
message OutStuckCustomDungeonReq {
}

// CmdId: 6238
message OutStuckCustomDungeonRsp {
    int32 retcode = 2;
}

message PacketHead {
  uint32 packet_id = 1;
  uint32 rpc_id = 2;
  uint32 client_sequence_id = 3;
  uint32 enet_channel_id = 4;
  uint32 enet_is_reliable = 5;
  uint64 sent_ms = 6;
  uint32 user_id = 11;
  uint32 user_ip = 12;
  uint32 user_session_id = 13;
  uint64 recv_time_ms = 21;
  uint32 rpc_begin_time_ms = 22;
  map<uint32, uint32> ext_map = 23;
  uint32 sender_app_id = 24;
  uint32 source_service = 31;
  uint32 target_service = 32;
  map<uint32, uint32> service_app_id_map = 33;
  bool is_set_game_thread = 34;
  uint32 game_thread_index = 35;
}

message PacmanSettleInfo {
    uint32 final_score = 1;
    uint32 FJBKBMHJMMM = 9;
    FEEHAOJCNCG reason = 13;
    bool is_new_record = 3;
    uint32 BKECHEIMCGP = 5;
}

message ParamList {
    repeated uint32 param_list = 1;
}

message ParentQuest {
    uint32 accept_time = 10;
    bool is_random = 3;
    repeated ChildQuest child_quest_list = 4;
    uint64 video_key = 15;
    ParentQuestRandomInfo random_info = 14;
    map<uint32, uint32> time_var_map = 5;
    repeated InferencePageInfo inference_page_list = 13;
    uint32 PGAAFEALHLK = 9;
    uint32 NJNBCLGFCIN = 12;
    repeated int32 quest_var = 8;
    bool is_finished = 11;
    uint32 parent_quest_id = 7;
}

// CmdId: 440
message ParentQuestInferenceDataNotify {
    uint32 parent_quest_id = 11;
    repeated InferencePageInfo inference_page_list = 13;
}

message ParentQuestRandomInfo {
    uint32 entrance_id = 13;
    uint32 template_id = 10;
    repeated uint32 factor_list = 4;
}

message ParkourLevelInfo {
    Vector pos = 12;
    uint32 open_time = 4;
    bool is_open = 3;
    uint32 best_record = 7;
}

// CmdId: 2316
message PathfindingEnterSceneReq {
    uint32 ILMENCHMGBJ = 1;
    bool is_editor = 10;
    repeated ObstacleInfo obstacles = 13;
    uint32 EKOAFIHJCPL = 14;
    uint32 scene_id = 2;
    uint32 version = 15;
}

// CmdId: 2356
message PathfindingEnterSceneRsp {
    int32 retcode = 6;
}

// CmdId: 2376
message PathfindingPingNotify {
}

message PBNavMeshPoly {
    enum EdgeType {

        INNER = 0;
        TILE_BOUND = 1;
        TILE_BOUND_UNCONNECT = 2;
        TILE_BOUND_OVERIDE = 3;
    }
    repeated EdgeType edge_types = 8;
    repeated int32 vects = 1;
    int32 area = 6;
}

message PbNavMeshStatsInfo {
    int32 MGJODNCGBGF = 5;
    int32 NHPLKDODAMJ = 2;
    int32 LKALGGFDFLG = 3;
    int32 MCCHAGPLPDC = 1;
}

message PBNavMeshTile {
    repeated Vector vecs = 12;
    repeated PBNavMeshPoly polys = 10;
}

// CmdId: 21486
message PEEKHLNIGJH {
    uint32 level_id = 1;
}

message PEHFOAKOBCN {
    uint32 IGGFEPAJECG = 3;
    uint32 NLMFLJDFCMK = 9;
}

// CmdId: 1182
message PerformOperationNotify {
    enum OperateType {

        OPERATE_TYPE_NONE = 0;
        OPERATE_TYPE_EFFECT = 1;
    }
    Vector pos = 4;
    OperateType operate_type = 11;
    Vector rot = 1;
    uint32 index = 5;
    uint32 entity_id = 3;
}

// CmdId: 1685
message PersistentDungeonSwitchAvatarReq {
    repeated uint64 avatar_team_guid_list = 10;
    uint64 cur_avatar_guid = 2;
}

// CmdId: 1649
message PersistentDungeonSwitchAvatarRsp {
    uint64 cur_avatar_guid = 11;
    int32 retcode = 1;
    repeated uint64 avatar_team_guid_list = 8;
}

// CmdId: 406
message PersonalLineAllDataReq {
}

// CmdId: 404
message PersonalLineAllDataRsp {
    uint32 legendary_key_count = 14;
    uint32 cur_finished_daily_task_count = 6;
    repeated uint32 OIJBKBOLJIL = 3;
    repeated uint32 DIHALBEEOPO = 10;
    int32 retcode = 2;
    repeated LockedPersonallineData locked_personal_line_list = 1;
}

// CmdId: 488
message PersonalLineNewUnlockNotify {
    repeated uint32 personal_line_id_list = 1;
}

// CmdId: 268
message PersonalSceneJumpReq {
    uint32 point_id = 9;
}

// CmdId: 293
message PersonalSceneJumpRsp {
    uint32 dest_scene_id = 13;
    Vector dest_pos = 4;
    int32 retcode = 10;
}

// CmdId: 24347
message PGHDNINMDJM {
    uint32 pos_id = 13;
}

message PGHIDDKHGAL {
    uint32 CDMINANDFKE = 1;
}

message PGOBBCACAPE {
    bool CPIIAHCHHHL = 7;
}

// CmdId: 4198
message PHFEMFDEIPP {
    uint32 match_id = 5;
}

// CmdId: 8864
message PhotoActivityClientViewReq {
    uint32 pos_id = 13;
}

// CmdId: 8982
message PhotoActivityClientViewRsp {
    int32 retcode = 12;
    uint32 pos_id = 4;
}

message PhotoActivityDetailInfo {
    repeated PhotoPosData photo_pos_data_list = 15;
    bool is_content_closed = 14;
}

// CmdId: 8138
message PhotoActivityFinishReq {
    bool is_succ = 2;
    uint32 pos_id = 15;
    uint32 check_root_id = 6;
}

// CmdId: 8644
message PhotoActivityFinishRsp {
    uint32 pos_id = 9;
    int32 retcode = 7;
}

message PhotoPosData {
    bool is_view = 4;
    uint32 open_time = 13;
    Vector center = 8;
    uint32 pos_id = 5;
    bool is_open = 6;
}

message PHPPIKHLMBK {
    repeated uint32 JNNABCBJFIF = 2;
    repeated uint32 MNNPHOJCILP = 13;
}

// CmdId: 23193
message PIGIPONAOCL {
    int32 retcode = 10;
}

message PIHDFMDILLF {
    repeated JKFJFNMCNDN stage_info_list = 7;
}

// CmdId: 22162
message PIIMBAGDDNJ {
    int32 retcode = 8;
}

// CmdId: 16
message PingReq {
    double total_tick_time = 4;
    uint32 seq = 11;
    uint32 client_time = 2;
    float ue_time = 9;
    bytes sc_data = 6;
}

// CmdId: 56
message PingRsp {
    int32 retcode = 9;
    uint32 seq = 4;
    uint32 client_time = 2;
}

message PKPOFHEAABE {
    bool OFHIJLCDDAN = 3;
}

message PlaceInfo {
    Vector pos = 1;
    Vector rot = 2;
}

// CmdId: 8210
message PlantFlowerAcceptAllGiveFlowerReq {
    uint32 schedule_id = 2;
}

// CmdId: 8456
message PlantFlowerAcceptAllGiveFlowerRsp {
    uint32 schedule_id = 13;
    int32 retcode = 1;
    repeated PlantFlowerAcceptFlowerResultInfo accept_flower_result_info_list = 14;
}

message PlantFlowerAcceptFlowerResultInfo {
    map<uint32, uint32> POKCMICNNDP = 9;
    map<uint32, uint32> EIBDMNCCEAL = 5;
    uint32 uid = 8;
}

// CmdId: 8561
message PlantFlowerAcceptGiveFlowerReq {
    uint32 schedule_id = 8;
    uint32 uid = 9;
}

// CmdId: 8614
message PlantFlowerAcceptGiveFlowerRsp {
    int32 retcode = 5;
    uint32 schedule_id = 6;
    PlantFlowerAcceptFlowerResultInfo accept_flower_result_info = 8;
}

message PlantFlowerActivityDetailInfo {
    map<uint32, uint32> LJENBNHMAHE = 10;
    bool is_today_has_awarded = 6;
    bool is_content_closed = 3;
    map<uint32, uint32> LBKFMDJGOPL = 1;
    uint32 day_index = 11;
    uint32 today_seed_reward_id = 15;
}

// CmdId: 8639
message PlantFlowerEditFlowerCombinationReq {
    uint32 schedule_id = 10;
    uint32 entity_id = 1;
    CustomGadgetTreeInfo flower_combination_info = 11;
}

// CmdId: 8379
message PlantFlowerEditFlowerCombinationRsp {
    int32 retcode = 1;
    uint32 schedule_id = 11;
}

message PlantFlowerFriendFlowerWishData {
    string nickname = 14;
    uint32 uid = 13;
    map<uint32, uint32> flower_num_map = 12;
    ProfilePicture profile_picture = 9;
}

// CmdId: 8250
message PlantFlowerGetCanGiveFriendFlowerReq {
    uint32 schedule_id = 14;
}

// CmdId: 8104
message PlantFlowerGetCanGiveFriendFlowerRsp {
    map<uint32, uint32> flower_num_map = 10;
    uint32 schedule_id = 11;
    int32 retcode = 6;
}

// CmdId: 8562
message PlantFlowerGetFriendFlowerWishListReq {
    uint32 schedule_id = 4;
}

// CmdId: 8571
message PlantFlowerGetFriendFlowerWishListRsp {
    uint32 schedule_id = 1;
    int32 retcode = 12;
    repeated PlantFlowerFriendFlowerWishData friend_flower_wish_list = 2;
}

// CmdId: 8225
message PlantFlowerGetRecvFlowerListReq {
    uint32 schedule_id = 8;
}

// CmdId: 8365
message PlantFlowerGetRecvFlowerListRsp {
    repeated PlantFlowerRecvFlowerData recv_flower_list = 3;
    int32 retcode = 10;
    uint32 schedule_id = 5;
}

// CmdId: 8915
message PlantFlowerGetSeedInfoReq {
    uint32 schedule_id = 10;
}

// CmdId: 8809
message PlantFlowerGetSeedInfoRsp {
    int32 retcode = 1;
    uint32 schedule_id = 11;
    uint32 seed_reward_id = 9;
}

// CmdId: 8693
message PlantFlowerGiveFriendFlowerReq {
    map<uint32, uint32> flower_num_map = 7;
    uint32 uid = 1;
    uint32 schedule_id = 15;
}

// CmdId: 8239
message PlantFlowerGiveFriendFlowerRsp {
    int32 retcode = 13;
    uint32 schedule_id = 1;
    repeated uint32 limit_flower_list = 3;
}

// CmdId: 8205
message PlantFlowerHaveRecvFlowerNotify {
    uint32 schedule_id = 3;
}

message PlantFlowerRecvFlowerData {
    ProfilePicture profile_picture = 9;
    uint32 uid = 4;
    string nickname = 10;
    map<uint32, uint32> flower_num_map = 7;
}

// CmdId: 8043
message PlantFlowerSetFlowerWishReq {
    uint32 schedule_id = 12;
    map<uint32, uint32> flower_num_map = 11;
}

// CmdId: 8180
message PlantFlowerSetFlowerWishRsp {
    int32 retcode = 8;
    uint32 schedule_id = 6;
}

// CmdId: 8467
message PlantFlowerTakeSeedRewardReq {
    uint32 schedule_id = 2;
}

// CmdId: 8868
message PlantFlowerTakeSeedRewardRsp {
    uint32 schedule_id = 7;
    int32 retcode = 6;
}

// CmdId: 219
message PlatformChangeRouteNotify {
    PlatformInfo platform = 9;
    uint32 entity_id = 15;
    uint32 scene_time = 7;
}

message PlatformInfo {
    uint32 route_id = 1;
    int32 start_index = 2;
    uint32 start_route_time = 3;
    uint32 start_scene_time = 4;
    Vector start_pos = 7;
    bool is_started = 8;
    MathQuaternion start_rot = 9;
    uint32 stop_scene_time = 10;
    Vector pos_offset = 11;
    MathQuaternion rot_offset = 12;
    MovingPlatformType moving_platform_type = 13;
    bool is_active = 14;
    Route route = 15;
    uint32 point_id = 16;
}

// CmdId: 269
message PlatformStartRouteNotify {
    uint32 entity_id = 8;
    PlatformInfo platform = 4;
    uint32 scene_time = 3;
}

// CmdId: 232
message PlatformStopRouteNotify {
    uint32 scene_time = 6;
    uint32 entity_id = 5;
    PlatformInfo platform = 14;
}

// CmdId: 4173
message PlayerAllowEnterMpAfterAgreeMatchNotify {
    uint32 target_uid = 10;
}

// CmdId: 4549
message PlayerApplyEnterHomeNotify {
    uint32 src_app_id = 14;
    OnlinePlayerInfo src_player_info = 9;
}

// CmdId: 4832
message PlayerApplyEnterHomeResultNotify {
    enum Reason {

        PLAYER_JUDGE = 0;
        PLAYER_ENTER_OPTION_REFUSE = 1;
        PLAYER_ENTER_OPTION_DIRECT = 2;
        SYSTEM_JUDGE = 3;
        HOST_IN_MATCH = 4;
        PS_PLAYER_NOT_ACCEPT_OTHERS = 5;
        OPEN_STATE_NOT_OPEN = 6;
        HOST_IN_EDIT_MODE = 7;
        PRIOR_CHECK = 8;
    }
    bool is_agreed = 1;
    uint32 target_uid = 14;
    Reason reason = 2;
    string target_nickname = 13;
}

// CmdId: 4591
message PlayerApplyEnterHomeResultReq {
    bool is_agreed = 2;
    uint32 apply_uid = 3;
}

// CmdId: 4725
message PlayerApplyEnterHomeResultRsp {
    uint32 param = 12;
    int32 retcode = 11;
    uint32 apply_uid = 8;
    bool is_agreed = 1;
}

// CmdId: 4186
message PlayerApplyEnterMpAfterMatchAgreedNotify {
    OnlinePlayerInfo src_player_info = 9;
    uint32 matchserver_id = 1;
    MatchType match_type = 15;
}

// CmdId: 1809
message PlayerApplyEnterMpNotify {
    uint32 src_app_id = 9;
    uint32 src_thread_index = 8;
    OnlinePlayerInfo src_player_info = 7;
}

// CmdId: 1816
message PlayerApplyEnterMpReq {
    uint32 target_uid = 12;
}

// CmdId: 1849
message PlayerApplyEnterMpResultNotify {
    enum Reason {

        PLAYER_JUDGE = 0;
        SCENE_CANNOT_ENTER = 1;
        PLAYER_CANNOT_ENTER_MP = 2;
        SYSTEM_JUDGE = 3;
        ALLOW_ENTER_PLAYER_FULL = 4;
        WORLD_LEVEL_LOWER_THAN_HOST = 5;
        HOST_IN_MATCH = 6;
        PLAYER_IN_BLACKLIST = 7;
        PS_PLAYER_NOT_ACCEPT_OTHERS = 8;
        HOST_IS_BLOCKED = 9;
        OTHER_DATA_VERSION_NOT_LATEST = 10;
        DATA_VERSION_NOT_LATEST = 11;
        PLAYER_NOT_IN_PLAYER_WORLD = 12;
        MAX_PLAYER = 13;
    }
    string target_nickname = 8;
    bool is_agreed = 2;
    uint32 target_uid = 14;
    Reason reason = 6;
}

// CmdId: 1815
message PlayerApplyEnterMpResultReq {
    bool is_agreed = 14;
    uint32 apply_uid = 9;
}

// CmdId: 1826
message PlayerApplyEnterMpResultRsp {
    int32 retcode = 2;
    bool is_agreed = 9;
    uint32 apply_uid = 3;
    uint32 param = 13;
}

// CmdId: 1817
message PlayerApplyEnterMpRsp {
    uint32 param = 4;
    uint32 target_uid = 2;
    int32 retcode = 12;
}

// CmdId: 4199
message PlayerCancelMatchReq {
    MatchType match_type = 6;
}

// CmdId: 4165
message PlayerCancelMatchRsp {
    MatchType match_type = 15;
    int32 retcode = 10;
}

// CmdId: 3019
message PlayerChatCDNotify {
    uint32 over_time = 3;
}

// CmdId: 3103
message PlayerChatNotify {
    ChatInfo chat_info = 13;
    uint32 channel_id = 5;
}

// CmdId: 3065
message PlayerChatReq {
    uint32 channel_id = 3;
    ChatInfo chat_info = 7;
}

// CmdId: 3425
message PlayerChatRsp {
    uint32 chat_forbidden_endtime = 2;
    int32 retcode = 9;
}

// CmdId: 179
message PlayerCompoundMaterialBoostReq {
    uint32 GHBDKDMBGEH = 5;
    uint32 OBIJFFPNJCH = 13;
    bool is_boost_all = 3;
    uint32 MOOPCNDDCEP = 14;
}

// CmdId: 113
message PlayerCompoundMaterialBoostRsp {
    int32 retcode = 8;
    CompoundBoostTakeStatusType take_status = 9;
    repeated CompoundQueueData compound_que_data_list = 15;
    repeated ItemParam take_item_list = 14;
}

// CmdId: 133
message PlayerCompoundMaterialReq {
    uint32 compound_id = 10;
    uint32 count = 6;
}

// CmdId: 183
message PlayerCompoundMaterialRsp {
    CompoundQueueData compound_que_data = 4;
    int32 retcode = 13;
}

// CmdId: 4172
message PlayerConfirmMatchReq {
    MatchType match_type = 7;
    bool is_agreed = 10;
}

// CmdId: 4170
message PlayerConfirmMatchRsp {
    bool is_agreed = 15;
    int32 retcode = 7;
    MatchType match_type = 6;
    uint32 match_id = 14;
}

// CmdId: 132
message PlayerCookArgsReq {
    uint32 assist_avatar = 8;
    uint32 recipe_id = 9;
}

// CmdId: 119
message PlayerCookArgsRsp {
    int32 retcode = 4;
    float qte_range_ratio = 14;
}

// CmdId: 150
message PlayerCookReq {
    uint32 AIBLNBAFJOL = 13;
    uint32 assist_avatar = 1;
    uint32 EHPKNEPMOAO = 6;
    uint32 recipe_id = 7;
}

// CmdId: 148
message PlayerCookRsp {
    uint32 AIBLNBAFJOL = 2;
    int32 retcode = 12;
    uint32 EHPKNEPMOAO = 14;
    repeated ItemParam item_list = 8;
    repeated ItemParam extral_item_list = 15;
    CookRecipeData recipe_data = 9;
}

// CmdId: 172
message PlayerDataNotify {
    bool is_first_login_today = 7;
    uint32 region_id = 8;
    uint64 server_time = 5;
    map<uint32, PropValue> prop_map = 4;
    string nick_name = 3;
}

// CmdId: 6267
message PlayerDeathZoneNotify {
    uint32 cur_death_zone_id = 6;
}

// CmdId: 989
message PlayerEnterDungeonReq {
    uint32 point_id = 12;
    uint32 dungeon_id = 14;
    DungeonEnterPosInfo enter_pos_info = 6;
}

// CmdId: 976
message PlayerEnterDungeonRsp {
    uint32 dungeon_id = 12;
    uint32 point_id = 10;
    int32 retcode = 1;
}

// CmdId: 291
message PlayerEnterSceneInfoNotify {
    repeated AvatarEnterSceneInfo avatar_enter_info = 12;
    uint32 cur_avatar_entity_id = 4;
    MPLevelEntityInfo mp_level_entity_info = 9;
    TeamEnterSceneInfo team_enter_info = 7;
    uint32 enter_scene_token = 8;
}

// CmdId: 290
message PlayerEnterSceneNotify {
    uint32 scene_id = 1;
    uint32 enter_reason = 482;
    repeated uint32 scene_tag_id_list = 12;
    string scene_transaction = 1931;
    Vector prev_pos = 14;
    uint32 target_uid = 4;
    uint32 world_type = 952;
    bool is_skip_ui = 1748;
    EnterType type = 9;
    bool is_first_login_enter_scene = 6;
    uint32 world_level = 11;
    uint32 dungeon_id = 13;
    Vector pos = 10;
    uint32 prev_scene_id = 3;
    uint32 enter_scene_token = 8;
    uint64 scene_begin_time = 7;
}

// CmdId: 3222
message PlayerEyePointStateNotify {
    bool EBMNNMLGDFM = 13;
    uint32 BMCPCINJEAI = 5;
    uint32 JEJEJCACLMD = 1;
    uint32 DAJKMINBALI = 14;
    Vector eye_point_pos = 7;
    bool EMOONDLNHJK = 6;
    int32 fix_lod_level = 9;
    uint32 KLHMJNPKGJP = 4;
    oneof region_size {
        float sphere_radius = 1292;
        Vector cubic_size = 362;
        CylinderRegionSize cylinder_size = 208;
        PolygonRegionSize polygon_size = 886;
    }
}

// CmdId: 5837
message PlayerFishingDataNotify {
    uint32 last_fish_rod_id = 12;
}

// CmdId: 152
message PlayerForceExitReq {
}

// CmdId: 144
message PlayerForceExitRsp {
    int32 retcode = 12;
}

// CmdId: 187
message PlayerGameTimeByLuaNotify {
    uint32 sim_speed = 3;
    uint32 game_time = 8;
    uint32 uid = 4;
}

// CmdId: 159
message PlayerGameTimeNotify {
    uint32 uid = 15;
    uint32 game_time = 3;
    bool is_home = 14;
}

// CmdId: 4187
message PlayerGCGMatchConfirmNotify {
    uint32 uid = 4;
    uint32 match_id = 14;
    bool is_agree = 10;
}

// CmdId: 4193
message PlayerGCGMatchDismissNotify {
    uint32 match_id = 6;
    MatchReason reason = 7;
    repeated uint32 uid_list = 12;
}

// CmdId: 4171
message PlayerGeneralMatchConfirmNotify {
    uint32 uid = 10;
    bool is_agree = 6;
    uint32 match_id = 4;
}

// CmdId: 4181
message PlayerGeneralMatchDismissNotify {
    repeated uint32 uid_list = 10;
    uint32 match_id = 13;
    MatchReason reason = 6;
}

// CmdId: 4200
message PlayerGetForceQuitBanInfoReq {
}

// CmdId: 4174
message PlayerGetForceQuitBanInfoRsp {
    uint32 expire_time = 10;
    uint32 match_id = 12;
    int32 retcode = 14;
}

message PlayerHomeCompInfo {
    repeated uint32 seen_module_id_list = 4;
    repeated uint32 BPAOEFJJFPI = 5;
    repeated uint32 CKMGNKPLJPI = 2;
    FriendEnterHomeOption friend_enter_home_option = 11;
}

// CmdId: 4617
message PlayerHomeCompInfoNotify {
    PlayerHomeCompInfo comp_info = 2;
}

// CmdId: 122
message PlayerInjectFixNotify {
    bytes inject_fix = 3;
    uint32 id = 12;
}

// CmdId: 1917
message PlayerInvestigationAllInfoNotify {
    repeated Investigation investigation_list = 4;
    repeated InvestigationTarget investigation_target_list = 12;
}

// CmdId: 1910
message PlayerInvestigationNotify {
    repeated Investigation investigation_list = 9;
}

// CmdId: 1927
message PlayerInvestigationTargetNotify {
    repeated InvestigationTarget investigation_target_list = 6;
}

// CmdId: 162
message PlayerIpRegionNotify {
    string ip_code = 3;
}

// CmdId: 157
message PlayerLevelRewardUpdateNotify {
    repeated uint32 level_list = 13;
}

message PlayerLocationInfo {
    Vector pos = 4;
    Vector rot = 13;
    uint32 uid = 12;
}

// CmdId: 189
message PlayerLoginReq {
    uint32 KDIHPMJOCPG = 909;
    uint32 PNJNCCNPILL = 2033;
    string token = 8;
    bool is_guest = 6;
    string JKPKMFPELKK = 778;
    string online_id = 1781;
    AdjustTrackingInfo adjust_tracking_info = 2010;
    uint64 login_rand = 12;
    TrackingIOInfo tracking_io_info = 498;
    uint32 language_type = 7;
    uint32 CJHEEAGCFJG = 2015;
    uint32 FGAKKMHIKHF = 829;
    string FIALIJNFLDH = 2;
    string DOAPGNNFLBJ = 1352;
    string account_uid = 4;
    uint32 target_uid = 14;
    string KCODJEPOJPE = 254;
    string AAEIDEMEKFF = 936;
    uint32 FIDMBJJPBEH = 832;
    string ADMEMLCIHBA = 1953;
    string PKCPAMFKKPC = 11;
    bytes JLOPICGGPBP = 978;
    string IOBMOHHHGNB = 823;
    uint32 ECJMGOCEABB = 1650;
    string ENNPHCJEFFC = 3;
    string psn_id = 1125;
    bool is_editor = 10;
    bytes JDKDCMJLHHM = 922;
    string platform = 1;
    uint32 channel_id = 913;
    bool is_transfer = 1382;
    string PAGIGLAOJIC = 1519;
    string GEKKFJHGJFB = 9;
    uint32 FMOKLFNAOOK = 1173;
    uint32 tag = 1897;
    uint32 CIJNPHDIOND = 5;
    uint32 client_data_version = 1098;
    string DABNCDNACJK = 587;
    string EMACJCPNKAB = 13;
    uint32 platform_type = 15;
    bytes GHKJJPJKKBI = 1959;
    uint32 LFPHHMGKIIP = 1187;
    string birthday = 1256;
}

// CmdId: 176
message PlayerLoginRsp {
    int32 ability_hash_code = 4;
    bytes LBMEAGDOILF = 858;
    string AAEIDEMEKFF = 286;
    repeated ShortAbilityHashPair short_ability_hash_map = 401;
    string client_version_suffix = 309;
    string CLDKNBOLOEN = 1149;
    bool is_data_need_relogin = 1063;
    bool HKINPODGHHH = 2;
    ResVersionConfig res_version_config = 1241;
    bool HKHOCPFCPAM = 242;
    uint32 DCFPMMCBEAD = 6;
    map<string, int32> ability_hash_map = 11;
    bool is_transfer = 1162;
    uint32 client_data_version = 10;
    repeated FeatureBlockInfo feature_block_info_list = 1613;
    double total_tick_time = 1940;
    string client_silence_version_suffix = 889;
    ResVersionConfig next_res_version_config = 670;
    bool FCJHOMPHEON = 741;
    string EHDGCMPILDC = 1152;
    int32 retcode = 5;
    string game_biz = 3;
    bool BMLPDBNDAIJ = 15;
    bool FLEDDLEFFLK = 1257;
    uint64 login_rand = 1;
    string birthday = 1129;
    bool is_audit = 461;
    string KJJAIPPKFCI = 625;
    bool BJLCFHHIGJD = 8;
    uint32 client_silence_data_version = 9;
    uint32 FMOKLFNAOOK = 892;
    bytes JLDGJOPFALG = 7;
    string next_resource_url = 300;
    uint32 target_uid = 12;
    map<uint32, BlockInfo> block_info_map = 771;
}

// CmdId: 141
message PlayerLogoutNotify {
    int32 retcode = 1;
}

// CmdId: 116
message PlayerLogoutReq {
    enum Reason {

        DISCONNECT = 0;
        CLIENT_REQ = 1;
        TIMEOUT = 2;
        ADMIN_REQ = 3;
        SERVER_CLOSE = 4;
        GM_CLEAR = 5;
        PLAYER_TRANSFER = 6;
        CLIENT_CHECKSUM_INVALID = 7;
        REASON_MUIP_MOVE_SAVE_WAIT = 8;
    }
    Reason reason = 4;
}

// CmdId: 156
message PlayerLogoutRsp {
    int32 retcode = 2;
}

// CmdId: 127
message PlayerLuaShellNotify {
    bytes lua_shell = 11;
    uint32 id = 12;
    LuaShellType shell_type = 8;
    uint32 use_type = 2;
}

// CmdId: 4192
message PlayerMatchAgreedResultNotify {
    enum Reason {

        SUCC = 0;
        TARGET_SCENE_CANNOT_ENTER = 1;
        SELF_MP_UNAVAILABLE = 2;
        OTHER_DATA_VERSION_NOT_LATEST = 3;
        DATA_VERSION_NOT_LATEST = 4;
    }
    MatchType match_type = 1;
    uint32 target_uid = 6;
    Reason reason = 14;
}

// CmdId: 4167
message PlayerMatchInfoNotify {
    uint32 NAMPEEDGBPE = 11;
    uint32 host_uid = 6;
    uint32 dungeon_id = 9;
    uint32 mp_play_id = 7;
    MatchType match_type = 14;
    uint32 GAEKCLLKOMM = 5;
    repeated uint32 match_param_list = 2;
    uint32 match_id = 13;
    uint32 mechanicus_difficult_level = 8;
}

// CmdId: 4176
message PlayerMatchStopNotify {
    uint32 host_uid = 10;
    MatchReason reason = 12;
}

// CmdId: 4195
message PlayerMatchSuccNotify {
    uint32 host_uid = 8;
    uint32 dungeon_id = 13;
    GCGMatchInfo gcg_match_info = 7;
    MatchType match_type = 3;
    uint32 mp_play_id = 12;
    uint32 confirm_end_time = 6;
    uint32 mechanicus_difficult_level = 10;
    GeneralMatchInfo general_match_info = 1;
}

// CmdId: 120
message PlayerNicknameAuditDataNotify {
    ContentAuditInfo info = 11;
}

// CmdId: 185
message PlayerNicknameNotify {
    string nickname = 13;
}

message PlayerOfferingData {
    bool is_first_interact = 6;
    repeated uint32 taken_level_reward_list = 13;
    map<uint32, uint32> JDBDDFJCFMK = 9;
    bool is_new_max_level = 7;
    uint32 offering_id = 1;
    uint32 level = 12;
    oneof detail {
        LPGAFDIGHDF offering_pari_detail_data = 1777;
    }
}

// CmdId: 2918
message PlayerOfferingDataNotify {
    repeated PlayerOfferingData offering_data_list = 4;
}

// CmdId: 2908
message PlayerOfferingReq {
    uint32 offering_id = 8;
}

// CmdId: 2912
message PlayerOfferingRsp {
    repeated ItemParam item_list = 15;
    PlayerOfferingData offering_data = 4;
    int32 retcode = 5;
}

// CmdId: 1822
message PlayerPreEnterMpNotify {
    enum State {

        INVALID = 0;
        START = 1;
        TIMEOUT = 2;
    }
    uint32 uid = 4;
    string nickname = 10;
    State state = 13;
}

// CmdId: 142
message PlayerPropChangeNotify {
    uint32 prop_type = 13;
    uint32 prop_delta = 2;
}

// CmdId: 1263
message PlayerPropChangeReasonNotify {
    float cur_value = 13;
    float old_value = 6;
    uint32 prop_type = 7;
    PropChangeReason reason = 3;
}

// CmdId: 178
message PlayerPropNotify {
    map<uint32, PropValue> prop_map = 3;
}

// CmdId: 916
message PlayerQuitDungeonReq {
    uint32 point_id = 9;
    bool is_quit_immediately = 5;
}

// CmdId: 956
message PlayerQuitDungeonRsp {
    uint32 point_id = 10;
    int32 retcode = 12;
}

// CmdId: 4745
message PlayerQuitFromHomeNotify {
    enum QuitReason {

        INVALID = 0;
        KICK_BY_HOST = 1;
        BACK_TO_MY_WORLD = 2;
        HOME_BLOCKED = 3;
        HOME_IN_EDIT_MODE = 4;
        BY_MUIP = 5;
        CUR_MODULE_CLOSED = 6;
    }
    QuitReason reason = 2;
}

// CmdId: 1845
message PlayerQuitFromMpNotify {
    enum QuitReason {

        INVALID = 0;
        HOST_NO_OTHER_PLAYER = 1;
        KICK_BY_HOST = 2;
        BACK_TO_MY_WORLD = 3;
        KICK_BY_HOST_LOGOUT = 4;
        KICK_BY_HOST_BLOCK = 5;
        BE_BLOCKED = 6;
        KICK_BY_HOST_ENTER_HOME = 7;
        HOST_SCENE_INVALID = 8;
        KICK_BY_PLAY = 9;
        KICK_BY_ISLAND_PARTY_GALLERY_START_FAILED = 10;
    }
    QuitReason reason = 8;
}

// CmdId: 198
message PlayerRandomCookReq {
    repeated ItemParam material_list = 8;
}

// CmdId: 197
message PlayerRandomCookRsp {
    int32 retcode = 4;
}

// CmdId: 4115
message PlayerRechargeDataNotify {
    uint32 card_product_remain_days = 15;
    repeated ProductPriceTier product_price_tier_list = 11;
}

// CmdId: 4074
message PlayerReportReq {
    string target_home_module_name = 5;
    uint32 target_home_module_id = 11;
    uint32 target_uid = 14;
    string content = 10;
    ReportReasonType reason = 1;
}

// CmdId: 4073
message PlayerReportRsp {
    uint32 target_uid = 7;
    uint32 cd_time = 4;
    int32 retcode = 11;
}

// CmdId: 3509
message PlayerRoutineDataNotify {
    repeated PlayerRoutineInfo routine_info_list = 4;
}

message PlayerRoutineInfo {
    uint32 routine_type = 6;
    uint32 finished_num = 8;
}

message PlayerRTTInfo {
    uint32 rtt = 15;
    uint32 uid = 2;
}

// CmdId: 188
message PlayerSetLanguageReq {
    uint32 language_type = 1;
}

// CmdId: 149
message PlayerSetLanguageRsp {
    int32 retcode = 12;
}

// CmdId: 1842
message PlayerSetOnlyMPWithPSPlayerReq {
    bool is_only = 15;
}

// CmdId: 1836
message PlayerSetOnlyMPWithPSPlayerRsp {
    bool is_only = 10;
    int32 retcode = 12;
}

// CmdId: 174
message PlayerSetPauseReq {
    bool is_paused = 14;
}

// CmdId: 173
message PlayerSetPauseRsp {
    int32 retcode = 1;
}

// CmdId: 4007
message PlayerSignatureAuditDataNotify {
    ContentAuditInfo info = 6;
}

// CmdId: 4091
message PlayerSignatureNotify {
    string signature = 4;
}

// CmdId: 4159
message PlayerStartMatchReq {
    MatchType match_type = 15;
    uint32 mp_play_id = 13;
    uint32 dungeon_id = 12;
    uint32 mechanicus_difficult_level = 6;
    uint32 match_id = 2;
    repeated uint32 match_param_list = 11;
}

// CmdId: 4166
message PlayerStartMatchRsp {
    uint32 param = 15;
    uint32 match_id = 14;
    MatchType match_type = 9;
    uint32 mechanicus_difficult_level = 10;
    uint32 mp_play_id = 2;
    uint32 dungeon_id = 3;
    uint32 punish_end_time = 1;
    int32 retcode = 13;
}

// CmdId: 690
message PlayerStoreNotify {
    repeated Item item_list = 9;
    uint32 weight_limit = 11;
    StoreType store_type = 5;
}

// CmdId: 128
message PlayerTimeNotify {
    uint64 server_time = 2;
    bool is_paused = 5;
    uint64 player_time = 15;
}

message PlayerWidgetInfo {
    repeated WidgetSlotData slot_list = 15;
    uint32 uid = 12;
}

message PlayerWorldLocationInfo {
    uint32 scene_id = 14;
    PlayerLocationInfo player_loc = 3;
}

message PlayerWorldSceneInfo {
    repeated uint32 scene_tag_id_list = 3;
    uint32 scene_id = 6;
    bool is_locked = 4;
}

// CmdId: 3205
message PlayerWorldSceneInfoListNotify {
    repeated PlayerWorldSceneInfo info_list = 10;
}

message PlayProduct {
    string product_id = 1;
    string price_tier = 2;
    uint32 schedule_id = 3;
}

message PlayTeamEntityInfo {
    uint32 entity_id = 1;
    uint32 player_uid = 2;
    uint32 authority_peer_id = 3;
    uint32 gadget_config_id = 5;
    AbilitySyncStateInfo ability_info = 6;
}

// CmdId: 20539
message PMBAFLIIPEC {
    int32 retcode = 9;
}

message PolygonRegionSize {
    float height = 7;
    repeated VectorPlane point_list = 4;
}

// CmdId: 3479
message PostEnterSceneReq {
    uint32 enter_scene_token = 1;
}

// CmdId: 3417
message PostEnterSceneRsp {
    uint32 enter_scene_token = 5;
    int32 retcode = 13;
}

message PotionActivityDetailInfo {
    repeated PotionStageData stage_list = 3;
}

message PotionAvatarInfo {
    uint64 avatar_id = 14;
    bool is_trial = 8;
}

message PotionDungeonAvatar {
    uint64 avatar_guid = 3;
    bool is_trial = 11;
}

message PotionDungeonResultInfo {
    uint32 final_score = 4;
    uint32 level_id = 10;
    uint32 stage_id = 5;
    uint32 mode_id = 2;
    uint32 difficulty_level = 14;
    uint32 left_time = 8;
}

// CmdId: 8360
message PotionEnterDungeonNotify {
    uint32 level_id = 14;
    repeated PotionDungeonAvatar dungeon_avatar_list = 4;
    uint32 mode_id = 10;
    uint32 stage_id = 11;
    uint32 difficulty_level = 3;
}

// CmdId: 8152
message PotionEnterDungeonReq {
    uint32 level_id = 10;
    uint32 mode_id = 11;
    uint32 stage_id = 7;
    repeated uint32 buff_id_list = 5;
    repeated PotionAvatarInfo avatar_info_list = 6;
}

// CmdId: 8055
message PotionEnterDungeonRsp {
    int32 retcode = 2;
}

message PotionLevelData {
    uint32 score = 13;
    uint32 mode_id = 15;
    uint32 level_id = 7;
    uint32 difficulty_level = 10;
}

// CmdId: 8712
message PotionResetChallengeReq {
    uint32 stage_id = 9;
}

// CmdId: 8327
message PotionResetChallengeRsp {
    PotionStageData stage_data = 13;
    int32 retcode = 5;
}

// CmdId: 8252
message PotionRestartDungeonReq {
}

// CmdId: 8126
message PotionRestartDungeonRsp {
    int32 retcode = 12;
}

// CmdId: 8613
message PotionSaveDungeonResultReq {
    uint32 level_id = 3;
    uint32 stage_id = 10;
}

// CmdId: 8524
message PotionSaveDungeonResultRsp {
    int32 retcode = 14;
}

message PotionStageData {
    uint32 stage_id = 3;
    bool is_open = 6;
    repeated uint32 DEELPLBOLEP = 8;
    repeated uint32 EODPDLEMFAF = 10;
    repeated PotionLevelData level_list = 13;
}

message PPBLCBFKEHE {
}

// CmdId: 5039
message PrivateChatNotify {
    ChatInfo chat_info = 2;
}

// CmdId: 5040
message PrivateChatReq {
    uint32 target_uid = 13;
    oneof content {
        string text = 10;
        uint32 icon = 8;
    }
}

// CmdId: 5046
message PrivateChatRsp {
    int32 retcode = 7;
    uint32 chat_forbidden_endtime = 9;
}

message ProductPriceTier {
    string product_id = 9;
    string price_tier = 12;
}

message ProfilePicture {
    uint32 avatar_id = 1;
    uint32 costume_id = 2;
}

// CmdId: 4037
message ProfilePictureChangeNotify {
    ProfilePicture profile_picture = 9;
}

// CmdId: 897
message ProjectorOptionReq {
    enum DOENKMNEPFO {

        DOENKMNEPFO_PROJECTOR_OP_NONE = 0;
        DOENKMNEPFO_PROJECTOR_OP_CREATE = 1;
        DOENKMNEPFO_PROJECTOR_OP_DESTROY = 2;
    }
    uint32 op_type = 6;
    uint32 entity_id = 5;
}

// CmdId: 881
message ProjectorOptionRsp {
    uint32 entity_id = 15;
    int32 retcode = 10;
    uint32 op_type = 14;
}

message PropPair {
    uint32 type = 1;
    PropValue prop_value = 2;
}

message PropValue {
    uint32 type = 1;
    int64 val = 4;
    oneof value {
        int64 ival = 2;
        float fval = 3;
    }
}

// CmdId: 1059
message ProudSkillChangeNotify {
    uint32 entity_id = 14;
    uint64 avatar_guid = 10;
    uint32 skill_depot_id = 15;
    repeated uint32 proud_skill_list = 6;
}

// CmdId: 1099
message ProudSkillExtraLevelNotify {
    uint64 avatar_guid = 15;
    uint32 CBAGHCLLOCO = 10;
    uint32 KPPFFPBNNAC = 3;
    uint32 LDLMAGLNLEA = 4;
}

// CmdId: 1092
message ProudSkillUpgradeReq {
    uint32 proud_skill_id = 10;
    uint32 old_proud_skill_level = 3;
    uint64 avatar_guid = 13;
}

// CmdId: 1063
message ProudSkillUpgradeRsp {
    uint64 avatar_guid = 12;
    uint32 proud_skill_id = 5;
    int32 retcode = 14;
}

// CmdId: 4001
message PSNBlackListNotify {
    repeated FriendBrief psn_blacklist = 4;
}

// CmdId: 4024
message PSNFriendListNotify {
    repeated FriendBrief psn_friend_list = 15;
}

// CmdId: 1831
message PSPlayerApplyEnterMpReq {
    string target_psn_id = 3;
}

// CmdId: 1821
message PSPlayerApplyEnterMpRsp {
    uint32 param = 7;
    string target_psn_id = 10;
    int32 retcode = 12;
}

// CmdId: 6221
message PublishCustomDungeonReq {
    repeated uint32 tag_list = 12;
    uint64 dungeon_guid = 6;
}

// CmdId: 6250
message PublishCustomDungeonRsp {
    int32 retcode = 14;
}

// CmdId: 6320
message PublishUgcReq {
    uint64 ugc_guid = 13;
    UgcType ugc_type = 6;
}

// CmdId: 6323
message PublishUgcRsp {
    int32 retcode = 8;
    UgcType ugc_type = 5;
    uint64 ugc_guid = 14;
}

// CmdId: 5006
message PullPrivateChatReq {
    uint32 FGFEAACHHME = 2;
    uint32 LMHJHHFEHOL = 11;
    uint32 target_uid = 4;
}

// CmdId: 4991
message PullPrivateChatRsp {
    repeated ChatInfo chat_info = 10;
    int32 retcode = 11;
}

// CmdId: 5022
message PullRecentChatReq {
    uint32 HNOFCJJHEAD = 1;
    uint32 LMHJHHFEHOL = 15;
}

// CmdId: 5042
message PullRecentChatRsp {
    int32 retcode = 13;
    repeated ChatInfo chat_info = 5;
}

// CmdId: 2277
message PushTipsAllDataNotify {
    repeated PushTipsData push_tips_list = 3;
}

// CmdId: 2286
message PushTipsChangeNotify {
    repeated PushTipsData push_tips_list = 13;
}

message PushTipsData {
    uint32 push_tips_id = 14;
    uint32 state = 6;
}

// CmdId: 2251
message PushTipsReadFinishReq {
    uint32 push_tips_id = 13;
}

// CmdId: 2239
message PushTipsReadFinishRsp {
    uint32 push_tips_id = 2;
    int32 retcode = 5;
}

// CmdId: 4203
message QueryCodexMonsterBeKilledNumReq {
    repeated uint32 codex_id_list = 13;
}

// CmdId: 4208
message QueryCodexMonsterBeKilledNumRsp {
    repeated uint32 EKCLLDCMJLB = 12;
    repeated uint32 CJFGLJIGKNL = 7;
    int32 retcode = 4;
    repeated uint32 codex_id_list = 15;
}

message QueryCurrRegionHttpRsp {
    int32 retcode = 1;
    string msg = 2;
    RegionInfo region_info = 3;
    bytes client_secret_key = 11;
    bytes region_custom_config_encrypted = 12;
    bytes client_region_custom_config_encrypted = 13;
    string FPLPGEGEJJM = 14;
    oneof detail {
        ForceUpdateInfo force_update = 4;
        StopServerInfo stop_server = 5;
    }
}

message QueryFilter {
    int32 AOLDDCCIAHH = 2;
    int32 KMKDOPOMCNG = 9;
}

// CmdId: 2390
message QueryPathReq {
    enum OptionType {

        OPTION_TYPE_NONE = 0;
    OPTION_TYPE_NORMAL = 1;
    OPTION_TYPE_FIRST_CAN_GO = 2;
    }
    Vector source_pos = 7;
    QueryFilter filter = 10;
    repeated Vector destination_pos = 2;
    int32 query_id = 15;
    Vector3Int FOJHBGHIMDG = 3;
    uint32 scene_id = 9;
    OptionType query_type = 14;
    Vector3Int LCOAPOJGMKL = 6;
}

// CmdId: 2396
message QueryPathRsp {
    enum PathStatusType {

        PATH_STATUS_TYPE_FAIL = 0;
        PATH_STATUS_TYPE_SUCC = 1;
        PATH_STATUS_TYPE_PARTIAL = 2;
     }
    PathStatusType query_status = 5;
    int32 query_id = 3;
    repeated Vector corners = 1;
    int32 retcode = 10;
}

message QueryRegionListHttpRsp {
    int32 retcode = 1;
    repeated RegionSimpleInfo region_list = 2;
    bytes client_secret_key = 5;
    bytes client_custom_config_encrypted = 6;
    bool enable_login_pc = 7;
}

message Quest {
    uint32 quest_id = 1;
    uint32 state = 2;
    uint32 start_time = 4;
    bool is_random = 5;
    uint32 parent_quest_id = 6;
    uint32 quest_config_id = 7;
    uint32 start_game_time = 8;
    uint32 accept_time = 9;
    repeated uint32 lacked_npc_list = 10;
    repeated uint32 finish_progress_list = 11;
    repeated uint32 fail_progress_list = 12;
    map<uint32, uint32> lacked_npc_map = 13;
    repeated uint32 lacked_place_list = 14;
    map<uint32, uint32> lacked_place_map = 15;
}

// CmdId: 463
message QuestCreateEntityReq {
    CreateEntityInfo entity = 2;
    uint32 quest_id = 5;
    uint32 parent_quest_id = 11;
    bool is_rewind = 1;
}

// CmdId: 459
message QuestCreateEntityRsp {
    uint32 entity_id = 4;
    uint32 parent_quest_id = 6;
    CreateEntityInfo entity = 8;
    uint32 quest_id = 5;
    bool is_rewind = 3;
    int32 retcode = 11;
}

// CmdId: 489
message QuestDelNotify {
    uint32 quest_id = 9;
}

// CmdId: 478
message QuestDestroyEntityReq {
    uint32 scene_id = 5;
    uint32 quest_id = 7;
    uint32 entity_id = 4;
}

// CmdId: 412
message QuestDestroyEntityRsp {
    uint32 scene_id = 11;
    uint32 entity_id = 6;
    uint32 quest_id = 2;
    int32 retcode = 7;
}

// CmdId: 477
message QuestDestroyNpcReq {
    uint32 npc_id = 9;
    uint32 parent_quest_id = 15;
}

// CmdId: 486
message QuestDestroyNpcRsp {
    int32 retcode = 8;
    uint32 parent_quest_id = 14;
    uint32 npc_id = 15;
}

message QuestGlobalVar {
    int32 value = 6;
    uint32 key = 4;
}

// CmdId: 435
message QuestGlobalVarNotify {
    repeated QuestGlobalVar var_list = 4;
}

// CmdId: 490
message QuestListNotify {
    repeated Quest quest_list = 4;
}

// CmdId: 496
message QuestListUpdateNotify {
    repeated Quest quest_list = 6;
}

// CmdId: 446
message QuestProgressUpdateNotify {
    uint32 quest_id = 3;
    repeated uint32 finish_progress_list = 1;
    repeated uint32 fail_progress_list = 7;
}

// CmdId: 424
message QuestRenameAvatarReq {
    uint32 rename_id = 1;
    string avatar_name = 11;
    bool is_check = 14;
}

// CmdId: 401
message QuestRenameAvatarRsp {
    uint32 rename_id = 10;
    bool is_check = 8;
    string avatar_name = 5;
    int32 retcode = 14;
}

// CmdId: 433
message QuestTransmitReq {
    uint32 point_id = 2;
    uint32 quest_id = 3;
}

// CmdId: 483
message QuestTransmitRsp {
    uint32 quest_id = 5;
    int32 retcode = 3;
    uint32 point_id = 15;
}

// CmdId: 473
message QuestUpdateQuestTimeVarNotify {
    uint32 parent_quest_id = 8;
    map<uint32, uint32> time_var_map = 2;
}

// CmdId: 494
message QuestUpdateQuestVarNotify {
    repeated int32 quest_var = 3;
    uint32 parent_quest_var_seq = 2;
    uint32 parent_quest_id = 9;
}

// CmdId: 482
message QuestUpdateQuestVarReq {
    repeated QuestVarOp quest_var_op_list = 10;
    uint32 quest_id = 15;
    uint32 parent_quest_id = 8;
    uint32 parent_quest_var_seq = 9;
}

// CmdId: 442
message QuestUpdateQuestVarRsp {
    uint32 parent_quest_id = 12;
    uint32 parent_quest_var_seq = 10;
    uint32 quest_id = 14;
    int32 retcode = 6;
}

message QuestVarOp {
    uint32 index = 5;
    bool is_add = 11;
    int32 value = 12;
}

// CmdId: 8347
message QuickOpenActivityReq {
    uint32 activity_id = 2;
}

// CmdId: 8867
message QuickOpenActivityRsp {
    uint32 activity_id = 2;
    int32 retcode = 14;
}

// CmdId: 4273
message QuickUseWidgetReq {
    bool GPAEJDBAELH = 1846;
    oneof param {
        WidgetCreateLocationInfo location_info = 1807;
        WidgetCameraInfo camera_info = 1828;
        WidgetCreatorInfo creator_info = 1560;
        WidgetThunderBirdFeatherInfo thunder_bird_feather_info = 1431;
        WidgetSorushInfo sorush_info = 1961;
    }
}

// CmdId: 4292
message QuickUseWidgetRsp {
    int32 retcode = 5;
    uint32 material_id = 2;
    oneof param {
        OneoffGatherPointDetectorData detector_data = 6;
        ClientCollectorData client_collector_data = 13;
        SkyCrystalDetectorQuickUseResult sky_crystal_detector_quick_use_result = 224702;
    }
}

message RacingGallerySettleInfo {
    uint32 winner_uid = 9;
    uint32 use_time = 5;
    GalleryStopReason reason = 6;
}

// CmdId: 1489
message ReadMailNotify {
    repeated uint32 mail_id_list = 9;
}

// CmdId: 125
message ReadNicknameAuditReq {
}

// CmdId: 167
message ReadNicknameAuditRsp {
    int32 retcode = 9;
}

// CmdId: 5013
message ReadPrivateChatReq {
    uint32 target_uid = 7;
}

// CmdId: 5009
message ReadPrivateChatRsp {
    int32 retcode = 14;
}

// CmdId: 4036
message ReadSignatureAuditReq {
}

// CmdId: 4038
message ReadSignatureAuditRsp {
    int32 retcode = 15;
}

// CmdId: 2003
message ReceivedTrialAvatarActivityRewardReq {
    uint32 trial_avatar_index_id = 7;
}

// CmdId: 2067
message ReceivedTrialAvatarActivityRewardRsp {
    uint32 activity_id = 1;
    uint32 trial_avatar_index_id = 12;
    int32 retcode = 14;
}

// CmdId: 4109
message RechargeReq {
    ShopConcertProduct concert_product = 9;
    ShopMcoinProduct mcoin_product = 5;
    PlayProduct play_product = 2;
    ShopCardProduct card_product = 8;
}

// CmdId: 4116
message RechargeRsp {
    string product_id = 14;
    int32 retcode = 11;
    bool is_show_minors_hint = 13;
}

// CmdId: 454
message RedeemLegendaryKeyReq {
}

// CmdId: 443
message RedeemLegendaryKeyRsp {
    int32 retcode = 14;
    uint32 legendary_key_count = 11;
}

message RedPointData {
    uint32 red_point_type = 1;
    bool is_show = 2;
    uint32 content_id = 3;
}

// CmdId: 6082
message ReformFireworksReq {
    FireworksReformData fireworks_reform_data = 11;
}

// CmdId: 6065
message ReformFireworksRsp {
    int32 retcode = 9;
}

// CmdId: 1755
message RefreshBackgroundAvatarReq {
}

// CmdId: 1705
message RefreshBackgroundAvatarRsp {
    int32 retcode = 5;
    map<uint64, uint32> hp_full_time_map = 14;
}

// CmdId: 3416
message RefreshEntityAuthNotify {
    repeated uint32 entity_id_list = 11;
}

// CmdId: 8313
message RefreshRogueDiaryCardReq {
    repeated uint32 refresh_card_list = 13;
}

// CmdId: 8688
message RefreshRogueDiaryCardRsp {
    int32 retcode = 6;
    repeated uint32 rand_card_list = 7;
}

// CmdId: 8702
message RefreshRoguelikeDungeonCardReq {
}

// CmdId: 8844
message RefreshRoguelikeDungeonCardRsp {
    repeated uint32 res_card_list = 14;
    int32 retcode = 5;
}

// CmdId: 6259
message RegionalPlayInfoNotify {
    uint32 play_type = 14;
    bool LJFEFBNPALB = 7;
    repeated RegionalPlayVar var_list = 1;
    bool JEPMEPFCDDA = 8;
    string play_name = 11;
}

message RegionalPlayVar {
    float KDDPKEEIMFC = 15;
    float value = 13;
    uint32 type = 4;
    float ELDGOKNLNPP = 7;
}

message RegionInfo {
    string gateserver_ip = 1;
    uint32 gateserver_port = 2;
    string pay_callback_url = 3;
    string area_type = 7;
    string resource_url = 8;
    string data_url = 9;
    string feedback_url = 10;
    string bulletin_url = 11;
    string resource_url_bak = 12;
    string data_url_bak = 13;
    uint32 client_data_version = 14;
    string handbook_url = 16;
    uint32 client_silence_data_version = 18;
    string client_data_md5 = 19;
    string client_silence_data_md5 = 20;
    ResVersionConfig res_version_config = 22;
    bytes secret_key = 23;
    string official_community_url = 24;
    string client_version_suffix = 26;
    string client_silence_version_suffix = 27;
    bool use_gateserver_domain_name = 28;
    string gateserver_domain_name = 29;
    string user_center_url = 30;
    string account_bind_url = 31;
    string cdkey_url = 32;
    string privacy_policy_url = 33;
    string next_resource_url = 34;
    ResVersionConfig next_res_version_config = 35;
    string game_biz = 36;
}

message RegionSearch {
    RegionSearchState state = 5;
    uint32 region_search_id = 1;
    bool is_entered = 10;
    uint32 progress = 8;
}

// CmdId: 5616
message RegionSearchChangeRegionNotify {
    enum RegionEvent {

        REGION_EVENT_NONE = 0;
        REGION_EVENT_ENTER = 1;
        REGION_EVENT_LEAVE = 2;
    }
    uint32 region_id = 13;
    RegionEvent event = 1;
}

message RegionSearchInfo {
    repeated RegionSearch region_search_list = 9;
    uint32 id = 6;
    bool is_entered = 10;
}

// CmdId: 5609
message RegionSearchNotify {
    repeated RegionSearchInfo region_search_list = 15;
    uint32 uid = 1;
}

message RegionSimpleInfo {
    string name = 1;
    string title = 2;
    string type = 3;
    string dispatch_url = 4;
}

message Reliquary {
    uint32 level = 1;
    uint32 exp = 2;
    uint32 promote_level = 3;
    uint32 main_prop_id = 4;
    repeated uint32 append_prop_id_list = 5;
}

// CmdId: 660
message ReliquaryDecomposeReq {
    repeated uint64 guid_list = 13;
    uint32 config_id = 15;
    uint32 target_count = 6;
}

// CmdId: 680
message ReliquaryDecomposeRsp {
    int32 retcode = 2;
    repeated uint64 guid_list = 1;
}

// CmdId: 605
message ReliquaryFilterStateNotify {
    map<uint32, uint32> reliquary_filter_state_map = 6;
}

// CmdId: 653
message ReliquaryFilterStateSaveNotify {
    map<uint32, uint32> reliquary_filter_state_map = 6;
}

// CmdId: 695
message ReliquaryPromoteReq {
    uint64 target_guid = 4;
    uint64 item_guid = 6;
}

// CmdId: 650
message ReliquaryPromoteRsp {
    uint64 target_reliquary_guid = 6;
    uint32 BDLCGNNPHLJ = 9;
    repeated uint32 FPGACFGKCCK = 10;
    repeated uint32 PHGKJLPHCBI = 7;
    int32 retcode = 13;
    uint32 AKLAKDIDLBE = 14;
}

message ReliquaryRequest {
	uint32 equip_type = 3;
}

message ReliquaryResponse {
	repeated GameplayRecommendationReliquaryMainPropData nbbpegfkpac = 12;
	uint32 equip_type = 15;
}

// CmdId: 651
message ReliquaryUpgradeReq {
    repeated uint64 food_reliquary_guid_list = 9;
    repeated ItemParam item_param_list = 3;
    uint64 target_reliquary_guid = 2;
}

// CmdId: 639
message ReliquaryUpgradeRsp {
    repeated uint32 FPGACFGKCCK = 11;
    uint64 target_reliquary_guid = 8;
    uint32 power_up_rate = 5;
    uint32 cur_level = 15;
    repeated uint32 PHGKJLPHCBI = 3;
    uint32 old_level = 4;
    int32 retcode = 12;
}

// CmdId: 5947
message RemotePlayerWidgetNotify {
    repeated PlayerWidgetInfo player_widget_info_list = 1;
}

// CmdId: 4097
message RemoveBlacklistReq {
    uint32 target_uid = 3;
}

// CmdId: 4081
message RemoveBlacklistRsp {
    uint32 target_uid = 12;
    int32 retcode = 4;
}

// CmdId: 6223
message RemoveCustomDungeonReq {
    uint64 dungeon_guid = 11;
}

// CmdId: 6242
message RemoveCustomDungeonRsp {
    int32 retcode = 10;
    uint64 dungeon_guid = 13;
}

// CmdId: 134
message RemoveRandTaskInfoNotify {
    enum FinishReason {

        DEFAULT = 0;
        CLEAR = 1;
        DISTANCE = 2;
        FINISH = 3;
    }
    uint32 rand_task_id = 4;
    bool is_succ = 11;
    FinishReason reason = 8;
}

// CmdId: 6211
message ReplayCustomDungeonReq {
}

// CmdId: 6240
message ReplayCustomDungeonRsp {
    int32 retcode = 1;
}

// CmdId: 319
message ReportFightAntiCheatNotify {
    uint32 DOKPOLHDEPI = 1;
    uint32 OPFCEOHOBMH = 10;
}

// CmdId: 4145
message ReportTrackingIOInfoNotify {
    string ODNKGDEPIJP = 10;
    string BFMFMEMDFKI = 11;
    string MFCOPCCIKCA = 2;
    string BACNDOEIJAI = 1;
    string IEJAJOEMHHH = 15;
}

// CmdId: 850
message RequestLiveInfoReq {
    uint32 live_id = 10;
}

// CmdId: 848
message RequestLiveInfoRsp {
    int32 retcode = 13;
    string MJDAMPGJDCJ = 3;
    uint32 live_id = 1;
    string DBFCODLGJJB = 10;
}

// CmdId: 8990
message ReserveRogueDiaryAvatarReq {
    repeated RogueDiaryAvatar reserve_avatar_list = 14;
}

// CmdId: 8973
message ReserveRogueDiaryAvatarRsp {
    int32 retcode = 10;
}

// CmdId: 8710
message ResetRogueDiaryPlayReq {
    uint32 stage_id = 3;
}

// CmdId: 8084
message ResetRogueDiaryPlayRsp {
    int32 retcode = 2;
}

message ResinCardData {
    uint32 remain_reward_days = 10;
    uint32 last_daily_reward_time = 7;
    uint32 config_id = 1;
    uint32 expire_time = 13;
}

// CmdId: 4123
message ResinCardDataUpdateNotify {
    uint32 today_start_time = 2;
    repeated ResinCardData card_data_list = 15;
}

// CmdId: 688
message ResinChangeNotify {
    uint32 MBEMEOGMKNM = 4;
    uint32 LADLACBKFMK = 8;
    uint32 cur_value = 6;
}

// CmdId: 22436
message RestartCoinCollectPlaySingleModeReq {
    uint32 level_id = 11;
    uint32 multistage_play_index = 1;
}

// CmdId: 22442
message RestartCoinCollectPlaySingleModeRsp {
    int32 retcode = 5;
    uint32 level_id = 9;
}

// CmdId: 2060
message RestartEffigyChallengeReq {
}

// CmdId: 2106
message RestartEffigyChallengeRsp {
    int32 retcode = 3;
}

// CmdId: 8882
message ResumeRogueDiaryDungeonReq {
    uint32 stage_id = 4;
}

// CmdId: 8402
message ResumeRogueDiaryDungeonRsp {
    int32 retcode = 2;
}

message ResVersionConfig {
    uint32 version = 1;
    bool relogin = 2;
    string md5 = 3;
    string release_total_size = 4;
    string version_suffix = 5;
    string branch = 6;
    string next_script_version = 7;
}

// CmdId: 8290
message RetryCurRogueDiaryDungeonReq {
}

// CmdId: 8959
message RetryCurRogueDiaryDungeonRsp {
    int32 retcode = 1;
}

// CmdId: 5087
message ReunionActivateNotify {
    ReunionBriefInfo reunion_brief_info = 11;
    bool is_activate = 15;
}

message ReunionBriefInfo {
    uint32 first_gift_reward_id = 2;
    uint32 finish_time = 3;
    uint32 start_time = 8;
    bool HBKGGJHLDGI = 9;
    bool GHIPMPFNFJK = 1;
    uint32 first_day_start_time = 11;
    string version = 12;
    ReunionPrivilegeInfo privilege_info = 7;
    repeated MAGCLOOBFPI ACBAPFHKIMM = 6;
    uint32 sign_in_config_id = 13;
    uint32 privilege_id = 14;
    bool JBCJPJECCNA = 4;
    uint32 mission_id = 15;
}

// CmdId: 5059
message ReunionBriefInfoReq {
}

// CmdId: 5066
message ReunionBriefInfoRsp {
    ReunionBriefInfo reunion_brief_info = 2;
    int32 retcode = 4;
    bool is_activate = 7;
}

// CmdId: 5062
message ReunionDailyRefreshNotify {
    ReunionBriefInfo reunion_brief_info = 2;
}

message ReunionMissionInfo {
    uint32 mission_id = 1;
    bool is_taken_reward = 4;
    repeated ReunionWatcherInfo cur_day_watcher_list = 12;
    uint32 next_refresh_time = 6;
    repeated bool is_taken_reward_list = 8;
    bool is_finished = 9;
    repeated ReunionWatcherInfo watcher_list = 2;
    uint32 cur_score = 13;
}

// CmdId: 5098
message ReunionPrivilegeChangeNotify {
    ReunionPrivilegeInfo privilege_info = 15;
}

message ReunionPrivilegeInfo {
    uint32 privilege_id = 14;
    uint32 JHDBADNLDEJ = 5;
    uint32 BPDNAIHEOHE = 13;
}

// CmdId: 5093
message ReunionSettleNotify {
}

message ReunionSignInInfo {
    uint32 GANAIGKNLOD = 7;
    repeated uint32 reward_day_list = 9;
    uint32 config_id = 13;
    uint32 ODCICMMHNOH = 10;
}

message ReunionWatcherInfo {
    uint32 cur_progress = 1;
    uint32 watcher_id = 2;
    uint32 reward_unlock_time = 3;
    uint32 total_progress = 13;
    bool is_taken_reward = 10;
}

message Reward {
    uint32 reward_id = 1;
    repeated ItemParam item_list = 2;
}

// CmdId: 65
message RobotPushPlayerDataNotify {
    bytes bin = 8;
}

message RockBoardExploreDetailInfo {
    repeated RockBoardExploreStageData stage_data_list = 6;
}

message RockBoardExploreStageData {
    uint32 open_time = 13;
    bool is_open = 9;
    uint32 stage_id = 11;
    bool is_finish = 1;
}

message RogueAvatarInfo {
    bool is_onstage = 7;
    uint32 avatar_id = 15;
    bool is_alive = 14;
}

message RogueCellInfo {
    uint32 cell_config_id = 5;
    uint32 dungeon_id = 14;
    uint32 cell_type = 13;
    uint32 cell_id = 12;
    RogueCellState state = 4;
}

// CmdId: 8385
message RogueCellUpdateNotify {
    RogueCellInfo cell_info = 11;
}

message RogueDiaryActivityDetailInfo {
    bool is_have_progress = 3;
    bool is_content_closed = 8;
    RogueDiaryProgress cur_progress = 2;
    repeated RogueDiaryStageInfo stage_list = 1;
}

message RogueDiaryAvatar {
    repeated RogueDiaryAvatarDisableStatus disable_status_list = 13;
    uint32 tired_round = 10;
    ActivityDungeonAvatar avatar = 1;
    uint32 level = 6;
}

// CmdId: 8629
message RogueDiaryCoinAddNotify {
    uint32 num = 2;
}

// CmdId: 8967
message RogueDiaryDungeonInfoNotify {
    uint32 coin = 14;
    repeated RogueDiaryRoomInfo room_list = 15;
    uint32 difficulty = 13;
    uint32 dungeon_id = 3;
    uint32 cur_round = 5;
    uint32 stage_id = 4;
    uint32 KKJMDCAINKD = 10;
    repeated uint32 GGBGBBGFCBH = 11;
    repeated uint32 GOPALHMFHDE = 1;
    uint32 time = 8;
}

message RogueDiaryDungeonRecord {
    uint32 finish_time = 4;
    uint32 difficulty = 14;
    uint32 max_round = 3;
    bool is_finish = 12;
}

// CmdId: 8516
message RogueDiaryDungeonSettleNotify {
    bool is_finish = 1;
    uint32 cur_round = 9;
    uint32 explore_time = 10;
}

message RogueDiaryProgress {
    bool is_enter_dungeon = 4;
    uint32 stage_id = 1;
    repeated uint32 optional_card_list = 5;
    uint32 difficulty = 3;
    uint32 cur_round = 8;
}

// CmdId: 8848
message RogueDiaryRepairInfoNotify {
    repeated RogueDiaryAvatar trial_avatar_list = 8;
    repeated uint32 rand_card_list = 3;
    repeated RogueDiaryAvatar avatar_list = 12;
    repeated uint32 select_card_list = 15;
    repeated uint32 chosen_card_list = 5;
    repeated RogueDiaryAvatar select_avatar_list = 10;
    repeated RogueDiaryRoomInfo room_list = 7;
    uint32 stage_id = 11;
}

// CmdId: 8770
message RogueDiaryReviveAvatarReq {
    RogueDiaryAvatar revive_avatar = 2;
}

// CmdId: 8841
message RogueDiaryReviveAvatarRsp {
    int32 retcode = 12;
}

message RogueDiaryRoomInfo {
    uint32 config_id = 10;
    repeated Uint32Pair monster_list = 8;
    bool is_boss = 4;
}

message RogueDiaryStageInfo {
    uint32 stage_id = 8;
    bool is_have_try = 4;
    RogueDiaryDungeonRecord best_record = 14;
}

// CmdId: 8927
message RogueDiaryTiredAvatarNotify {
    uint32 KJHIELEECFE = 4;
    repeated RogueDiaryAvatar optianal_tired_avatar_list = 14;
    uint32 DAFLPOLAOLI = 10;
    bool is_need_show = 11;
}

// CmdId: 8229
message RogueDungeonPlayerCellChangeNotify {
    uint32 cell_id = 2;
    uint32 old_cell_id = 15;
}

message RogueEffectRecord {
    uint32 source_id = 7;
    repeated uint32 extra_param_list = 8;
    uint32 count = 13;
    bool is_new = 15;
}

// CmdId: 8965
message RogueFinishRepairReq {
    repeated RogueDiaryAvatar chosen_avatar_list = 3;
    repeated uint32 chosen_card_list = 5;
}

// CmdId: 8494
message RogueFinishRepairRsp {
    int32 retcode = 5;
}

// CmdId: 8236
message RogueHealAvatarsReq {
    uint32 dungeon_id = 14;
    uint32 cell_id = 5;
}

// CmdId: 8596
message RogueHealAvatarsRsp {
    int32 retcode = 6;
    uint32 cell_id = 2;
    uint32 dungeon_id = 10;
}

// CmdId: 8649
message RoguelikeCardGachaNotify {
    repeated uint32 card_list = 15;
    bool is_can_refresh = 11;
}

message RoguelikeDungeonActivityDetailInfo {
    repeated uint32 rune_list = 13;
    bool is_content_closed = 2;
    uint32 content_close_time = 1;
    repeated RogueStageInfo stage_list = 14;
    repeated RoguelikeShikigamiRecord shikigami_list = 3;
    repeated uint32 equipped_rune_list = 7;
}

message RoguelikeDungeonSettleInfo {
    uint32 stage_id = 14;
    bool AHJPBEPBKLC = 11;
    uint32 JNHIANIADPK = 12;
    bool JMOLAENOAFO = 2;
    map<uint32, RoguelikeSettleCoinInfo> finished_challenge_cell_num_map = 10;
    uint32 CPLMDBMFONL = 7;
    uint32 cur_level = 1;
}

// CmdId: 8729
message RoguelikeEffectDataNotify {
    repeated RogueEffectRecord curse_list = 8;
    repeated RogueEffectRecord card_list = 2;
}

// CmdId: 8839
message RoguelikeEffectViewReq {
    repeated uint32 KLHGFELAILA = 8;
    repeated uint32 MKFIGOJPBGP = 1;
}

// CmdId: 8593
message RoguelikeEffectViewRsp {
    int32 retcode = 4;
}

message RoguelikeGadgetInfo {
    uint32 cell_config_id = 1;
    uint32 cell_type = 2;
    uint32 cell_state = 3;
    uint32 cell_id = 4;
}

// CmdId: 8215
message RoguelikeGiveUpReq {
    uint32 stage_id = 4;
}

// CmdId: 8451
message RoguelikeGiveUpRsp {
    int32 retcode = 4;
    uint32 stage_id = 9;
    oneof info {
        RoguelikeDungeonSettleInfo settle_info = 10;
    }
}

// CmdId: 8496
message RoguelikeMistClearNotify {
}

// CmdId: 8473
message RoguelikeRefreshCardCostUpdateNotify {
    uint32 item_count = 10;
    uint32 item_id = 3;
}

// CmdId: 8322
message RoguelikeResourceBonusPropUpdateNotify {
    float bonus_resource_prop = 12;
}

message RoguelikeRuneRecord {
    uint32 FNOMMOAFCHG = 11;
    uint32 rune_id = 10;
    uint32 EGIKJBIOOCF = 15;
}

// CmdId: 8363
message RoguelikeRuneRecordUpdateNotify {
    repeated RoguelikeRuneRecord rune_record_list = 1;
}

// CmdId: 8438
message RoguelikeSelectAvatarAndEnterDungeonReq {
    repeated uint64 backstage_avatar_guid_list = 12;
    uint32 stage_id = 14;
    repeated uint64 onstage_avatar_guid_list = 1;
}

// CmdId: 8945
message RoguelikeSelectAvatarAndEnterDungeonRsp {
    int32 retcode = 5;
    uint32 stage_id = 8;
}

message RoguelikeSettleCoinInfo {
    uint32 OAHOGNOCKDJ = 6;
    uint32 CBOFMPMNLEL = 7;
    uint32 MFMAKKFFAHP = 8;
}

message RoguelikeShikigamiRecord {
    uint32 id = 4;
    uint32 level = 11;
}

// CmdId: 8803
message RoguelikeTakeStageFirstPassRewardReq {
    uint32 stage_id = 9;
}

// CmdId: 8271
message RoguelikeTakeStageFirstPassRewardRsp {
    int32 retcode = 4;
    uint32 stage_id = 6;
}

// CmdId: 8203
message RogueResumeDungeonReq {
    uint32 stage_id = 11;
}

// CmdId: 8340
message RogueResumeDungeonRsp {
    int32 retcode = 6;
    uint32 stage_id = 11;
}

message RogueShowAvatarTeamInfo {
    repeated RogueAvatarInfo avatar_list = 12;
}

message RogueStageInfo {
    uint32 EIMBKPHMPEH = 3;
    uint32 IPDPBFFPPBG = 1489;
    uint32 NFAGHAIMDKI = 15;
    bool AJFBLDPHGDD = 12;
    uint32 NILFBNCBADF = 658;
    bool NHKJHKLOPDP = 14;
    uint32 cur_level = 10;
    RogueShowAvatarTeamInfo avatar_team = 13;
    bool is_taken_reward = 1;
    bool is_passed = 4;
    repeated RoguelikeRuneRecord rune_record_list = 8;
    uint32 LOJJNAJBAFO = 11;
    bool is_open = 9;
    uint32 stage_id = 5;
    uint32 DFAFANNFGMG = 2;
}

// CmdId: 8165
message RogueSwitchAvatarReq {
    uint64 cur_avatar_guid = 2;
    uint32 cell_id = 4;
    uint32 dungeon_id = 15;
    repeated uint64 onstage_avatar_guid_list = 3;
}

// CmdId: 8578
message RogueSwitchAvatarRsp {
    int32 retcode = 15;
    repeated uint64 onstage_avatar_guid_list = 4;
    repeated uint64 backstage_avatar_guid_list = 13;
    uint64 cur_avatar_guid = 12;
    uint32 dungeon_id = 6;
    uint32 cell_id = 7;
}

message Route {
    repeated RoutePoint route_points = 1;
    uint32 route_type = 2;
}

message RoutePoint {
    Vector position = 1;
    float arrive_range = 2;
    bool has_reach_event = 3;
    oneof move_params {
        float velocity = 11;
        float time = 12;
    }
    oneof rotate_params {
        Vector rotation = 21;
        MathQuaternion rotation_speed = 22;
        MathQuaternion axis_speed = 23;
    }
}

message RoutePointChangeInfo {
    float target_velocity = 5;
    uint32 point_index = 7;
    float wait_time = 15;
}

message SalesmanActivityDetailInfo {
    uint32 GDAEGLIFGAN = 3;
    bool MCNJKPCOJFE = 12;
    uint32 PDIIBHEPHAF = 6;
    SalesmanStatusType status = 11;
    uint32 day_reward_id = 10;
    uint32 day_index = 14;
    uint32 GMLNJIFOGME = 4;
    uint32 EMPKGACAAOK = 2;
    bool OHEICLDPHBF = 9;
    map<uint32, uint32> selected_reward_id_map = 8;
}

// CmdId: 2120
message SalesmanDeliverItemReq {
    uint32 schedule_id = 13;
}

// CmdId: 2190
message SalesmanDeliverItemRsp {
    uint32 schedule_id = 7;
    int32 retcode = 14;
}

// CmdId: 2018
message SalesmanTakeRewardReq {
    uint32 schedule_id = 2;
    uint32 position = 3;
}

// CmdId: 2159
message SalesmanTakeRewardRsp {
    int32 retcode = 6;
    uint32 schedule_id = 9;
    uint32 reward_id = 15;
    uint32 position = 2;
}

// CmdId: 2073
message SalesmanTakeSpecialRewardReq {
    uint32 schedule_id = 3;
}

// CmdId: 2162
message SalesmanTakeSpecialRewardRsp {
    uint32 schedule_id = 15;
    int32 retcode = 5;
}

message SalvageBundleChallengeInfo {
    repeated uint32 finished_bundle_list = 10;
}

message SalvageChallengeInfo {
    uint32 challenge_type = 1;
    bool is_unlock = 11;
    oneof challenge_detail {
        SalvageBundleChallengeInfo bundle_info = 4;
        SalvageScoreChallengeInfo score_challenge_info = 5;
        uint32 boss_challenge_id = 6;
    }
}

message SalvageEscortGallerySettleInfo {
    uint32 time_remain = 8;
    SalvageEscortStopReason reason = 9;
}

// CmdId: 8178
message SalvageEscortRestartReq {
    uint32 gallery_id = 1;
}

// CmdId: 8053
message SalvageEscortRestartRsp {
    int32 retcode = 3;
    uint32 gallery_id = 13;
}

message SalvageEscortSettleInfo {
    bool is_new_record = 6;
    SalvageEscortGallerySettleInfo settle_info = 13;
}

// CmdId: 8856
message SalvageEscortSettleNotify {
    uint32 gallery_id = 8;
    SalvageEscortSettleInfo settle_info = 12;
}

message SalvagePreventGallerySettleInfo {
    uint32 monster_count = 14;
    uint32 time_remain = 7;
    SalvagePreventStopReason reason = 13;
    uint32 final_score = 11;
}

// CmdId: 8411
message SalvagePreventRestartReq {
    uint32 gallery_id = 4;
}

// CmdId: 8807
message SalvagePreventRestartRsp {
    uint32 gallery_id = 15;
    int32 retcode = 5;
}

message SalvagePreventSettleInfo {
    bool is_new_record = 1;
    SalvagePreventGallerySettleInfo settle_info = 15;
}

// CmdId: 8120
message SalvagePreventSettleNotify {
    uint32 gallery_id = 7;
    SalvagePreventSettleInfo settle_info = 1;
}

message SalvageScoreChallengeInfo {
    uint32 max_score = 4;
    uint32 salvage_challenge_id = 10;
}

message SalvageStageInfo {
    uint32 stage_id = 4;
    bool is_open = 15;
    repeated SalvageChallengeInfo challenge_info_list = 10;
}

message SandwormCannonDetailInfo {
    repeated LCMFDAHJIBK JAAFEFLDPLF = 2;
}

// CmdId: 1962
message SaveCoopDialogReq {
    uint32 NKGPOHKHJAG = 9;
    uint32 HCBJHDCMKKN = 10;
}

// CmdId: 1969
message SaveCoopDialogRsp {
    uint32 NKGPOHKHJAG = 2;
    int32 retcode = 1;
    uint32 HCBJHDCMKKN = 13;
}

// CmdId: 6217
message SaveCustomDungeonRoomReq {
    CustomDungeonSetting setting = 6;
    bool is_update_setting = 14;
    CustomDungeonRoom custom_dungeon_room = 4;
}

// CmdId: 6249
message SaveCustomDungeonRoomRsp {
    int32 retcode = 4;
    repeated CustomDungeonBlock error_block_list = 5;
    uint32 room_id = 14;
}

// CmdId: 1967
message SaveMainCoopReq {
    map<uint32, int32> KINJAIJMLPM = 12;
    uint32 save_point_id = 5;
    uint32 id = 15;
    map<uint32, int32> JFNGFEFMHMM = 11;
    uint32 self_confidence = 1;
}

// CmdId: 1999
message SaveMainCoopRsp {
    repeated uint32 save_point_id_list = 5;
    int32 retcode = 6;
    uint32 id = 8;
}

// CmdId: 6345
message SaveUgcReq {
    UgcType ugc_type = 12;
    uint32 schedule_id = 2;
    oneof record {
        UgcMusicRecord music_record = 11;
    }
    oneof brief {
        UgcMusicBriefInfo music_brief_info = 555;
    }
}

// CmdId: 6322
message SaveUgcRsp {
    int32 retcode = 9;
    UgcType ugc_type = 2;
    uint64 ugc_guid = 11;
    bool HCPNAKKHMCK = 1;
}

// CmdId: 239
message SceneAreaUnlockNotify {
    repeated uint32 area_list = 15;
    uint32 scene_id = 14;
}

// CmdId: 249
message SceneAreaWeatherNotify {
    float trans_duration = 3;
    map<uint32, string> weather_value_map = 13;
    uint32 weather_area_id = 5;
    uint32 climate_type = 2;
    uint32 weather_gadget_id = 6;
}

// CmdId: 3231
message SceneAudioNotify {
    int32 type = 9;
    uint32 source_uid = 11;
    repeated float param2 = 6;
    repeated string param3 = 5;
    repeated uint32 param1 = 8;
}

message SceneAvatarInfo {
    uint32 uid = 1;
    uint32 avatar_id = 2;
    uint64 guid = 3;
    uint32 peer_id = 4;
    repeated uint32 team_resonance_list = 5;
    uint32 skill_depot_id = 6;
    repeated uint32 talent_id_list = 7;
    SceneWeaponInfo weapon = 8;
    repeated SceneReliquaryInfo reliquary_list = 9;
    uint32 core_proud_skill_level = 11;
    repeated uint32 inherent_proud_skill_list = 12;
    map<uint32, uint32> skill_level_map = 13;
    map<uint32, uint32> proud_skill_extra_level_map = 14;
    repeated ServerBuff server_buff_list = 15;
    repeated uint32 equip_id_list = 16;
    uint32 wearing_flycloak_id = 17;
    uint32 born_time = 18;
    uint32 costume_id = 19;
    CurVehicleInfo cur_vehicle_info = 20;
    AvatarExcelInfo excel_info = 21;
    uint32 anim_hash = 22;
}

// CmdId: 263
message SceneAvatarStaminaStepReq {
    bool use_client_rot = 13;
    Vector rot = 6;
}

// CmdId: 259
message SceneAvatarStaminaStepRsp {
    bool use_client_rot = 9;
    Vector rot = 12;
    int32 retcode = 11;
}

// CmdId: 248
message SceneCreateEntityReq {
    bool is_destroy_when_disconnect = 9;
    CreateReason reason = 5;
    CreateEntityInfo entity = 2;
}

// CmdId: 298
message SceneCreateEntityRsp {
    int32 retcode = 4;
    CreateEntityInfo entity = 14;
    uint32 entity_id = 3;
}

// CmdId: 3320
message SceneDataNotify {
    repeated string level_config_name_list = 15;
    repeated uint32 scene_tag_id_list = 10;
}

// CmdId: 297
message SceneDestroyEntityReq {
    uint32 entity_id = 2;
}

// CmdId: 281
message SceneDestroyEntityRsp {
    uint32 entity_id = 4;
    int32 retcode = 15;
}

// CmdId: 3357
message SceneEntitiesMoveCombineNotify {
    repeated EntityMoveInfo entity_move_info_list = 5;
}

// CmdId: 255
message SceneEntitiesMovesReq {
    repeated EntityMoveInfo entity_move_info_list = 3;
}

// CmdId: 266
message SceneEntitiesMovesRsp {
    repeated EntityMoveFailInfo entity_move_fail_info_list = 4;
}

message SceneEntityAiInfo {
    bool is_ai_open = 1;
    Vector born_pos = 2;
    map<uint32, uint32> skill_cd_map = 3;
    ServantInfo servant_info = 4;
    map<uint32, uint32> ai_threat_map = 5;
    map<uint32, uint32> skill_group_cd_map = 6;
    uint32 cur_tactic = 7;
    bool IGINBLKLKCF = 8;
}

// CmdId: 256
message SceneEntityAppearNotify {
    VisionType appear_type = 13;
    repeated SceneEntityInfo entity_list = 6;
    uint32 param = 15;
}

// CmdId: 241
message SceneEntityDisappearNotify {
    VisionType disappear_type = 3;
    uint32 param = 5;
    repeated uint32 entity_list = 4;
}

// CmdId: 295
message SceneEntityDrownReq {
    uint32 entity_id = 8;
}

// CmdId: 250
message SceneEntityDrownRsp {
    uint32 entity_id = 4;
    int32 retcode = 11;
}

message SceneEntityInfo {
    ProtEntityType entity_type = 1;
    uint32 entity_id = 2;
    string name = 3;
    MotionInfo motion_info = 4;
    repeated PropPair prop_list = 5;
    repeated FightPropPair fight_prop_list = 6;
    uint32 life_state = 7;
    repeated AnimatorParameterValueInfoPair animator_para_list = 9;
    uint32 last_move_scene_time_ms = 17;
    uint32 last_move_reliable_seq = 18;
    EntityClientData entity_client_data = 19;
    repeated EntityEnvironmentInfo entity_environment_info_list = 20;
    EntityAuthorityInfo entity_authority_info = 21;
    repeated string tag_list = 22;
    repeated ServerBuff server_buff_list = 23;
    oneof entity {
        SceneAvatarInfo avatar = 10;
        SceneMonsterInfo monster = 11;
        SceneNpcInfo npc = 12;
        SceneGadgetInfo gadget = 13;
    }
}

// CmdId: 278
message SceneEntityMoveNotify {
    MotionInfo motion_info = 3;
    uint32 reliable_seq = 1;
    uint32 scene_time = 14;
    uint32 entity_id = 15;
}

// CmdId: 272
message SceneEntityMoveReq {
    MotionInfo motion_info = 13;
    uint32 entity_id = 9;
    uint32 reliable_seq = 6;
    uint32 scene_time = 5;
}

// CmdId: 292
message SceneEntityMoveRsp {
    uint32 scene_time = 2;
    int32 retcode = 8;
    uint32 reliable_seq = 9;
    MotionInfo fail_motion = 15;
    uint32 entity_id = 14;
}

// CmdId: 3060
message SceneEntityUpdateNotify {
    uint32 param = 2;
    repeated SceneEntityInfo entity_list = 15;
    VisionType appear_type = 10;
}

message SceneFishInfo {
    uint32 fish_id = 1;
    uint32 fish_pool_entity_id = 2;
    Vector fish_pool_pos = 3;
    uint32 fish_pool_gadget_id = 4;
    uint32 last_shock_time = 5;
}

// CmdId: 235
message SceneForceLockNotify {
    repeated uint32 force_id_list = 11;
}

// CmdId: 270
message SceneForceUnlockNotify {
    bool is_add = 2;
    repeated uint32 force_id_list = 7;
}

message SceneGadgetInfo {
    uint32 gadget_id = 1;
    uint32 group_id = 2;
    uint32 config_id = 3;
    uint32 owner_entity_id = 4;
    GadgetBornType born_type = 5;
    uint32 gadget_state = 6;
    uint32 gadget_type = 7;
    bool is_show_cutscene = 8;
    uint32 authority_peer_id = 9;
    bool is_enable_interact = 10;
    uint32 interact_id = 11;
    uint32 mark_flag = 21;
    uint32 prop_owner_entity_id = 22;
    PlatformInfo platform = 23;
    repeated uint32 interact_uid_list = 24;
    uint32 draft_id = 25;
    uint32 gadget_talk_state = 26;
    GadgetPlayInfo play_info = 100;
    oneof content {
        Item trifle_item = 12;
        GatherGadgetInfo gather_gadget = 13;
        WorktopInfo worktop = 14;
        ClientGadgetInfo client_gadget = 15;
        WeatherInfo weather = 17;
        AbilityGadgetInfo ability_gadget = 18;
        StatueGadgetInfo statue_gadget = 19;
        BossChestInfo boss_chest = 20;
        BlossomChestInfo blossom_chest = 41;
        MpPlayRewardInfo mp_play_reward = 42;
        GadgetGeneralRewardInfo general_reward = 43;
        OfferingInfo offering_info = 44;
        FoundationInfo foundation_info = 45;
        VehicleInfo vehicle_info = 46;
        EchoShellInfo shell_info = 47;
        ScreenInfo screen_info = 48;
        FishPoolInfo fish_pool_info = 59;
        CustomGadgetTreeInfo custom_gadget_tree_info = 60;
        RoguelikeGadgetInfo roguelike_gadget_info = 61;
        NightCrowGadgetInfo night_crow_gadget_info = 62;
        DeshretObeliskGadgetInfo deshret_obelisk_gadget_info = 63;
        CoinCollectOperatorInfo coin_collect_operator_info = 64;
    }
}

message SceneGalleryAkaFesArchaeologyInfo {
    uint32 EBFAEGIJHJK = 5;
    uint32 JHDBADNLDEJ = 12;
}

message SceneGalleryAkaFesRhythmInfo {
    bool OBIIGFOOFIK = 5;
    string transaction = 1;
}

message SceneGalleryBalloonInfo {
    map<uint32, BalloonPlayerInfo> scene_player_balloon_info_map = 13;
    uint32 end_time = 14;
}

message SceneGalleryBoatMultiInfo {
    repeated LanV3BoatMultiPlayerData JLDGJOPFALG = 1;
}

message SceneGalleryBounceConjuringInfo {
    uint32 total_destroyed_machine_count = 14;
    uint32 total_score = 13;
}

message SceneGalleryBrokenFloorInfo {
    uint32 end_time = 7;
    map<uint32, uint32> fall_count_map = 15;
}

message SceneGalleryBulletInfo {
    uint32 end_time = 1;
    map<uint32, uint32> hit_count_map = 14;
}

message SceneGalleryBuoyantCombatInfo {
    uint32 score = 11;
    uint32 kill_monster_count = 2;
    uint32 kill_special_monster_count = 9;
}

message SceneGalleryCharAmusementInfo {
    uint32 max_score = 8;
    bool is_last_level = 15;
    bool is_finish = 2;
    bool is_success = 13;
    uint32 cur_score = 14;
}

message SceneGalleryCoinCollectInfo {
    uint32 DKAPCHHJPCM = 9;
    uint32 EEBBADCOGNG = 3;
}

message SceneGalleryCrystalLinkInfo {
    uint32 score = 11;
}

message SceneGalleryDuelHeartInfo {
    uint32 difficulty = 14;
}

message SceneGalleryEffigyChallengeV2Info {
    uint32 NCABJMDBENP = 14;
    uint32 HHMFOEGOJMP = 9;
    uint32 HKGMKGOGFEM = 8;
    uint32 INLLPJAEMNP = 10;
    uint32 NCMKJCNLDHM = 4;
}

message SceneGalleryFallInfo {
    map<uint32, FallPlayerInfo> scene_player_fall_info_map = 10;
    uint32 end_time = 11;
}

message SceneGalleryFlowerInfo {
    uint32 end_time = 14;
    uint32 target_score = 15;
    uint32 cur_score = 7;
}

message SceneGalleryFungusFighterCaptureInfo {
    bool is_hide_progress = 2;
}

message SceneGalleryFungusFighterTrainingInfo {
    uint32 buff_id = 3;
    uint32 MBCGPKHEHPP = 4;
    uint32 CNODBENOPKK = 11;
    uint32 CNOCKIIKIKI = 8;
    uint32 NOIAIMOONIB = 1;
    uint32 GLCGHJKHFEI = 10;
    uint32 OMILDIGCPAJ = 14;
}

message SceneGalleryFungusFighterV2Info {
    message NEKANOJJFGN {
        uint64 BHHFMKMEFOA = 10;
        bool is_alive = 11;
        uint32 fungus_id = 2;
    }
    uint64 NBEIMJIGHIN = 10;
    uint32 PFEJLBFPMGF = 13;
    string transaction = 11;
    uint32 HMEKPCPLCDG = 8;
    float LOMKEBDNAGJ = 9;
    repeated NEKANOJJFGN LPAONJMNHCP = 7;
}

message SceneGalleryHandballInfo {
    bool is_have_ball = 13;
    PlaceInfo ball_place_info = 3;
}

message SceneGalleryHideAndSeekInfo {
    repeated uint32 GCNNADABPLG = 10;
    repeated uint32 GIDIOJBKDKH = 13;
}

message SceneGalleryHomeBalloonInfo {
    uint32 score = 11;
}

message SceneGalleryHomeSeekFurnitureInfo {
    uint32 NJHPFPPGMHP = 4;
    map<uint32, uint32> player_score_map = 15;
    uint32 FOLBDGFAJHK = 14;
    uint32 GPJDOAEHFGN = 8;
}

message SceneGalleryInfo {
    uint32 pre_start_end_time = 15;
    JEIFKDDEDEE HEHPGNJDOMH = 3;
    uint32 gallery_id = 10;
    uint32 start_time = 2;
    GalleryStageType stage = 1;
    uint32 player_count = 7;
    uint32 owner_uid = 6;
    uint32 end_time = 14;
    oneof info {
        SceneGalleryBalloonInfo balloon_info = 12;
        SceneGalleryFallInfo fall_info = 8;
        SceneGalleryFlowerInfo flower_info = 9;
        SceneGalleryBulletInfo bullet_info = 4;
        SceneGalleryBrokenFloorInfo broken_floor_info = 13;
        SceneGalleryHideAndSeekInfo hide_and_seek_info = 11;
        SceneGalleryBuoyantCombatInfo buoyant_combat_info = 1354;
        SceneGalleryBounceConjuringInfo bounce_conjuring_info = 1430;
        SceneGalleryHandballInfo handball_info = 1865;
        SceneGallerySumoInfo sumo_info = 605;
        SceneGallerySalvagePreventInfo salvage_prevent_info = 627;
        SceneGallerySalvageEscortInfo salvage_escort_info = 1254;
        SceneGalleryHomeBalloonInfo home_balloon_info = 913;
        SceneGalleryCrystalLinkInfo crystal_link_info = 1437;
        SceneGalleryIrodoriMasterInfo irodori_master_info = 644;
        SceneGalleryLuminanceStoneChallengeInfo luminance_stone_challenge_info = 284;
        SceneGalleryHomeSeekFurnitureInfo home_seek_furniture_info = 765;
        SceneGalleryIslandPartyDownHillInfo island_party_down_hill_info = 1263;
        SceneGallerySummerTimeV2BoatInfo summer_time_v2_boat_info = 1395;
        SceneGalleryIslandPartyRaftInfo island_party_raft_info = 1119;
        SceneGalleryIslandPartySailInfo island_party_sail_info = 2031;
        SceneGalleryInstaleSprayInfo instable_spray_info = 628;
        SceneGalleryMuqadasPotionInfo muqadas_potion_info = 163;
        SceneGalleryTreasureSeelieInfo treasure_seelie_info = 1960;
        SceneGalleryVintageHuntingInfo vintage_hunting_info = 380;
        SceneGalleryWindFieldInfo wind_field_info = 817;
        SceneGalleryFungusFighterTrainingInfo fungus_fighter_training_info = 279;
        SceneGalleryEffigyChallengeV2Info effigy_challenge_info = 645;
        SceneGalleryFungusFighterCaptureInfo fungus_fighter_capture_info = 435;
        SceneGalleryCharAmusementInfo char_amusement_info = 57;
        SceneGalleryCoinCollectInfo coin_collect_info = 2039;
        SceneGalleryTeamChainInfo team_chain_info = 1982;
        SceneGalleryDuelHeartInfo duel_heart_info = 1058;
        SceneGalleryBoatMultiInfo boat_multi_info = 1169;
        SceneGalleryPacmanInfo pacman_info = 766;
        SceneGalleryFungusFighterV2Info fungus_fighter_v2_info = 1224;
        SceneGalleryAkaFesArchaeologyInfo aka_fes_archaeology_info = 265;
        SceneGallerySandwormInfo sandworm_info = 1776;
        SceneGallerySorushTrialPhotoMatchInfo sorush_trial_photo_match_info = 611;
        SceneGallerySorushTrialHitmanInfo sorush_trial_hitman_info = 906;
        SceneGalleryAkaFesRhythmInfo aka_fes_rhythm_info = 1183;
    }
}

// CmdId: 5599
message SceneGalleryInfoNotify {
    SceneGalleryInfo gallery_info = 15;
}

message SceneGalleryInstableSprayBuffInfo {
    uint64 JAADBLKABKF = 12;
    uint64 PEPAMAPELFG = 11;
    uint32 buff_id = 14;
}

message SceneGalleryInstaleSprayInfo {
    uint32 score = 1;
    repeated SceneGalleryInstableSprayBuffInfo buff_info_list = 3;
}

message SceneGalleryIrodoriMasterInfo {
    bool is_cg_viewed = 5;
    uint32 difficulty = 6;
    uint32 level_id = 9;
}

message SceneGalleryIslandPartyDownHillInfo {
    GalleryStartSource start_source = 5;
    uint32 max_kill_monster_count = 11;
    uint32 coin = 2;
    uint32 total_kill_monster_count = 8;
}

message SceneGalleryIslandPartyRaftInfo {
    uint32 coin = 13;
    uint32 DPKCLCKNEOF = 6;
    GalleryStartSource start_source = 9;
    uint32 CDJPPMFEPHL = 12;
    uint32 FKCCBPJENFJ = 5;
    uint32 point_id = 3;
}

message SceneGalleryIslandPartySailInfo {
    GalleryStartSource start_source = 1;
    uint32 BEBDPAPHFMM = 9;
    uint32 MEIDOEMPBOH = 3;
    IslandPartySailStage stage = 11;
    uint32 FHFHIGBGEBG = 6;
    uint32 ABOELDEOICA = 2;
    uint32 coin = 12;
}

message SceneGalleryLuminanceStoneChallengeInfo {
    uint32 clean_mud_count = 13;
    uint32 kill_monster_count = 2;
    uint32 score = 1;
    uint32 kill_special_monster_count = 8;
}

message SceneGalleryMuqadasPotionInfo {
    uint32 capture_weakness_count = 10;
    uint32 FEBNFKEKJIF = 2;
    uint32 KNKAGODLFEH = 12;
    uint32 score = 15;
}

message SceneGalleryPacmanInfo {
    uint32 BKECHEIMCGP = 14;
    uint32 cur_score = 5;
    uint32 start_time = 3;
    uint32 FJBKBMHJMMM = 15;
}

message SceneGalleryProgressInfo {
    uint32 progress = 11;
    string key = 5;
    repeated uint32 progress_stage_list = 6;
    uint32 ui_form = 7;
}

message SceneGallerySalvageEscortInfo {
    uint32 GKOBEKMBGBO = 14;
    uint32 monster_count = 12;
    uint32 FHOMEMBDLIM = 13;
    uint32 CNODBENOPKK = 11;
}

message SceneGallerySalvagePreventInfo {
    uint32 monster_count = 5;
}

message SceneGallerySandwormInfo {
    uint32 DIOMMEDEGJI = 3;
    uint32 energy = 14;
    KAGFENNNCEA ODCPDKBPANB = 9;
    bool NJGKBGOPNKD = 1;
}

message SceneGallerySorushTrialHitmanInfo {
    uint64 CMDIOKFHHKF = 1;
}

message SceneGallerySorushTrialPhotoMatchInfo {
    bool KCMBHJJNDBI = 13;
    bool DOFKELOBBGK = 2;
}

message SceneGallerySummerTimeV2BoatInfo {
    uint32 param3 = 7;
    uint32 param1 = 14;
    uint32 param2 = 15;
    uint32 used_time = 9;
}

message SceneGallerySumoInfo {
    uint32 EEPIFMDOOHM = 11;
    uint32 score = 2;
    uint32 KFACNCAIMAM = 12;
}

message SceneGalleryTeamChainInfo {
    uint32 NCABJMDBENP = 14;
    uint32 NCHHCEPECEO = 12;
    uint32 BIFFDDIOLOP = 4;
    uint32 HNAMFOFOMBN = 6;
    uint32 HKGMKGOGFEM = 10;
}

message SceneGalleryTreasureSeelieInfo {
    uint32 goal = 15;
    uint32 progress = 13;
}

message SceneGalleryVintageHuntingInfo {
    uint32 stage_id = 6;
    oneof info {
        VintageHuntingFirstStageInfo first_stage_info = 12;
        VintageHuntingSecondStageInfo second_stage_info = 13;
        VintageHuntingThirdStageInfo third_stage_info = 7;
    }
}

// CmdId: 24566
message SceneGalleryVintageHuntingSettleNotify {
    bool is_new_record = 2;
    uint32 stage_id = 15;
    uint32 CIGKIGPIBJO = 13;
    uint32 CCCLEOMNEBM = 11;
    bool has_new_watcher = 3;
    oneof info {
        VintageHuntingFirstStageSettleInfo first_stage_info = 9;
        VintageHuntingSecondStageSettleInfo second_stage_info = 8;
        VintageHuntingThirdStageSettleInfo third_stage_info = 10;
    }
}

message SceneGalleryWindFieldInfo {
    uint32 FJDAJPLIFIG = 10;
    uint32 BKIIHPOAPNA = 13;
    uint32 HBEFCMIOHCN = 6;
    uint32 FKLLFAPMCOB = 3;
    uint32 BKECHEIMCGP = 4;
    uint32 BKLMMCLHEHK = 2;
    uint32 FJBKBMHJMMM = 12;
    uint32 DIFGKMHHIMF = 9;
}

// CmdId: 276
message SceneInitFinishReq {
    uint32 enter_scene_token = 13;
}

// CmdId: 216
message SceneInitFinishRsp {
    int32 retcode = 2;
    uint32 enter_scene_token = 14;
}

// CmdId: 280
message SceneKickPlayerNotify {
    uint32 kicker_uid = 11;
    uint32 target_uid = 1;
}

// CmdId: 238
message SceneKickPlayerReq {
    uint32 target_uid = 9;
}

// CmdId: 260
message SceneKickPlayerRsp {
    uint32 target_uid = 8;
    int32 retcode = 6;
}

message SceneMonsterInfo {
    uint32 monster_id = 1;
    uint32 group_id = 2;
    uint32 config_id = 3;
    repeated SceneWeaponInfo weapon_list = 4;
    uint32 authority_peer_id = 5;
    repeated uint32 affix_list = 6;
    bool is_elite = 7;
    uint32 owner_entity_id = 8;
    uint32 summoned_tag = 9;
    map<uint32, uint32> summon_tag_map = 10;
    uint32 pose_id = 11;
    MonsterBornType born_type = 12;
    uint32 block_id = 13;
    uint32 mark_flag = 14;
    uint32 title_id = 15;
    uint32 special_name_id = 16;
    uint32 attack_target_id = 17;
    MonsterRoute monster_route = 18;
    uint32 ai_config_id = 19;
    uint32 level_route_id = 20;
    uint32 init_pose_id = 21;
    bool is_light = 22;
    uint32 kill_num = 23;
    oneof content {
        SceneFishInfo fish_info = 50;
        FishtankFishInfo fishtank_fish_info = 51;
    }
}

message SceneNpcInfo {
    uint32 npc_id = 1;
    uint32 room_id = 2;
    uint32 parent_quest_id = 3;
    uint32 block_id = 4;
}

message ScenePlayBattleInfo {
    uint32 state = 9;
    repeated uint32 progress_stage_list = 2;
    uint32 mode = 1;
    uint32 progress = 14;
    uint32 start_time = 4;
    uint32 play_id = 11;
    uint32 duration = 3;
    uint32 type = 5;
    uint32 prepare_end_time = 12;
    uint32 play_type = 8;
}

// CmdId: 4449
message ScenePlayBattleInfoListNotify {
    repeated ScenePlayBattleInfo battle_info_list = 11;
}

// CmdId: 4440
message ScenePlayBattleInfoNotify {
    ScenePlayBattleInfo battle_info = 7;
}

// CmdId: 4428
message ScenePlayBattleInterruptNotify {
    uint32 interrupt_state = 9;
    uint32 play_id = 2;
    uint32 play_type = 8;
}

// CmdId: 4362
message ScenePlayBattleResultNotify {
    bool is_win = 2;
    uint32 cost_time = 6;
    uint32 play_type = 12;
    repeated ScenePlayBattleSettlePlayerInfo settle_player_info_list = 1;
    repeated ScenePlayBattleSettleRewardInfo settle_reward_info_list = 10;
    uint32 play_id = 13;
}

message ScenePlayBattleSettlePlayerInfo {
    repeated ExhibitionDisplayInfo card_list = 14;
    int64 param = 4;
    uint32 uid = 1;
    uint32 head_image = 9;
    ProfilePicture profile_picture = 15;
    uint32 statistic_id = 10;
    string online_id = 13;
    string nickname = 8;
}

message ScenePlayBattleSettleRewardInfo {
    uint32 uid = 6;
    repeated ItemParam reward_item_list = 9;
}

// CmdId: 4415
message ScenePlayBattleUidOpNotify {
    string param_str = 9;
    uint32 play_type = 5;
    uint32 play_id = 6;
    uint32 entity_id = 14;
    uint32 op = 2;
    repeated uint32 param_list = 7;
    repeated uint32 uid_list = 8;
    uint32 param_index = 1;
    uint32 param_duration = 4;
    repeated uint32 param_target_list = 15;
}

// CmdId: 3466
message ScenePlayerBackgroundAvatarRefreshNotify {
    uint32 param = 12;
    VisionType appear_type = 8;
    repeated SceneEntityInfo entity_list = 14;
}

message ScenePlayerInfo {
    string name = 14;
    OnlinePlayerInfo online_player_info = 15;
    bool is_connected = 7;
    uint32 uid = 4;
    uint32 scene_id = 12;
    uint32 peer_id = 13;
}

// CmdId: 218
message ScenePlayerInfoNotify {
    repeated ScenePlayerInfo player_info_list = 9;
}

// CmdId: 212
message ScenePlayerLocationNotify {
    uint32 scene_id = 14;
    repeated PlayerLocationInfo player_loc_list = 3;
    repeated VehicleLocationInfo vehicle_loc_list = 7;
}

// CmdId: 227
message ScenePlayerSoundNotify {
    enum PlaySoundType {

        PLAY_SOUND_NONE = 0;
        PLAY_SOUND_START = 1;
        PLAY_SOUND_STOP = 2;
    }
    string sound_name = 11;
    Vector play_pos = 7;
    PlaySoundType play_type = 15;
}

// CmdId: 4391
message ScenePlayGuestReplyInviteReq {
    uint32 play_id = 15;
    bool is_agree = 7;
}

// CmdId: 4422
message ScenePlayGuestReplyInviteRsp {
    int32 retcode = 3;
    uint32 play_id = 4;
    bool is_agree = 9;
}

// CmdId: 4442
message ScenePlayGuestReplyNotify {
    uint32 guest_uid = 13;
    bool is_agree = 5;
    uint32 play_id = 7;
}

message ScenePlayInfo {
    uint32 entry_id = 8;
    uint32 play_type = 2;
    bool is_open = 5;
    uint32 play_id = 9;
}

// CmdId: 4409
message ScenePlayInfoListNotify {
    repeated ScenePlayInfo play_info_list = 6;
}

// CmdId: 4413
message ScenePlayInviteResultNotify {
    bool is_all_argee = 9;
    uint32 play_id = 5;
}

// CmdId: 4425
message ScenePlayOutofRegionNotify {
    uint32 play_id = 6;
}

// CmdId: 4446
message ScenePlayOwnerCheckReq {
    uint32 play_id = 11;
    bool is_skip_match = 4;
}

// CmdId: 4439
message ScenePlayOwnerCheckRsp {
    repeated uint32 param_list = 8;
    uint32 wrong_uid = 7;
    uint32 play_id = 10;
    int32 retcode = 5;
    bool is_skip_match = 13;
}

// CmdId: 4406
message ScenePlayOwnerInviteNotify {
    uint32 play_id = 1;
    bool is_remain_reward = 13;
    uint32 invite_cd = 15;
}

// CmdId: 4426
message ScenePlayOwnerStartInviteReq {
    bool is_skip_match = 15;
    uint32 play_id = 2;
}

// CmdId: 4366
message ScenePlayOwnerStartInviteRsp {
    int32 retcode = 6;
    bool is_skip_match = 12;
    uint32 play_id = 3;
}

// CmdId: 282
message ScenePointUnlockNotify {
    repeated uint32 GNNBFLNNODN = 6;
    repeated uint32 ELNACLNNKIO = 9;
    repeated uint32 CBNONONIPKH = 2;
    uint32 scene_id = 3;
    repeated uint32 point_list = 7;
}

message SceneReliquaryInfo {
    uint32 item_id = 1;
    uint64 guid = 2;
    uint32 level = 3;
    uint32 promote_level = 4;
}

message SceneRouteChangeInfo {
    uint32 route_id = 3;
    repeated RoutePointChangeInfo point_list = 6;
    uint32 type = 2;
    bool is_forward = 14;
}

// CmdId: 201
message SceneRouteChangeNotify {
    uint32 scene_time = 4;
    repeated SceneRouteChangeInfo route_list = 3;
    uint32 scene_id = 14;
}

message SceneTeamAvatar {
    uint32 weapon_entity_id = 8;
    uint32 player_uid = 6;
    bool is_on_scene = 10;
    uint64 weapon_guid = 1;
    repeated ServerBuff server_buff_list = 7;
    bool FMFEBGBJAMB = 11;
    uint32 entity_id = 13;
    AbilitySyncStateInfo weapon_ability_info = 3;
    AbilityControlBlock ability_control_block = 9;
    AvatarInfo avatar_info = 5;
    AbilitySyncStateInfo avatar_ability_info = 14;
    bool is_player_cur_avatar = 593;
    SceneAvatarInfo scene_avatar_info = 2;
    SceneEntityInfo scene_entity_info = 12;
    uint32 scene_id = 15;
    uint64 avatar_guid = 4;
}

// CmdId: 1646
message SceneTeamUpdateNotify {
    repeated SceneTeamAvatar scene_team_avatar_list = 7;
    bool is_in_mp = 4;
}

// CmdId: 217
message SceneTimeNotify {
    uint32 scene_id = 6;
    bool is_paused = 15;
    uint64 scene_time = 1;
}

// CmdId: 242
message SceneTransToPointReq {
    uint32 scene_id = 12;
    uint32 point_id = 7;
}

// CmdId: 294
message SceneTransToPointRsp {
    uint32 scene_id = 8;
    uint32 point_id = 14;
    int32 retcode = 1;
}

message SceneWeaponInfo {
    uint32 entity_id = 1;
    uint32 gadget_id = 2;
    uint32 item_id = 3;
    uint64 guid = 4;
    uint32 level = 5;
    uint32 promote_level = 6;
    AbilitySyncStateInfo ability_info = 7;
    map<uint32, uint32> affix_map = 8;
    EntityRendererChangedInfo renderer_changed_info = 9;
}

// CmdId: 3338
message SceneWeatherForcastReq {
    uint32 weather_area_id = 2;
}

// CmdId: 3354
message SceneWeatherForcastRsp {
    uint64 next_climate_time = 15;
    repeated uint32 forcast_climate_list = 12;
    int32 retcode = 9;
}

message ScreenInfo {
    uint32 live_id = 1;
    uint32 projector_entity_id = 2;
}

message SeaLampActivityDetailInfo {
    uint32 days = 9;
    uint32 MAPMOKKMHJI = 6;
    repeated uint32 LKPONGIDNOA = 11;
    uint32 BCAAGPKKOMF = 8;
    uint32 progress = 13;
    uint32 phase_id = 15;
    repeated uint32 BLOHENDAHOL = 5;
}

message SeaLampActivityInfo {
    uint32 sea_lamp_coin = 10;
    uint32 day_index = 4;
    uint32 first_day_start_time = 12;
    repeated SeaLampSectionInfo section_info_list = 8;
    bool CFABGECNHGK = 2;
    uint32 mechanicus_id = 7;
    bool is_content_closed = 15;
    uint32 popularity = 14;
    bool IAAOFEIDABB = 1;
}

// CmdId: 2107
message SeaLampCoinNotify {
    uint32 sea_lamp_coin = 11;
}

// CmdId: 2093
message SeaLampContributeItemReq {
    repeated ItemParam item_list = 14;
    uint32 activity_id = 5;
}

// CmdId: 2198
message SeaLampContributeItemRsp {
    uint32 add_progress = 14;
    int32 retcode = 2;
    uint32 LHEFDGPEFPN = 4;
    uint32 LCMDALFODMC = 7;
}

// CmdId: 2126
message SeaLampFlyLampNotify {
    uint32 item_id = 6;
    Vector pos = 10;
    int32 param = 15;
    uint32 item_num = 9;
}

// CmdId: 2032
message SeaLampFlyLampReq {
    Vector pos = 8;
    uint32 item_id = 1;
    int32 param = 4;
    uint32 item_num = 13;
}

// CmdId: 2171
message SeaLampFlyLampRsp {
    uint32 item_num = 3;
    int32 retcode = 10;
    uint32 item_id = 12;
}

// CmdId: 2124
message SeaLampPopularityNotify {
    uint32 popularity = 6;
}

message SeaLampSectionInfo {
    uint32 section_id = 12;
}

// CmdId: 2076
message SeaLampTakeContributionRewardReq {
    uint32 config_id = 9;
    uint32 activity_id = 11;
}

// CmdId: 2016
message SeaLampTakeContributionRewardRsp {
    uint32 config_id = 11;
    int32 retcode = 1;
}

// CmdId: 2115
message SeaLampTakePhaseRewardReq {
    uint32 activity_id = 8;
    uint32 phase_id = 6;
}

// CmdId: 2153
message SeaLampTakePhaseRewardRsp {
    uint32 phase_id = 2;
    int32 retcode = 4;
}

message SeaLampV3CampInfo {
    repeated SeaLampV3CampStageInfo stage_info_list = 6;
}

message SeaLampV3CampStageInfo {
    uint32 stage_id = 11;
    uint32 level_id = 3;
    bool is_finished = 14;
    bool is_open = 9;
}

message SeaLampV3DetailInfo {
    SeaLampV3ShadowInfo shadow_info = 14;
    SeaLampV3RaceInfo race_info = 3;
    SeaLampV3CampInfo camp_info = 2;
}

message SeaLampV3RaceInfo {
    repeated SeaLampV3RaceLevelInfo level_info_list = 6;
}

message SeaLampV3RaceLevelInfo {
    uint32 max_score = 10;
    uint32 level_id = 1;
    bool is_open = 5;
}

message SeaLampV3ShadowInfo {
    repeated SeaLampV3ShadowStageInfo stage_info_list = 9;
}

message SeaLampV3ShadowLevelInfo {
    uint32 level_id = 12;
    uint32 min_finish_time = 1;
    bool is_open = 4;
}

message SeaLampV3ShadowStageInfo {
    bool is_open = 1;
    repeated SeaLampV3ShadowLevelInfo level_info_list = 2;
    uint32 stage_id = 15;
}

// CmdId: 252
message SealBattleBeginNotify {
    uint32 NILJHJLDIPH = 13;
    uint32 seal_entity_id = 15;
    SealBattleType battle_type = 9;
    uint32 BLCDBPALGPL = 3;
}

// CmdId: 244
message SealBattleEndNotify {
    uint32 seal_entity_id = 9;
    bool is_win = 13;
}

// CmdId: 222
message SealBattleProgressNotify {
    uint32 seal_entity_id = 4;
    uint32 NILJHJLDIPH = 12;
    uint32 OPPGKAGCJBJ = 9;
    uint32 progress = 2;
    uint32 end_time = 6;
}

// CmdId: 6244
message SearchCustomDungeonReq {
    string dungeon_code = 11;
}

// CmdId: 6218
message SearchCustomDungeonRsp {
    int32 retcode = 8;
    OtherCustomDungeonBrief custom_dungeon_brief = 11;
}

message SeekFurnitureGalleryInfo {
	repeated HomeSeekFurnitureOneRecord recordList = 5;
}

// CmdId: 221
message SeeMonsterReq {
    uint32 monster_id = 9;
}

// CmdId: 214
message SeeMonsterRsp {
    int32 retcode = 9;
}

message SegmentCRCInfo {
    uint32 module = 14;
    string crc = 3;
    int32 retcode = 10;
    uint32 size = 13;
    uint32 offset = 8;
}

message SegmentInfo {
    uint32 size = 3;
    uint32 offset = 15;
    uint32 module = 4;
}

// CmdId: 2007
message SelectAsterMidDifficultyReq {
    uint32 gadget_entity_id = 11;
    uint32 difficulty_id = 7;
    uint32 schedule_id = 2;
}

// CmdId: 2094
message SelectAsterMidDifficultyRsp {
    uint32 schedule_id = 10;
    uint32 difficulty_id = 2;
    int32 retcode = 6;
    uint32 gadget_entity_id = 9;
}

// CmdId: 2009
message SelectEffigyChallengeConditionReq {
    uint32 difficulty_id = 4;
    uint32 challenge_id = 1;
    repeated uint32 condition_id_list = 15;
}

// CmdId: 2040
message SelectEffigyChallengeConditionRsp {
    repeated uint32 condition_id_list = 3;
    uint32 difficulty_id = 10;
    int32 retcode = 8;
    uint32 challenge_id = 13;
}

// CmdId: 8062
message SelectRoguelikeDungeonCardReq {
    uint32 card_id = 14;
}

// CmdId: 8423
message SelectRoguelikeDungeonCardRsp {
    int32 retcode = 7;
    uint32 card_id = 12;
}

// CmdId: 816
message SelectWorktopOptionReq {
    uint32 option_id = 1;
    uint32 gadget_entity_id = 11;
}

// CmdId: 856
message SelectWorktopOptionRsp {
    uint32 option_id = 13;
    int32 retcode = 12;
    uint32 gadget_entity_id = 9;
}

message ServantInfo {
    uint32 LEIGNAKFGHF = 1;
    uint32 IMHGJAOKPNI = 2;
}

// CmdId: 2097
message ServerAnnounceNotify {
    repeated AnnounceData announce_data_list = 2;
}

// CmdId: 2167
message ServerAnnounceRevokeNotify {
    repeated uint32 config_id_list = 8;
}

message ServerBuff {
    uint32 server_buff_uid = 1;
    uint32 server_buff_id = 2;
    uint32 server_buff_type = 3;
    uint32 instanced_modifier_id = 4;
    bool is_modifier_added = 5;
}

// CmdId: 334
message ServerBuffChangeNotify {
    enum ServerBuffChangeType {

        ADD_SERVER_BUFF = 0;
        DEL_SERVER_BUFF = 1;
    }
    repeated uint64 avatar_guid_list = 6;
    bool is_creature_buff = 7;
    repeated ServerBuff server_buff_list = 9;
    ServerBuffChangeType server_buff_change_type = 15;
    repeated uint32 entity_id_list = 13;
}

// CmdId: 1175
message ServerCombatEndNotify {
    repeated uint32 combat_end_type_list = 4;
}

// CmdId: 470
message ServerCondMeetQuestListUpdateNotify {
    repeated uint32 GNFJHCIHOBE = 9;
    repeated uint32 EOMIKDEBBGN = 5;
}

// CmdId: 168
message ServerDisconnectClientNotify {
    uint32 data = 9;
}

// CmdId: 1165
message ServerGlobalValueChangeNotify {
    float value = 10;
    uint32 entity_id = 9;
    uint32 key_hash = 8;
}

// CmdId: 59
message ServerLogNotify {
    ServerLogType log_type = 13;
    ServerLogLevel log_level = 10;
    string server_log = 1;
}

message ServerMassiveEntity {
    uint32 entity_type = 1;
    uint32 config_id = 2;
    uint32 runtime_id = 3;
    uint32 authority_peer_id = 4;
    int64 obj_id = 5;
    oneof entity_info {
        MassiveWaterInfo water_info = 6;
        MassiveGrassInfo grass_info = 7;
        MassiveBoxInfo box_info = 8;
    }
}

// CmdId: 5716
message ServerMessageNotify {
    uint32 index = 2;
}

// CmdId: 63
message ServerTimeNotify {
    uint64 server_time = 10;
}

// CmdId: 4175
message ServerTryCancelGeneralMatchNotify {
    uint32 match_id = 5;
}

// CmdId: 1112
message ServerUpdateGlobalValueNotify {
    enum UpdateType {

        INVALUE = 0;
        ADD = 1;
        SET = 2;
    }
    uint32 entity_id = 15;
    float delta = 6;
    uint32 key_hash = 14;
    float value = 5;
    UpdateType update_type = 2;
}

// CmdId: 2631
message SetBattlePassViewedReq {
    uint32 schedule_id = 12;
}

// CmdId: 2621
message SetBattlePassViewedRsp {
    uint32 schedule_id = 9;
    int32 retcode = 12;
}

// CmdId: 4068
message SetChatEmojiCollectionReq {
    ChatEmojiCollectionData chat_emoji_collection_data = 14;
}

// CmdId: 4093
message SetChatEmojiCollectionRsp {
    int32 retcode = 8;
}

// CmdId: 4205
message SetCodexPushtipsReadReq {
    uint32 NACFJFLGNFH = 8;
    uint32 AOLDDCCIAHH = 15;
}

// CmdId: 4207
message SetCodexPushtipsReadRsp {
    uint32 NACFJFLGNFH = 1;
    uint32 AOLDDCCIAHH = 2;
    int32 retcode = 3;
}

// CmdId: 1968
message SetCoopChapterViewedReq {
    uint32 chapter_id = 5;
}

// CmdId: 1997
message SetCoopChapterViewedRsp {
    uint32 chapter_id = 5;
    int32 retcode = 3;
}

// CmdId: 2114
message SetCurExpeditionChallengeIdReq {
    uint32 id = 4;
}

// CmdId: 2086
message SetCurExpeditionChallengeIdRsp {
    uint32 id = 5;
    int32 retcode = 11;
}

// CmdId: 3424
message SetEntityClientDataNotify {
    uint32 entity_id = 7;
    EntityClientData entity_client_data = 6;
}

// CmdId: 632
message SetEquipLockStateReq {
    bool is_locked = 2;
    uint64 target_equip_guid = 11;
}

// CmdId: 619
message SetEquipLockStateRsp {
    int32 retcode = 12;
    uint64 target_equip_guid = 1;
    bool is_locked = 14;
}

// CmdId: 4621
message SetFriendEnterHomeOptionReq {
    FriendEnterHomeOption option = 4;
}

// CmdId: 4548
message SetFriendEnterHomeOptionRsp {
    int32 retcode = 2;
}

// CmdId: 4088
message SetFriendRemarkNameReq {
    uint32 uid = 1;
    string remark_name = 4;
}

// CmdId: 4049
message SetFriendRemarkNameRsp {
    int32 retcode = 4;
    uint32 uid = 15;
    string remark_name = 14;
    bool is_clear_remark = 11;
}

// CmdId: 5699
message SetH5ActivityRedDotTimestampReq {
    uint32 client_red_dot_timestamp = 3;
}

// CmdId: 5665
message SetH5ActivityRedDotTimestampRsp {
    int32 retcode = 4;
}

// CmdId: 636
message SetIsAutoUnlockSpecificEquipReq {
    bool is_auto_unlock_specific_equip = 14;
}

// CmdId: 638
message SetIsAutoUnlockSpecificEquipRsp {
    int32 retcode = 8;
}

// CmdId: 8599
message SetLimitOptimizationNotify {
    bool is_active = 4;
}

// CmdId: 4051
message SetNameCardReq {
    uint32 name_card_id = 11;
}

// CmdId: 4039
message SetNameCardRsp {
    int32 retcode = 13;
    uint32 name_card_id = 7;
}

// CmdId: 186
message SetOpenStateReq {
    uint32 key = 3;
    uint32 value = 14;
}

// CmdId: 151
message SetOpenStateRsp {
    uint32 value = 4;
    uint32 key = 7;
    int32 retcode = 8;
}

// CmdId: 4012
message SetPlayerBirthdayReq {
    Birthday birthday = 7;
}

// CmdId: 4065
message SetPlayerBirthdayRsp {
    int32 retcode = 10;
    Birthday birthday = 1;
}

// CmdId: 175
message SetPlayerBornDataReq {
    string nick_name = 15;
    uint32 avatar_id = 2;
}

// CmdId: 146
message SetPlayerBornDataRsp {
    int32 retcode = 3;
}

// CmdId: 4046
message SetPlayerHeadImageReq {
    uint32 avatar_id = 6;
}

// CmdId: 4082
message SetPlayerHeadImageRsp {
    ProfilePicture profile_picture = 6;
    int32 retcode = 13;
    uint32 avatar_id = 1;
}

// CmdId: 194
message SetPlayerNameReq {
    string nick_name = 3;
}

// CmdId: 177
message SetPlayerNameRsp {
    string nick_name = 8;
    int32 retcode = 13;
}

// CmdId: 165
message SetPlayerPropReq {
    repeated PropValue prop_list = 10;
}

// CmdId: 199
message SetPlayerPropRsp {
    int32 retcode = 6;
}

// CmdId: 4099
message SetPlayerSignatureReq {
    string signature = 8;
}

// CmdId: 4075
message SetPlayerSignatureRsp {
    string signature = 10;
    int32 retcode = 15;
}

// CmdId: 223
message SetSceneWeatherAreaReq {
    map<uint32, string> weather_value_map = 11;
    uint32 weather_gadget_id = 15;
}

// CmdId: 230
message SetSceneWeatherAreaRsp {
    int32 retcode = 15;
}

// CmdId: 1639
message SetUpAvatarTeamReq {
    uint64 cur_avatar_guid = 14;
    uint32 team_id = 4;
    repeated uint64 avatar_team_guid_list = 6;
}

// CmdId: 1800
message SetUpAvatarTeamRsp {
    repeated uint64 avatar_team_guid_list = 6;
    int32 retcode = 9;
    uint32 team_id = 7;
    uint64 cur_avatar_guid = 8;
}

// CmdId: 4272
message SetUpLunchBoxWidgetReq {
    LunchBoxData lunch_box_data = 4;
}

// CmdId: 4270
message SetUpLunchBoxWidgetRsp {
    int32 retcode = 14;
    LunchBoxData lunch_box_data = 10;
}

// CmdId: 4251
message SetWidgetSlotReq {
    repeated WidgetSlotTag tag_list = 5;
    WidgetSlotOp op = 12;
    uint32 material_id = 6;
}

// CmdId: 4296
message SetWidgetSlotRsp {
    uint32 material_id = 12;
    WidgetSlotOp op = 15;
    int32 retcode = 2;
    repeated WidgetSlotTag tag_list = 14;
}

message ShapeBox {
    Vector center = 1;
    Vector axis0 = 2;
    Vector axis1 = 3;
    Vector axis2 = 4;
    Vector extents = 5;
}

message ShapeSphere {
    Vector center = 1;
    float radius = 2;
}

message ShareCDInfo {
    uint32 share_cd_id = 15;
    uint32 index = 8;
    uint64 cd_start_time = 9;
}

message Shop {
    repeated ShopGoods goods_list = 1;
    uint32 shop_type = 6;
    repeated ShopCardProduct card_product_list = 13;
    uint32 city_id = 14;
    uint32 next_refresh_time = 9;
    repeated ShopConcertProduct concert_product_list = 3;
    repeated ShopMcoinProduct mcoin_product_list = 5;
    uint32 city_reputation_level = 4;
}

message ShopCardProduct {
    message ResinCard {
        repeated ItemParam base_item_list = 1;
        repeated ItemParam per_day_item_list = 2;
    }
    string product_id = 1;
    string price_tier = 2;
    uint32 mcoin_base = 3;
    uint32 hcoin_per_day = 4;
    uint32 days = 5;
    uint32 remain_reward_days = 6;
    uint32 card_product_type = 7;
    oneof extra_card_data {
        ResinCard resin_card = 101;
    }
}

message ShopConcertProduct {
    string product_id = 1;
    string price_tier = 2;
    uint32 obtain_count = 3;
    uint32 obtain_limit = 4;
    uint32 begin_time = 5;
    uint32 end_time = 6;
    uint32 buy_times = 7;
}

message ShopGoods {
    uint32 OLFIOBININC = 1;
    uint32 EOMGIGFFCLI = 736;
    ItemParam goods_item = 7;
    uint32 IBKPPFBAOBH = 9;
    uint32 JGCLNJKOALJ = 1201;
    uint32 LAKDFDKCMKC = 11;
    uint32 ONDHAANEFIK = 1493;
    uint32 begin_time = 14;
    repeated uint32 pre_goods_id_list = 6;
    uint32 IAKCJHEJHOG = 15;
    uint32 LBPDCMBFNEC = 2;
    uint32 bought_num = 3;
    uint32 GNENHCFPFCP = 688;
    uint32 BKONLAFGBFC = 10;
    uint32 end_time = 4;
    uint32 MLKHDJPCJLG = 12;
    repeated ItemParam cost_item_list = 13;
    uint32 HLDEGIEBMBI = 617;
    uint32 LDBIHGCDGNP = 8;
    uint32 next_refresh_time = 5;
}

message ShopMcoinProduct {
    string product_id = 1;
    string price_tier = 2;
    uint32 mcoin_base = 3;
    uint32 mcoin_non_first = 4;
    uint32 mcoin_first = 5;
    uint32 bought_num = 6;
    bool is_audit = 7;
}

message ShortAbilityHashPair {
    sfixed32 ability_name_hash = 4;
    sfixed32 ability_config_hash = 5;
}

message ShowAvatarInfo {
    uint32 avatar_id = 1;
    map<uint32, PropValue> prop_map = 2;
    repeated uint32 talent_id_list = 3;
    map<uint32, float> fight_prop_map = 4;
    uint32 skill_depot_id = 5;
    uint32 core_proud_skill_level = 6;
    repeated uint32 inherent_proud_skill_list = 7;
    map<uint32, uint32> skill_level_map = 8;
    map<uint32, uint32> proud_skill_extra_level_map = 9;
    repeated ShowEquip equip_list = 10;
    AvatarFetterInfo fetter_info = 11;
    uint32 costume_id = 12;
    AvatarExcelInfo excel_info = 13;
}

// CmdId: 3382
message ShowClientGuideNotify {
    string guide_name = 14;
}

// CmdId: 3129
message ShowClientTutorialNotify {
    uint32 tutorial_id = 4;
}

// CmdId: 3128
message ShowCommonTipsNotify {
    string content = 1;
    string title = 4;
    uint32 close_time = 5;
}

message ShowEquip {
    uint32 item_id = 1;
    oneof detail {
        Reliquary reliquary = 2;
        Weapon weapon = 3;
    }
}

// CmdId: 76
message ShowMessageNotify {
    repeated MsgParam params = 8;
    SvrMsgId msg_id = 2;
}

// CmdId: 3333
message ShowTemplateReminderNotify {
    uint32 template_reminder_id = 7;
    bool JOIAOAOPGFI = 5;
    bool MLFFFPALACK = 13;
    repeated uint32 param_uid_list = 11;
    repeated int32 param_list = 6;
}

// CmdId: 4047
message SignatureAuditConfigNotify {
    uint32 submit_limit = 14;
    bool is_open = 12;
}

message SignInData {
    repeated ItemParam reward_item_list = 2;
    uint32 day_count = 12;
}

message SignInInfo {
    uint32 GANAIGKNLOD = 11;
    uint32 end_time = 5;
    uint32 ODCICMMHNOH = 8;
    uint32 schedule_id = 7;
    bool is_cond_satisfied = 10;
    uint32 config_id = 6;
    repeated uint32 reward_day_list = 9;
    repeated SignInData signin_data_list = 2;
    uint32 begin_time = 14;
}

// CmdId: 2589
message SignInInfoReq {
}

// CmdId: 2576
message SignInInfoRsp {
    int32 retcode = 10;
    repeated SignInInfo sign_in_info_list = 1;
}

// CmdId: 23884
message SingleRestartBrickBreakerReq {
    uint32 level_id = 12;
    bool is_dungeon = 14;
}

// CmdId: 24780
message SingleRestartBrickBreakerRsp {
    bool is_dungeon = 11;
    int32 retcode = 7;
    uint32 level_id = 14;
}

// CmdId: 21647
message SingleStartBrickBreakerReq {
    uint32 level_id = 13;
    bool is_dungeon = 4;
    repeated uint32 chosen_skill_list = 14;
    repeated uint32 chosen_avatar_list = 9;
}

// CmdId: 21829
message SingleStartBrickBreakerRsp {
    uint32 level_id = 5;
    bool is_dungeon = 15;
    int32 retcode = 6;
}

// CmdId: 123
message SkipPlayerGameTimeReq {
    bool is_force_set = 6;
    uint32 game_time = 5;
    uint32 client_game_time = 14;
}

// CmdId: 130
message SkipPlayerGameTimeRsp {
    uint32 game_time = 9;
    uint32 client_game_time = 1;
    int32 retcode = 12;
}

message SkyCrystalDetectorData {
    uint32 group_id = 9;
    uint32 config_id = 13;
    bool is_hint_valid = 5;
    Vector hint_center_pos = 4;
}

// CmdId: 4275
message SkyCrystalDetectorDataUpdateNotify {
    SkyCrystalDetectorData sky_crystal_detector_data = 2;
}

message SkyCrystalDetectorQuickUseResult {
    int32 retcode = 5;
    SkyCrystalDetectorData sky_crystal_detector_data = 6;
}

// CmdId: 4083
message SocialDataNotify {
    bool is_have_first_share = 6;
}

message SocialDetail {
    uint32 uid = 1;
    string nickname = 2;
    uint32 level = 3;
    uint32 avatar_id = 4;
    string signature = 5;
    Birthday birthday = 6;
    uint32 world_level = 7;
    repeated uint32 reserved_list = 8;
    FriendOnlineState online_state = 9;
    uint32 param = 10;
    bool is_friend = 11;
    bool is_mp_mode_available = 12;
    string online_id = 13;
    uint32 name_card_id = 14;
    bool is_in_blacklist = 15;
    bool is_chat_no_disturb = 16;
    string remark_name = 17;
    uint32 finish_achievement_num = 18;
    uint32 tower_floor_index = 19;
    uint32 tower_level_index = 20;
    bool is_show_avatar = 21;
    repeated SocialShowAvatarInfo show_avatar_info_list = 22;
    repeated uint32 show_name_card_id_list = 23;
    FriendEnterHomeOption friend_enter_home_option = 24;
    ProfilePicture profile_picture = 25;
    string ip_code = 26;
}

message SocialShowAvatarInfo {
    uint32 avatar_id = 1;
    uint32 level = 2;
    uint32 costume_id = 3;
}

message SorushTrialDetailInfo {
    repeated uint32 JAMGNDKIEAL = 5;
    map<uint32, uint32> FFADCNBDFMF = 15;
    repeated uint32 PEAGPLNPGNE = 7;
    repeated uint32 EEGMCLFOHCL = 10;
}

message SpiceActivityDetailInfo {
    uint32 GNAMHBEINMA = 15;
    uint32 GOLEIJEKOGL = 1;
    repeated SpiceStageData spice_stage_data_list = 10;
}

// CmdId: 8931
message SpiceActivityFinishMakeSpiceReq {
    repeated uint32 left_material_id_list = 7;
    uint32 stage_id = 3;
    bool is_success = 8;
    uint32 left_turns = 2;
}

// CmdId: 8572
message SpiceActivityFinishMakeSpiceRsp {
    bool is_success = 14;
    uint32 stage_id = 13;
    int32 retcode = 9;
}

// CmdId: 8739
message SpiceActivityGivingRecordNotify {
    uint32 GOLEIJEKOGL = 12;
    uint32 avatar_id = 14;
    uint32 GNAMHBEINMA = 11;
}

// CmdId: 8199
message SpiceActivityProcessFoodReq {
    repeated ItemParam normal_food_list = 13;
}

// CmdId: 8682
message SpiceActivityProcessFoodRsp {
    repeated ItemParam special_food_list = 6;
    int32 retcode = 3;
    repeated ItemParam normal_food_list = 9;
}

message SpiceStageData {
    uint32 stage_id = 13;
    bool is_open = 11;
    uint32 success_times = 10;
}

// CmdId: 1660
message SpringUseReq {
    uint64 guid = 13;
}

// CmdId: 1706
message SpringUseRsp {
    int32 retcode = 13;
    uint64 guid = 10;
}

// CmdId: 2125
message StartArenaChallengeLevelReq {
    uint32 FCLFLMPGIKN = 9;
    uint32 gadget_entity_id = 5;
    uint32 GELFIDPMHLJ = 13;
}

// CmdId: 2021
message StartArenaChallengeLevelRsp {
    uint32 GELFIDPMHLJ = 14;
    uint32 FCLFLMPGIKN = 4;
    int32 retcode = 2;
    uint32 gadget_entity_id = 7;
}

// CmdId: 8511
message StartBuoyantCombatGalleryReq {
    uint32 gallery_id = 5;
    uint32 gallery_level = 10;
}

// CmdId: 8263
message StartBuoyantCombatGalleryRsp {
    uint32 gallery_level = 14;
    int32 retcode = 4;
    uint32 gallery_id = 12;
}

// CmdId: 1971
message StartCoopPointReq {
    uint32 coop_point = 13;
}

// CmdId: 2000
message StartCoopPointRsp {
    bool is_start = 8;
    MainCoop start_main_coop = 6;
    uint32 coop_point = 13;
    int32 retcode = 9;
}

// CmdId: 2088
message StartEffigyChallengeReq {
    uint32 difficulty_id = 9;
    repeated uint32 condition_id_list = 10;
    uint32 challenge_id = 11;
    uint32 point_id = 6;
}

// CmdId: 2042
message StartEffigyChallengeRsp {
    uint32 point_id = 5;
    uint32 challenge_id = 6;
    uint32 difficulty_id = 4;
    int32 retcode = 11;
    repeated uint32 condition_id_list = 12;
}

// CmdId: 5817
message StartFishingReq {
    uint32 fish_pool_id = 4;
    uint32 rod_entity_id = 11;
}

// CmdId: 5849
message StartFishingRsp {
    uint32 fish_pool_id = 14;
    int32 retcode = 12;
}

// CmdId: 8884
message StartRogueDiaryPlayReq {
    uint32 difficulty = 11;
    uint32 stage_id = 12;
}

// CmdId: 8256
message StartRogueDiaryPlayRsp {
    repeated uint32 rand_card_list = 15;
    int32 retcode = 3;
    repeated RogueDiaryAvatar trial_avatar_list = 8;
    repeated RogueDiaryAvatar avatar_list = 2;
}

// CmdId: 8096
message StartRogueDiaryRoomReq {
    bool is_select_hard = 10;
    uint32 room_difficulty = 12;
}

// CmdId: 8162
message StartRogueDiaryRoomRsp {
    int32 retcode = 15;
}

// CmdId: 8971
message StartRogueEliteCellChallengeReq {
    RogueEliteCellDifficultyType difficulty = 12;
    uint32 dungeon_id = 13;
    uint32 cell_id = 5;
}

// CmdId: 8015
message StartRogueEliteCellChallengeRsp {
    uint32 dungeon_id = 12;
    int32 retcode = 14;
    uint32 cell_id = 1;
}

// CmdId: 8732
message StartRogueNormalCellChallengeReq {
    uint32 dungeon_id = 1;
    uint32 cell_id = 9;
}

// CmdId: 8495
message StartRogueNormalCellChallengeRsp {
    uint32 dungeon_id = 1;
    uint32 cell_id = 13;
    int32 retcode = 15;
}

message StatueGadgetInfo {
    repeated uint32 opened_statue_uid_list = 1;
}

// CmdId: 3496
message StopReminderNotify {
    uint32 reminder_id = 2;
}

message StopServerInfo {
    uint32 stop_begin_time = 1;
    uint32 stop_end_time = 2;
    string url = 3;
    string content_msg = 4;
}

// CmdId: 6247
message StoreCustomDungeonReq {
    bool is_cancel_store = 12;
    uint64 dungeon_guid = 7;
}

// CmdId: 6203
message StoreCustomDungeonRsp {
    int32 retcode = 6;
}

// CmdId: 689
message StoreItemChangeNotify {
    repeated Item item_list = 4;
    StoreType store_type = 3;
}

// CmdId: 676
message StoreItemDelNotify {
    repeated uint64 guid_list = 6;
    StoreType store_type = 11;
}

// CmdId: 696
message StoreWeightLimitNotify {
    uint32 weight_limit = 4;
    uint32 furniture_count_limit = 3;
    uint32 weapon_count_limit = 12;
    StoreType store_type = 15;
    uint32 reliquary_count_limit = 7;
    uint32 material_count_limit = 11;
}

message StrengthenPointData {
    uint32 LGCKEPNPDJK = 15;
    uint32 ILBMGBIEENL = 8;
}

// CmdId: 457
message SubmitInferenceWordReq {
    uint32 page_id = 14;
    uint32 word_id = 3;
}

// CmdId: 437
message SubmitInferenceWordRsp {
    uint32 word_id = 2;
    uint32 conclusion_id = 12;
    uint32 page_id = 8;
    int32 retcode = 15;
}

message SummerTimeDetailInfo {
    uint32 content_close_time = 10;
    SummerTimeSprintBoatInfo sprint_boat_info = 4;
    bool is_content_closed = 14;
    map<uint32, SummerTimeStageInfo> stage_map = 5;
}

message SummerTimeDungeonInfo {
    uint32 NGLCGINHGBJ = 5;
    uint32 dungeon_id = 8;
    uint32 IPLPGGHGEDH = 1;
    uint32 AIHBMHNAANC = 2;
    uint32 HFPIEECODCM = 6;
}

// CmdId: 8506
message SummerTimeFloatSignalPositionNotify {
    bool is_transfer_anchor = 8;
    uint32 float_signal_id = 1;
    Vector position = 10;
}

// CmdId: 8618
message SummerTimeFloatSignalUpdateNotify {
    bool is_transfer_anchor = 6;
    uint32 float_signal_id = 4;
    Vector position = 7;
}

message SummerTimeSprintBoatInfo {
    repeated SummerTimeSprintBoatRecord record_list = 11;
}

message SummerTimeSprintBoatRecord {
    repeated uint32 watcher_id_list = 12;
    uint32 start_time = 9;
    uint32 best_score = 1;
    uint32 group_id = 3;
    bool is_touched = 10;
}

// CmdId: 8782
message SummerTimeSprintBoatRestartReq {
    uint32 schedule_id = 1;
    uint32 group_id = 14;
}

// CmdId: 8132
message SummerTimeSprintBoatRestartRsp {
    uint32 schedule_id = 13;
    uint32 group_id = 7;
    int32 retcode = 6;
}

// CmdId: 8406
message SummerTimeSprintBoatSettleNotify {
    uint32 LKOGKCCJBFE = 6;
    bool is_success = 5;
    uint32 group_id = 10;
    uint32 HPCCAIMDMDN = 7;
    uint32 score = 2;
    uint32 total_num = 3;
    uint32 left_time = 1;
    bool is_new_record = 13;
}

message SummerTimeStageInfo {
    uint32 stage_id = 12;
    uint32 open_time = 5;
    bool is_open = 2;
}

message SummerTimeV2BoatGallerySettleInfo {
    uint32 param1 = 9;
    uint32 param2 = 1;
    uint32 param3 = 3;
    GalleryStopReason reason = 8;
    uint32 gallery_id = 5;
    uint32 used_time = 7;
}

// CmdId: 8514
message SummerTimeV2BoatSettleNotify {
    uint32 gallery_id = 14;
    SummerTimeV2BoatGallerySettleInfo settle_info = 4;
    uint32 stage_id = 1;
    bool is_new_record = 7;
}

message SummerTimeV2BoatStageInfo {
    uint32 stage_id = 2;
    uint32 best_score = 8;
    bool is_open = 12;
    uint32 open_time = 6;
}

message SummerTimeV2DetailInfo {
    uint32 BCAIGBJGEOD = 8;
    uint32 CFFPNHNDNNI = 1;
    repeated SummerTimeV2DungeonStageInfo dungeon_stage_info_list = 13;
    bool is_content_closed = 11;
    repeated SummerTimeV2BoatStageInfo boat_stage_info_list = 15;
}

message SummerTimeV2DungeonSettleInfo {
    uint32 BCAIGBJGEOD = 15;
    bool is_success = 5;
    uint32 CFFPNHNDNNI = 3;
}

message SummerTimeV2DungeonStageInfo {
    bool is_prev_dungeon_succeed = 8;
    uint32 open_time = 13;
    bool is_open = 11;
    uint32 stage_id = 15;
}

// CmdId: 8064
message SummerTimeV2RestartBoatGalleryReq {
    uint32 gallery_id = 8;
}

// CmdId: 8112
message SummerTimeV2RestartBoatGalleryRsp {
    int32 retcode = 2;
    uint32 gallery_id = 14;
}

// CmdId: 8265
message SummerTimeV2RestartDungeonReq {
}

// CmdId: 8166
message SummerTimeV2RestartDungeonRsp {
    int32 retcode = 10;
}

message SumoActivityDetailInfo {
    map<uint32, SumoStageData> sumo_stage_map = 1;
    uint32 last_stage_id = 15;
    uint32 difficulty_id = 5;
}

message SumoAvatarInfo {
    bool is_trial = 5;
    uint64 avatar_id = 1;
}

message SumoDungeonAvatar {
    bool is_avlive = 12;
    uint64 avatar_guid = 2;
    bool is_trial = 14;
}

// CmdId: 8047
message SumoDungeonSettleNotify {
    uint32 stage_id = 15;
    uint32 difficulty_id = 3;
    bool is_new_record = 5;
    uint32 DPLOCABFHKK = 14;
    uint32 KFACNCAIMAM = 1;
    uint32 final_score = 7;
}

message SumoDungeonTeam {
    repeated SumoDungeonAvatar dungeon_avatar_list = 8;
}

// CmdId: 8698
message SumoEnterDungeonNotify {
    repeated SumoDungeonTeam dungeon_team_list = 7;
    uint32 activity_id = 10;
    uint32 LADPDBLGKLP = 1;
    uint32 stage_id = 12;
    uint32 LCDBHJCBKJG = 9;
    uint32 GAILDAHOMAG = 13;
}

// CmdId: 8552
message SumoLeaveDungeonNotify {
}

// CmdId: 8817
message SumoRestartDungeonReq {
}

// CmdId: 8584
message SumoRestartDungeonRsp {
    uint32 dungeon_id = 14;
    uint32 point_id = 2;
    int32 retcode = 9;
}

// CmdId: 8444
message SumoSaveTeamReq {
    uint32 stage_id = 15;
    uint32 activity_id = 14;
    uint32 difficulty_id = 11;
    repeated SumoTeamData team_list = 3;
}

// CmdId: 8722
message SumoSaveTeamRsp {
    uint32 stage_id = 11;
    uint32 difficulty_id = 3;
    repeated SumoTeamData team_list = 12;
    uint32 activity_id = 13;
    int32 retcode = 5;
}

// CmdId: 8409
message SumoSelectTeamAndEnterDungeonReq {
    uint32 activity_id = 11;
    uint32 difficulty_id = 9;
    uint32 stage_id = 6;
    repeated SumoTeamData team_list = 7;
}

// CmdId: 8280
message SumoSelectTeamAndEnterDungeonRsp {
    uint32 activity_id = 7;
    uint32 difficulty_id = 10;
    int32 retcode = 1;
    uint32 stage_id = 5;
    repeated SumoTeamData team_list = 15;
}

// CmdId: 8997
message SumoSetNoSwitchPunishTimeNotify {
    uint32 LCDBHJCBKJG = 13;
    repeated SumoDungeonTeam dungeon_team_list = 4;
    uint32 stage_id = 15;
    uint32 LADPDBLGKLP = 10;
    uint32 activity_id = 12;
    uint32 GAILDAHOMAG = 6;
}

message SumoStageData {
    repeated SumoTeamData team_list = 14;
    bool is_open = 1;
    uint32 max_score = 15;
    uint32 open_time = 10;
    uint32 stage_id = 13;
}

// CmdId: 8324
message SumoSwitchTeamReq {
    uint32 activity_id = 14;
    uint32 stage_id = 11;
}

// CmdId: 8317
message SumoSwitchTeamRsp {
    uint32 GAILDAHOMAG = 8;
    int32 retcode = 1;
    uint32 activity_id = 9;
    repeated SumoDungeonTeam dungeon_team_list = 2;
    uint32 LADPDBLGKLP = 14;
    uint32 stage_id = 15;
}

message SumoTeamData {
    repeated uint32 skill_id_list = 2;
    repeated SumoAvatarInfo avatar_info_list = 10;
}

// CmdId: 3170
message SyncScenePlayTeamEntityNotify {
    uint32 scene_id = 15;
    repeated PlayTeamEntityInfo entity_info_list = 13;
}

// CmdId: 326
message SyncTeamEntityNotify {
    repeated TeamEntityInfo team_entity_info_list = 2;
    uint32 scene_id = 5;
}

// CmdId: 2665
message TakeAchievementGoalRewardReq {
    repeated uint32 id_list = 9;
}

// CmdId: 2676
message TakeAchievementGoalRewardRsp {
    repeated ItemParam item_list = 13;
    repeated uint32 id_list = 2;
    int32 retcode = 6;
}

// CmdId: 2667
message TakeAchievementRewardReq {
    repeated uint32 id_list = 4;
}

// CmdId: 2699
message TakeAchievementRewardRsp {
    repeated ItemParam item_list = 10;
    int32 retcode = 5;
    repeated uint32 id_list = 14;
}

// CmdId: 2036
message TakeAsterSpecialRewardReq {
    uint32 schedule_id = 1;
}

// CmdId: 2050
message TakeAsterSpecialRewardRsp {
    uint32 schedule_id = 14;
    int32 retcode = 10;
}

// CmdId: 111
message TakeBackGivingItemReq {
    uint32 giving_id = 9;
}

// CmdId: 117
message TakeBackGivingItemRsp {
    uint32 giving_id = 12;
    int32 retcode = 13;
}

// CmdId: 2645
message TakeBattlePassMissionPointReq {
    repeated uint32 mission_id_list = 13;
}

// CmdId: 2622
message TakeBattlePassMissionPointRsp {
    repeated uint32 mission_id_list = 1;
    int32 retcode = 9;
}

// CmdId: 2615
message TakeBattlePassRewardReq {
    repeated BattlePassRewardTakeOption take_option_list = 1;
}

// CmdId: 2626
message TakeBattlePassRewardRsp {
    repeated ItemParam item_list = 5;
    repeated BattlePassRewardTakeOption take_option_list = 11;
    int32 retcode = 13;
}

// CmdId: 2865
message TakeCityReputationExploreRewardReq {
    repeated uint32 explore_id_list = 2;
    uint32 city_id = 5;
}

// CmdId: 2899
message TakeCityReputationExploreRewardRsp {
    repeated uint32 explore_id_list = 5;
    uint32 city_id = 2;
    repeated ItemParam item_list = 7;
    int32 retcode = 6;
}

// CmdId: 2889
message TakeCityReputationLevelRewardReq {
    uint32 city_id = 7;
    uint32 level = 1;
}

// CmdId: 2876
message TakeCityReputationLevelRewardRsp {
    uint32 city_id = 4;
    int32 retcode = 13;
    uint32 level = 9;
    repeated ItemParam item_list = 10;
}

// CmdId: 2856
message TakeCityReputationParentQuestReq {
    uint32 city_id = 14;
    repeated uint32 parent_quest_list = 1;
}

// CmdId: 2841
message TakeCityReputationParentQuestRsp {
    repeated uint32 parent_quest_list = 14;
    int32 retcode = 12;
    repeated ItemParam item_list = 7;
    uint32 city_id = 11;
}

// CmdId: 106
message TakeCompoundOutputReq {
    uint32 compound_group_id = 1;
    uint32 compound_id = 13;
}

// CmdId: 104
message TakeCompoundOutputRsp {
    repeated ItemParam item_list = 13;
    int32 retcode = 4;
}

// CmdId: 1993
message TakeCoopRewardReq {
    uint32 reward_config_id = 7;
}

// CmdId: 1987
message TakeCoopRewardRsp {
    int32 retcode = 13;
    uint32 reward_config_id = 7;
}

// CmdId: 2140
message TakeDeliveryDailyRewardReq {
    uint32 schedule_id = 8;
}

// CmdId: 2005
message TakeDeliveryDailyRewardRsp {
    int32 retcode = 10;
    uint32 schedule_id = 6;
}

// CmdId: 2099
message TakeEffigyFirstPassRewardReq {
    uint32 challenge_id = 14;
}

// CmdId: 2191
message TakeEffigyFirstPassRewardRsp {
    uint32 challenge_id = 10;
    int32 retcode = 3;
}

// CmdId: 2113
message TakeEffigyRewardReq {
    uint32 reward_index = 13;
}

// CmdId: 2078
message TakeEffigyRewardRsp {
    int32 retcode = 1;
    uint32 reward_index = 6;
}

// CmdId: 4006
message TakeFirstShareRewardReq {
}

// CmdId: 4004
message TakeFirstShareRewardRsp {
    int32 retcode = 9;
}

// CmdId: 4709
message TakeFurnitureMakeReq {
    uint32 index = 5;
    bool is_fast_finish = 14;
    uint32 make_id = 3;
}

// CmdId: 4710
message TakeFurnitureMakeRsp {
    FurnitureMakeSlot furniture_make_slot = 11;
    uint32 make_id = 7;
    repeated ItemParam MDJJBOAANKF = 4;
    int32 retcode = 10;
    repeated ItemParam BNCLNGJLJIA = 2;
}

// CmdId: 4309
message TakeHuntingOfferReq {
    uint32 city_id = 3;
    HuntingPair hunting_pair = 12;
}

// CmdId: 4316
message TakeHuntingOfferRsp {
    int32 retcode = 10;
    uint32 city_id = 1;
    HuntingPair hunting_pair = 12;
}

// CmdId: 1907
message TakeInvestigationRewardReq {
    uint32 id = 6;
}

// CmdId: 1915
message TakeInvestigationRewardRsp {
    uint32 id = 6;
    int32 retcode = 11;
}

// CmdId: 1911
message TakeInvestigationTargetRewardReq {
    uint32 quest_id = 11;
}

// CmdId: 1930
message TakeInvestigationTargetRewardRsp {
    uint32 quest_id = 9;
    int32 retcode = 15;
}

// CmdId: 664
message TakeMaterialDeleteReturnReq {
    MaterialDeleteReturnType type = 10;
}

// CmdId: 700
message TakeMaterialDeleteReturnRsp {
    int32 retcode = 8;
}

// CmdId: 675
message TakeoffEquipReq {
    uint64 avatar_guid = 12;
    uint32 slot = 4;
}

// CmdId: 646
message TakeoffEquipRsp {
    uint32 slot = 5;
    uint64 avatar_guid = 8;
    int32 retcode = 11;
}

// CmdId: 2905
message TakeOfferingLevelRewardReq {
    uint32 offering_id = 5;
    uint32 level = 9;
}

// CmdId: 2922
message TakeOfferingLevelRewardRsp {
    uint32 offering_id = 2;
    int32 retcode = 10;
    repeated ItemParam item_list = 1;
    uint32 take_level = 6;
}

// CmdId: 164
message TakePlayerLevelRewardReq {
    uint32 level = 2;
}

// CmdId: 200
message TakePlayerLevelRewardRsp {
    int32 retcode = 1;
    uint32 reward_id = 4;
    uint32 level = 5;
}

// CmdId: 5617
message TakeRegionSearchRewardReq {
    uint32 id = 9;
    uint32 search_id = 4;
}

// CmdId: 5649
message TakeRegionSearchRewardRsp {
    uint32 search_id = 6;
    int32 retcode = 8;
    uint32 id = 13;
}

// CmdId: 4122
message TakeResinCardDailyRewardReq {
    uint32 product_config_id = 5;
}

// CmdId: 4120
message TakeResinCardDailyRewardRsp {
    uint32 product_config_id = 14;
    int32 retcode = 1;
    repeated ItemParam item_vec = 12;
}

// CmdId: 5067
message TakeReunionFirstGiftRewardReq {
}

// CmdId: 5099
message TakeReunionFirstGiftRewardRsp {
    int32 reward_id = 11;
    int32 retcode = 9;
}

// CmdId: 5071
message TakeReunionMissionRewardReq {
    uint32 reward_id = 8;
    uint32 reward_index = 4;
    uint32 mission_id = 9;
}

// CmdId: 5100
message TakeReunionMissionRewardRsp {
    uint32 reward_index = 7;
    uint32 reward_id = 10;
    int32 retcode = 5;
    ReunionMissionInfo mission_info = 12;
}

// CmdId: 5095
message TakeReunionSignInRewardReq {
    uint32 config_id = 2;
    uint32 reward_day = 11;
}

// CmdId: 5072
message TakeReunionSignInRewardRsp {
    int32 retcode = 15;
    ReunionSignInInfo sign_in_info = 9;
}

// CmdId: 5092
message TakeReunionWatcherRewardReq {
    uint32 mission_id = 12;
    uint32 watcher_id = 10;
}

// CmdId: 5086
message TakeReunionWatcherRewardRsp {
    uint32 mission_id = 9;
    uint32 watcher_id = 12;
    int32 retcode = 14;
}

message TanukiTravelActivityDetailInfo {
    repeated TanukiTravelLevelData tanuki_travel_level_data_list = 1;
    bool is_content_closed = 11;
    uint32 finished_level_index = 13;
}

message TanukiTravelActivityInfo {
	uint32 finished_level_index = 11;
	bool left_monsters = 2;
	repeated TanukiTravelLevelData tanukiTravelLevelDataList = 6;
}

// CmdId: 8503
message TanukiTravelFinishGuideQuestNotify {
    uint32 activity_id = 1;
}

message TanukiTravelLevelData {
    uint32 route_id = 12;
    bool is_open = 7;
    bool is_finish = 11;
}

message TaskVar {
    repeated int32 value_list = 15;
    uint32 key = 10;
}

// CmdId: 107
message TaskVarNotify {
    repeated TaskVar task_var_list = 1;
}

message TeamChainChooseAvatarInfo {
    bool is_trial_avatar = 5;
    uint32 avatar_id = 1;
}

message TeamChainChooseTeamInfo {
    repeated TeamChainChooseAvatarInfo avatar_info_list = 15;
    repeated uint32 skill_no_list = 8;
}

message TeamChainDetailInfo {
    repeated TeamChainStageData stage_data_list = 14;
    bool is_token_costume_reward = 3;
}

// CmdId: 24485
message TeamChainDungeonInfoNotify {
    uint32 stage_id = 1;
    repeated uint32 skill_no_list = 5;
}

// CmdId: 22209
message TeamChainEnterDungeonReq {
    uint32 stage_id = 7;
    repeated TeamChainChooseTeamInfo team_info_list = 12;
    uint32 difficulty = 3;
}

// CmdId: 20950
message TeamChainEnterDungeonRsp {
    int32 retcode = 7;
}

// CmdId: 24527
message TeamChainRestartDungeonReq {
    repeated TeamChainChooseTeamInfo team_info_list = 8;
}

// CmdId: 21962
message TeamChainRestartDungeonRsp {
    int32 retcode = 4;
}

message TeamChainSettleInfo {
    uint32 difficulty = 12;
    uint32 total_score = 8;
    uint32 stage_id = 1;
    bool is_new_record = 9;
    repeated uint32 score_list = 6;
}

message TeamChainStageData {
    uint32 best_score = 6;
    uint32 stage_id = 10;
    bool is_open = 3;
}

// CmdId: 22079
message TeamChainTakeCostumeRewardReq {
}

// CmdId: 22075
message TeamChainTakeCostumeRewardRsp {
    int32 retcode = 4;
}

message TeamEnterSceneInfo {
    uint32 team_entity_id = 11;
    AbilitySyncStateInfo team_ability_info = 2;
    AbilityControlBlock ability_control_block = 5;
}

message TeamEntityInfo {
    uint32 team_entity_id = 6;
    AbilitySyncStateInfo team_ability_info = 13;
    uint32 authority_peer_id = 9;
}

// CmdId: 1046
message TeamResonanceChangeNotify {
    repeated AvatarTeamResonanceInfo info_list = 9;
}

// CmdId: 6156
message ToTheMoonAddObstacleReq {
    ToTheMoonObstacleInfo obstacle = 14;
    uint32 scene_id = 7;
    int32 query_id = 12;
    bool use_edge = 10;
}

// CmdId: 6141
message ToTheMoonAddObstacleRsp {
    int32 retcode = 6;
    int32 query_id = 7;
    DynamicNodes dynamic_nodes = 3;
}

// CmdId: 6176
message ToTheMoonEnterSceneReq {
    uint32 scene_id = 5;
    uint32 version = 1;
}

// CmdId: 6116
message ToTheMoonEnterSceneRsp {
    int32 retcode = 11;
}

message ToTheMoonObstacleInfo {
    enum ShapeType {

        OBSTACLE_SHAPE_CAPSULE = 0;
        OBSTACLE_SHAPE_BOX = 1;
    }
    int32 handle_id = 8;
    Vector center = 4;
    Vector half_extents = 10;
    MathQuaternion rotation = 14;
    ShapeType type = 2;
}

// CmdId: 6163
message ToTheMoonObstaclesModifyNotify {
    repeated ToTheMoonObstacleInfo add_obstacles = 8;
    uint32 scene_id = 15;
    repeated int32 remove_obstacle_ids = 7;
    bool use_edge = 2;
}

// CmdId: 6189
message ToTheMoonPingNotify {
}

// CmdId: 6190
message ToTheMoonQueryPathReq {
    enum OptionType {

        OPTION_NONE = 0;
        OPTION_NORMAL = 1;
    }
    enum OILPBFMHGMF {

        OILPBFMHGMF_CLASSIC = 0;
        OILPBFMHGMF_TENDENCY = 1;
        OILPBFMHGMF_ADAPTIVE = 2;
        OILPBFMHGMF_INFLECTION = 3;
    }
    enum EHFBKPBIGHA {

        EHFBKPBIGHA_ALL = 0;
        EHFBKPBIGHA_AIR = 1;
        EHFBKPBIGHA_WATER = 2;
    }
    OptionType query_type = 5;
    EHFBKPBIGHA NFLFEIDEBOE = 2;
    int32 fuzzy_range = 4;
    int32 query_id = 9;
    Vector destination_pos = 3;
    OILPBFMHGMF BADOBDOICOG = 1;
    Vector source_pos = 13;
    uint32 scene_id = 11;
    bool EGNOJKAHBJK = 12;
    bool EJOJKEHOEHA = 10;
}

// CmdId: 6196
message ToTheMoonQueryPathRsp {
    enum PathStatusType {

        STATUS_FAIL = 0;
        STATUS_SUCC = 1;
        STATUS_PARTIAL = 2;
    }
    PathStatusType query_status = 12;
    repeated int32 level = 7;
    int32 query_id = 15;
    repeated Vector corners = 9;
    repeated int64 index = 10;
    int32 retcode = 5;
}

// CmdId: 6172
message ToTheMoonRemoveObstacleReq {
    uint32 scene_id = 10;
    int32 query_id = 8;
    int32 handle = 9;
}

// CmdId: 6192
message ToTheMoonRemoveObstacleRsp {
    int32 retcode = 10;
    DynamicNodes dynamic_nodes = 12;
    int32 query_id = 4;
}

// CmdId: 2472
message TowerAllDataReq {
    bool is_interact = 7;
}

// CmdId: 2492
message TowerAllDataRsp {
    uint32 DPKOCIDIHEI = 10;
    bool is_finished_entrance_floor = 4;
    map<uint32, uint32> OAFKGDGFFEO = 1;
    uint32 AJKNPOGBLDG = 6;
    bool is_first_interact = 11;
    uint32 EDGJPPKNHJE = 5;
    int32 retcode = 13;
    uint32 PHCNCLHJFBM = 8;
    uint32 KPJMJMPPPGK = 12;
    uint32 NKMMGNAGOOA = 15;
    TowerMonthlyBrief last_schedule_monthly_brief = 1890;
    repeated TowerFloorRecord tower_floor_record_list = 2;
    TowerMonthlyBrief monthly_brief = 7;
    map<uint32, uint32> OJGBCIONMOL = 3;
    uint32 GMMJNDFMHAM = 9;
    uint32 MDANKJCGMIN = 1783;
    TowerCurLevelRecord cur_level_record = 14;
}

// CmdId: 2490
message TowerBriefDataNotify {
    uint32 MDANKJCGMIN = 4;
    uint32 EBEDFHGAGEA = 14;
    uint32 DPKOCIDIHEI = 1;
    uint32 EDGJPPKNHJE = 8;
    bool is_finished_entrance_floor = 11;
    uint32 HNOACOEEGMH = 6;
    uint32 IHAJGIFPGAI = 5;
}

// CmdId: 2412
message TowerBuffSelectReq {
    uint32 tower_buff_id = 2;
}

// CmdId: 2465
message TowerBuffSelectRsp {
    uint32 tower_buff_id = 13;
    int32 retcode = 11;
}

message TowerCurLevelRecord {
    bool is_empty = 12;
    repeated TowerTeam tower_team_list = 14;
    bool is_upper_part = 1;
    repeated uint32 buff_id_list = 13;
    uint32 NDMAOJGHOGG = 5;
    uint32 FHLJPMEJNAJ = 6;
}

// CmdId: 2489
message TowerCurLevelRecordChangeNotify {
    TowerCurLevelRecord cur_level_record = 7;
}

// CmdId: 2476
message TowerDailyRewardProgressChangeNotify {
    uint32 NKMMGNAGOOA = 4;
    uint32 GMMJNDFMHAM = 3;
}

// CmdId: 2459
message TowerEnterLevelReq {
    uint32 enter_point_id = 13;
}

// CmdId: 2478
message TowerEnterLevelRsp {
    repeated uint32 tower_buff_id_list = 7;
    uint32 level_index = 5;
    uint32 floor_id = 9;
    int32 retcode = 1;
}

message TowerFightRecordPair {
    uint32 avatar_id = 13;
    uint32 data = 15;
}

message TowerFloorRecord {
    repeated TowerLevelRecord passed_level_record_list = 5;
    uint32 floor_id = 15;
    uint32 floor_star_reward_progress = 14;
    map<uint32, uint32> passed_level_map = 7;
}

// CmdId: 2496
message TowerFloorRecordChangeNotify {
    bool is_finished_entrance_floor = 4;
    repeated TowerFloorRecord tower_floor_record_list = 13;
}

// CmdId: 2451
message TowerGetFloorStarRewardReq {
    uint32 floor_id = 15;
}

// CmdId: 2439
message TowerGetFloorStarRewardRsp {
    int32 retcode = 11;
    uint32 floor_id = 15;
}

// CmdId: 2481
message TowerLevelEndNotify {
    uint32 NFPEACBMIHL = 9;
    bool is_success = 11;
    repeated ItemParam reward_item_list = 1;
    uint32 NMFAPIENEMG = 2;
    repeated uint32 finished_star_cond_list = 6;
}

message TowerLevelRecord {
    repeated uint32 satisfied_cond_list = 11;
    uint32 level_id = 6;
}

message TowerLevelStarCondData {
    uint32 KIGONGLABHC = 2;
    uint32 DLEMDNGLGAP = 4;
    bool FGBFALDMDAB = 3;
    bool KPLBFMBGPAP = 9;
}

// CmdId: 2470
message TowerLevelStarCondNotify {
    uint32 floor_id = 12;
    uint32 level_index = 15;
    repeated TowerLevelStarCondData cond_data_list = 14;
}

// CmdId: 2435
message TowerMiddleLevelChangeTeamNotify {
}

message TowerMonthlyBrief {
    uint32 DPKOCIDIHEI = 12;
    uint32 PLMIFICPLGM = 2;
    uint32 HNOGBBLDHMH = 9;
    uint32 IJHGFNOICOH = 1;
}

message TowerMonthlyCombatRecord {
    TowerFightRecordPair JLHGMJPELLK = 8;
    TowerFightRecordPair BIOKNHKMKOP = 3;
    TowerFightRecordPair IFNNKJGBCMO = 13;
    TowerFightRecordPair FDAPFMFBAAE = 14;
    TowerFightRecordPair DGEHFCNNEBL = 10;
    repeated TowerFightRecordPair most_reveal_avatar_list = 7;
}

message TowerMonthlyDetail {
    TowerMonthlyBrief monthly_brief = 14;
    TowerMonthlyCombatRecord monthly_combat_record = 4;
}

// CmdId: 2433
message TowerRecordHandbookReq {
}

// CmdId: 2483
message TowerRecordHandbookRsp {
    repeated TowerMonthlyDetail monthly_detail_list = 4;
    int32 retcode = 5;
}

// CmdId: 2477
message TowerSurrenderReq {
}

// CmdId: 2486
message TowerSurrenderRsp {
    int32 retcode = 14;
}

message TowerTeam {
    uint32 tower_team_id = 2;
    repeated uint64 avatar_guid_list = 1;
}

// CmdId: 2456
message TowerTeamSelectReq {
    uint32 floor_id = 14;
    repeated TowerTeam tower_team_list = 5;
}

// CmdId: 2441
message TowerTeamSelectRsp {
    int32 retcode = 14;
}

message TrackingIOInfo {
    string BFMFMEMDFKI = 13;
    string IEJAJOEMHHH = 12;
    string BACNDOEIJAI = 2;
    string JFALHGNODBE = 6;
    string ODNKGDEPIJP = 7;
    string MFCOPCCIKCA = 8;
    string KFBANNMIEGD = 14;
}

message TreasureMapActivityDetailInfo {
    repeated TreasureMapRegionInfo region_info_list = 6;
    uint32 currency_num = 1;
    bool is_mp_challenge_touched = 4;
    repeated TreasureMapBonusChallengeInfo bonus_challenge_list = 11;
    uint32 MEHOKJOPMBN = 13;
    uint32 active_region_index = 15;
    uint32 treasure_close_time = 3;
    uint32 KKLLPPPLKMM = 7;
    uint32 OPDGECDFNDK = 8;
}

message TreasureMapBonusChallengeInfo {
    uint32 solution_id = 2;
    map<uint32, bool> fragment_map = 14;
    bool is_done = 15;
    bool is_active = 3;
    uint32 config_id = 1;
}

// CmdId: 2149
message TreasureMapBonusChallengeNotify {
    TreasureMapBonusChallengeInfo info = 13;
}

// CmdId: 2175
message TreasureMapCurrencyNotify {
    uint32 currency_num = 8;
}

message TreasureMapDetectorData {
    uint32 radius = 1;
    uint32 region_id = 2;
    bool is_region_detected = 3;
    Vector center_pos = 13;
    repeated Vector spot_list = 9;
}

// CmdId: 4262
message TreasureMapDetectorDataNotify {
    TreasureMapDetectorData data = 14;
}

// CmdId: 2168
message TreasureMapGuideTaskDoneNotify {
}

// CmdId: 8750
message TreasureMapHostInfoNotify {
    repeated uint32 mp_challenge_region_list = 10;
}

// CmdId: 2083
message TreasureMapMpChallengeNotify {
}

// CmdId: 2136
message TreasureMapPreTaskDoneNotify {
}

// CmdId: 2090
message TreasureMapRegionActiveNotify {
    uint32 active_region_index = 13;
}

message TreasureMapRegionInfo {
    bool AKDHMDINPHC = 13;
    uint32 region_radius = 11;
    uint32 IGINBLLKCPJ = 10;
    Vector region_center_pos = 5;
    bool KODNMGNPCCE = 9;
    uint32 DPPENDNMMOE = 4;
    uint32 scene_id = 8;
    uint32 start_time = 14;
    uint32 region_id = 7;
}

// CmdId: 2117
message TreasureMapRegionInfoNotify {
    TreasureMapRegionInfo region_info = 1;
}

message TreasureSeelieActivityDetailInfo {
    repeated TreasureSeelieRegionData region_data_list = 15;
    uint32 treasure_close_time = 11;
    bool is_content_closed = 5;
}

// CmdId: 21251
message TreasureSeelieCollectOrbsNotify {
    uint32 current_num = 7;
    uint32 total_num = 13;
}

message TreasureSeelieRegionData {
    uint32 open_time = 1;
    bool is_open = 8;
    float region_radius = 10;
    uint32 DAMNDJGCJML = 2;
    uint32 region_id = 9;
    bool is_done = 3;
    uint32 HLLIGJNEOEC = 6;
    uint32 LFFICPADEFI = 13;
    Vector region_center_pos = 7;
    uint32 scene_id = 14;
}

message TrialAvatarActivityDetailInfo {
    repeated TrialAvatarActivityRewardDetailInfo reward_info_list = 9;
}

message TrialAvatarActivityRewardDetailInfo {
    uint32 reward_id = 8;
    bool AOLLLBPODHH = 7;
    bool ODMFBOGNBNK = 5;
    uint32 trial_avatar_index_id = 1;
}

// CmdId: 2089
message TrialAvatarFirstPassDungeonNotify {
    uint32 trial_avatar_index_id = 5;
}

message TrialAvatarGrantRecord {
    uint32 CJJJCOPJEDA = 1;
    uint32 NHBDGGGMKDE = 2;
}

// CmdId: 2127
message TrialAvatarInDungeonIndexNotify {
    uint32 trial_avatar_index_id = 1;
}

message TrialAvatarInfo {
    uint32 trial_avatar_id = 1;
    repeated Item item_list = 2;
    TrialAvatarGrantRecord grant_record = 3;
}

message TrifleItem {
	uint32 item_id = 1;
	uint64 guid = 2;
	oneof detail {
		_material material = 5;
		_equip equip = 6;
		_furniture furniture = 7;
	}
}

// CmdId: 333
message TriggerCreateGadgetToEquipPartNotify {
    string equip_part = 8;
    uint32 entity_id = 5;
    uint32 gadget_id = 15;
    uint32 gadget_entity_id = 10;
}

// CmdId: 8674
message TriggerRoguelikeCurseNotify {
    uint32 CEECGMGGGED = 4;
    uint32 OCBPDFLBFPK = 1;
    bool is_trigger_curse = 13;
    repeated uint32 effect_param_list = 5;
}

// CmdId: 8307
message TriggerRoguelikeRuneReq {
    uint32 rune_id = 6;
}

// CmdId: 8163
message TriggerRoguelikeRuneRsp {
    uint32 rune_id = 5;
    uint32 available_count = 2;
    int32 retcode = 13;
}

// CmdId: 6236
message TryCustomDungeonReq {
    uint32 room_id = 15;
}

// CmdId: 6231
message TryCustomDungeonRsp {
    uint32 room_id = 7;
    int32 retcode = 3;
}

// CmdId: 4504
message TryEnterHomeReq {
    uint32 target_point = 7;
    bool EIEPKFHNILM = 2;
    bool OJAFECKPAJE = 14;
    uint32 target_uid = 13;
}

// CmdId: 4744
message TryEnterHomeRsp {
    repeated uint32 param_list = 6;
    uint32 target_uid = 9;
    int32 retcode = 13;
}

// CmdId: 8366
message TryEnterNextRogueDiaryDungeonReq {
}

// CmdId: 8947
message TryEnterNextRogueDiaryDungeonRsp {
    int32 retcode = 5;
}

// CmdId: 8230
message TryInterruptRogueDiaryDungeonReq {
}

// CmdId: 8267
message TryInterruptRogueDiaryDungeonRsp {
    int32 retcode = 8;
}

message UgcActivityDetailInfo {
    bool ACDJAAHCMNO = 1;
    bool LCJDIJCIGEF = 11;
    uint32 custom_dungeon_group_id = 12;
    repeated OfficialCustomDungeon official_custom_dungeon_list = 9;
}

message UgcMusicBriefInfo {
    bool OPKICKNECFH = 12;
    uint32 IMLAOIECPAF = 7;
    uint32 AEFAIFLGINI = 1145;
    uint32 JLENMFBAPHN = 3;
    bool is_psn_platform = 9;
    uint32 version = 11;
    bool PBOHPBBOLMA = 6;
    bool FIMEFIBGPBM = 13;
    uint64 import_from_ugc_guid = 14;
    uint64 ugc_guid = 5;
    uint32 LJLNNDMKBHD = 898;
    repeated uint32 KEKFLIHPMDE = 1457;
    uint32 CKGODIPLAEP = 10;
    uint32 music_id = 15;
    uint32 EFIMGDCDJEI = 1;
    string creator_nickname = 4;
    uint32 AEOJLGHLMBO = 602;
    uint32 LNPANKACJKB = 2;
    uint32 max_score = 8;
    repeated uint32 HLBMBEECICD = 1858;
    uint32 NMCPJCNAJFC = 1292;
}

message UgcMusicNote {
    uint32 end_time = 10;
    uint32 start_time = 15;
}

message UgcMusicRecord {
    repeated UgcMusicTrack music_track_list = 4;
    uint32 music_id = 9;
}

message UgcMusicTrack {
    repeated UgcMusicNote music_note_list = 15;
}

// CmdId: 6331
message UgcNotify {
    bool ACDJAAHCMNO = 12;
    bool NNMGKMBNHFH = 11;
    bool KOIGBBAOMHF = 2;
    bool JKCCFGGGKGA = 5;
}

message Uint32Pair {
    uint32 key = 1;
    uint32 value = 2;
}

// CmdId: 3443
message UnfreezeGroupLimitNotify {
    uint32 point_id = 4;
    uint32 scene_id = 10;
}

message UnionCmd {
    uint32 message_id = 1;
    bytes body = 3;
}

// CmdId: 75
message UnionCmdNotify {
    repeated UnionCmd cmd_list = 2;
}

// CmdId: 1090
message UnlockAvatarTalentReq {
    uint32 talent_id = 4;
    uint64 avatar_guid = 3;
}

// CmdId: 1096
message UnlockAvatarTalentRsp {
    int32 retcode = 11;
    uint64 avatar_guid = 13;
    uint32 talent_id = 4;
}

// CmdId: 1992
message UnlockCoopChapterReq {
    uint32 chapter_id = 15;
}

// CmdId: 1986
message UnlockCoopChapterRsp {
    int32 retcode = 1;
    uint32 chapter_id = 8;
}

// CmdId: 4562
message UnlockedFurnitureFormulaDataNotify {
    repeated uint32 furniture_id_list = 1;
    bool is_all = 13;
}

// CmdId: 4857
message UnlockedFurnitureSuiteDataNotify {
    repeated uint32 furniture_suite_id_list = 14;
    bool is_all = 13;
}

// CmdId: 4070
message UnlockNameCardNotify {
    uint32 name_card_id = 6;
}

// CmdId: 429
message UnlockPersonalLineReq {
    uint32 personal_line_id = 15;
}

// CmdId: 428
message UnlockPersonalLineRsp {
    uint32 personal_line_id = 8;
    int32 retcode = 13;
    oneof param {
        uint32 level = 3;
        uint32 chapter_id = 2;
    }
}

// CmdId: 3285
message UnlockTransPointReq {
    uint32 point_id = 9;
    uint32 scene_id = 15;
}

// CmdId: 3090
message UnlockTransPointRsp {
    int32 retcode = 2;
}

// CmdId: 245
message UnmarkEntityInMinMapNotify {
    uint32 entity_id = 14;
}

// CmdId: 899
message UpdateAbilityCreatedMovingPlatformNotify {
    enum OpType {

        OP_NONE = 0;
        OP_ACTIVATE = 1;
        OP_DEACTIVATE = 2;
    }
    uint32 entity_id = 10;
    OpType op_type = 6;
}

// CmdId: 4018
message UpdatePlayerShowAvatarListReq {
    repeated uint32 show_avatar_id_list = 13;
    bool is_show_avatar = 8;
}

// CmdId: 4058
message UpdatePlayerShowAvatarListRsp {
    int32 retcode = 5;
    bool is_show_avatar = 6;
    repeated uint32 show_avatar_id_list = 2;
}

// CmdId: 4040
message UpdatePlayerShowNameCardListReq {
    repeated uint32 show_name_card_id_list = 11;
}

// CmdId: 4045
message UpdatePlayerShowNameCardListRsp {
    int32 retcode = 1;
    repeated uint32 show_name_card_id_list = 5;
}

// CmdId: 4054
message UpdatePS4BlockListReq {
    repeated string psn_id_list = 5;
}

// CmdId: 4043
message UpdatePS4BlockListRsp {
    int32 retcode = 4;
}

// CmdId: 4042
message UpdatePS4FriendListNotify {
    repeated string psn_id_list = 7;
}

// CmdId: 4052
message UpdatePS4FriendListReq {
    repeated string psn_id_list = 7;
}

// CmdId: 4044
message UpdatePS4FriendListRsp {
    int32 retcode = 12;
    repeated string psn_id_list = 5;
}

// CmdId: 39
message UpdateRedPointNotify {
    repeated RedPointData red_point_list = 3;
}

// CmdId: 5081
message UpdateReunionWatcherNotify {
    ReunionWatcherInfo watcher_info = 6;
    uint32 mission_id = 15;
}

// CmdId: 8082
message UpdateSalvageBundleMarkReq {
    uint32 stage_id = 15;
    uint32 challenge_type = 12;
}

// CmdId: 8139
message UpdateSalvageBundleMarkRsp {
    int32 retcode = 13;
    uint32 stage_id = 8;
    uint32 challenge_type = 1;
}

// CmdId: 8436
message UpgradeRoguelikeShikigamiReq {
    uint32 upgrade_level = 3;
    uint32 shikigami_group_id = 6;
}

// CmdId: 8968
message UpgradeRoguelikeShikigamiRsp {
    int32 retcode = 12;
    uint32 shikigami_group_id = 8;
    uint32 cur_level = 5;
}

// CmdId: 672
message UseItemReq {
    uint64 target_guid = 12;
    uint64 guid = 11;
    bool is_enter_mp_dungeon_team = 2;
    uint32 option_idx = 14;
    uint32 count = 8;
}

// CmdId: 692
message UseItemRsp {
    uint32 option_idx = 13;
    uint32 item_id = 5;
    int32 retcode = 7;
    uint64 target_guid = 3;
    uint64 guid = 8;
}

// CmdId: 5209
message UseMiracleRingReq {
    Vector rot = 14;
    Vector pos = 6;
    uint32 miracle_ring_op_type = 11;
}

// CmdId: 5216
message UseMiracleRingRsp {
    uint32 miracle_ring_op_type = 10;
    int32 retcode = 3;
}

// CmdId: 4261
message UseWidgetCreateGadgetReq {
    Vector rot = 6;
    uint32 material_id = 10;
    Vector pos = 14;
}

// CmdId: 4290
message UseWidgetCreateGadgetRsp {
    int32 retcode = 1;
    uint32 material_id = 6;
}

// CmdId: 4284
message UseWidgetRetractGadgetReq {
    uint32 entity_id = 15;
}

// CmdId: 4256
message UseWidgetRetractGadgetRsp {
    uint32 entity_id = 12;
    int32 retcode = 6;
}

message Vector {
    float x = 1;
    float y = 2;
    float z = 3;
}

message Vector3Int {
    int32 x = 1;
    int32 y = 2;
    int32 z = 3;
}

message VectorPlane {
    float x = 1;
    float y = 2;
}

message VehicleInfo {
    repeated VehicleMember member_list = 1;
    uint32 owner_uid = 2;
    float cur_stamina = 3;
}

// CmdId: 886
message VehicleInteractReq {
    bool IOILPCOLCGM = 15;
    uint32 pos = 12;
    VehicleInteractType interact_type = 6;
    uint32 entity_id = 13;
}

// CmdId: 851
message VehicleInteractRsp {
    int32 retcode = 13;
    uint32 entity_id = 10;
    Vector MAKPDIBNPAP = 2;
    VehicleInteractType interact_type = 8;
    Vector DNJIMMEONNI = 5;
    VehicleMember member = 1;
    uint32 PDEPBDNGIAB = 4;
    uint32 gadget_id = 15;
}


message VehicleLocationInfo {
    repeated uint32 uid_list = 10;
    uint32 entity_id = 5;
    uint32 gadget_id = 12;
    Vector pos = 13;
    Vector rot = 14;
    uint32 owner_uid = 1;
    float KCCDNGMKBOB = 11;
    float MILGENBLEAK = 7;
}

message VehicleMember {
    uint32 uid = 1;
    uint64 avatar_guid = 2;
    uint32 pos = 3;
}

// CmdId: 835
message VehicleStaminaNotify {
    uint32 entity_id = 11;
    float cur_stamina = 10;
}

// CmdId: 4201
message ViewCodexReq {
    repeated CodexTypeData type_data_list = 12;
}

// CmdId: 4206
message ViewCodexRsp {
    int32 retcode = 11;
    repeated CodexTypeData type_data_list = 1;
    repeated uint32 recent_viewed_pushtips_list = 8;
    repeated uint32 LKGKDGLNMAG = 14;
    repeated uint32 COGOBHKCKAN = 10;
}

// CmdId: 8213
message ViewLanternProjectionLevelTipsReq {
    uint32 level_id = 4;
}

// CmdId: 8275
message ViewLanternProjectionLevelTipsRsp {
    int32 retcode = 1;
}

// CmdId: 8724
message ViewLanternProjectionTipsReq {
    bool is_input_tips = 9;
    ClientInputType input_type = 10;
}

// CmdId: 8155
message ViewLanternProjectionTipsRsp {
    int32 retcode = 11;
}

message VintageActivityDetailInfo {
    VintageBoothUsedItemData booth_data = 4;
    map<uint32, VintageHuntingStageData> hunting_stage_map = 3;
    map<uint32, VintageCampChallengeStageData> camp_stage_map = 1;
    VintageMarketInfo market_info = 5;
    bool is_content_closed = 15;
    map<uint32, VintagePresentStageData> present_stage_map = 12;
}

message VintageBoothUsedItemData {
    bool is_open = 7;
    uint32 gadget_id = 9;
}

message VintageCampChallengeLevelData {
    uint32 level_id = 2;
    uint32 stage_id = 7;
    bool is_finish = 9;
    bool is_open = 15;
}

message VintageCampChallengeStageData {
    uint32 open_time = 4;
    bool is_finish = 13;
    map<uint32, VintageCampChallengeLevelData> camp_level_map = 15;
    uint32 stage_id = 9;
    uint32 max_finished_level = 2;
    bool is_open = 6;
}

// CmdId: 24980
message VintageCampGroupBundleRegisterNotify {
    uint32 group_bundle_id = 10;
}

// CmdId: 24731
message VintageCampStageFinishNotify {
    uint32 stage_id = 10;
}

// CmdId: 20581
message VintageDecorateBoothReq {
    uint32 entity_id = 13;
    CustomGadgetTreeInfo combination_info = 7;
}

// CmdId: 23197
message VintageDecorateBoothRsp {
    int32 retcode = 5;
}

message VintageHuntingFirstStageInfo {
    uint32 BKPLONJEOAF = 12;
    uint32 AAFNJPABDDJ = 13;
    uint32 score = 15;
    uint32 CALCAHMEJGN = 1;
}

message VintageHuntingFirstStageSettleInfo {
    uint32 score = 13;
    uint32 AAFNJPABDDJ = 2;
    uint32 CALCAHMEJGN = 7;
    uint32 BKPLONJEOAF = 10;
}

message VintageHuntingSecondStageInfo {
    uint32 total_num = 15;
    uint32 capture_animal_num = 12;
    uint32 left_num = 2;
}

message VintageHuntingSecondStageSettleInfo {
    uint32 capture_animal_num = 9;
    map<uint32, uint32> animal_count_map = 11;
    uint32 total_num = 2;
}

message VintageHuntingStageData {
    uint32 stage_id = 4;
    uint32 open_time = 8;
    bool is_open = 15;
    uint32 record_value = 7;
    bool is_finish = 5;
}

// CmdId: 20722
message VintageHuntingStartGalleryReq {
    uint32 stage_id = 15;
}

// CmdId: 24058
message VintageHuntingStartGalleryRsp {
    int32 retcode = 3;
}

message VintageHuntingThirdStageInfo {
}

message VintageHuntingThirdStageSettleInfo {
    uint32 left_time = 7;
    bool is_success = 2;
}

message VintageMarketDealInfo {
    map<uint32, VintageMarketTraderInfo> trader_item_info_map = 9;
}

// CmdId: 21795
message VintageMarketDeliverItemReq {
    uint32 trader_id = 7;
    repeated ItemParam deliver_item_list = 15;
}

// CmdId: 22707
message VintageMarketDeliverItemRsp {
    uint32 trader_id = 6;
    int32 retcode = 9;
}

// CmdId: 24165
message VintageMarketDividendFinishNotify {
    uint32 MFMAKKFFAHP = 8;
    uint32 FCOMCAIMCGG = 3;
}

// CmdId: 21144
message VintageMarketFinishStorePlayReq {
    uint32 store_round = 3;
    repeated VintageMarketStoreOpInfo store_op_list = 9;
}

// CmdId: 24767
message VintageMarketFinishStorePlayRsp {
    uint32 store_round = 6;
    uint32 DJABGHKONIF = 14;
    repeated uint32 EGPKJCLKBCA = 2;
    uint32 DIJAEGLFOBL = 1;
    repeated uint32 KDCPKDLKBCA = 10;
    uint32 KFHGEEMNKHG = 13;
    int32 retcode = 9;
    repeated uint32 DADGLCIDMCC = 3;
    uint32 BFNNEEBOGIH = 8;
    map<uint32, uint32> store_income_map = 12;
}

message VintageMarketInfo {
    VintageMarketDealInfo deal_info = 7;
    uint32 IMIPPLHMKHE = 2047;
    bool IJCFOLFJOMB = 4;
    bool HDKNAEMIHNM = 1;
    bool DMELHENKHMM = 13;
    repeated uint32 unlock_strategy_list = 6;
    repeated uint32 BPBPNGMGGAG = 9;
    uint32 LBNGJLNFDIG = 1444;
    repeated uint32 AOLKLKEJGKK = 5;
    uint32 DJGLDCABOKM = 1546;
    repeated uint32 MACIEIECBAD = 1471;
    map<uint32, bool> bargain_info_map = 8;
    uint32 MKFNMHLNHNM = 12;
    repeated uint32 FOGLEAIAPIA = 11;
    bool PGFPCNHBPCL = 1863;
    bool ILLOKJKHLHL = 1274;
    bool BIOFCLPENKF = 3;
    repeated VintageMarketStoreInfo open_store_list = 14;
    bool LAICGEHFGOJ = 10;
    uint32 GPHBPEOJNNI = 15;
    bool CMOLCBGECOL = 940;
    uint32 store_round = 2;
}

// CmdId: 24538
message VintageMarketNpcEventFinishNotify {
    uint32 MFMAKKFFAHP = 2;
    uint32 FCOMCAIMCGG = 6;
    repeated uint32 unlock_strategy_list = 15;
}

// CmdId: 22355
message VintageMarketStartStorePlayReq {
    uint32 store_round = 14;
}

// CmdId: 21832
message VintageMarketStartStorePlayRsp {
    int32 retcode = 7;
    uint32 store_round = 8;
    uint32 HCINPOEALAH = 10;
    uint32 BPKMLMJPAMG = 2;
}

// CmdId: 23012
message VintageMarketStoreChooseStrategyReq {
    uint32 store_id = 9;
    repeated uint32 strategy_list = 5;
    repeated VintageMarketStoreOpInfo store_op_list = 4;
}

// CmdId: 21265
message VintageMarketStoreChooseStrategyRsp {
    int32 retcode = 8;
    uint32 store_id = 3;
    repeated uint32 strategy_list = 9;
}

message VintageMarketStoreInfo {
    repeated uint32 PLMNJFADJPF = 8;
    repeated uint32 FAHFMJNEMKB = 6;
    uint32 slot_count = 10;
    uint32 store_id = 4;
    repeated uint32 strategy_list = 9;
}

message VintageMarketStoreOpInfo {
    uint32 LBNGJLNFDIG = 7;
    uint32 store_id = 6;
    repeated uint32 strategy_list = 13;
    uint32 AHDCCAFBDLA = 1;
    repeated uint32 add_attr_list = 9;
}

// CmdId: 20862
message VintageMarketStoreUnlockSlotReq {
    uint32 store_id = 14;
}

// CmdId: 22742
message VintageMarketStoreUnlockSlotRsp {
    uint32 slot_count = 6;
    int32 retcode = 1;
    uint32 store_id = 4;
}

// CmdId: 20229
message VintageMarketStoreViewStrategyReq {
    uint32 strategy_id = 4;
    repeated uint32 strategy_list = 1;
}

// CmdId: 24388
message VintageMarketStoreViewStrategyRsp {
    uint32 strategy_id = 7;
    int32 retcode = 2;
    repeated uint32 strategy_list = 11;
}

message VintageMarketTraderInfo {
    repeated ItemParam available_item_list = 3;
    uint32 trader_id = 2;
}

// CmdId: 23825
message VintagePresentFinishNoify {
    uint32 present_id = 12;
}

// CmdId: 20166
message VintagePresentFinishNotify {
    uint32 present_id = 7;
}

message VintagePresentLevelData {
    bool is_open = 1;
    uint32 stage_id = 4;
    uint32 present_id = 10;
    bool is_finish = 12;
}

message VintagePresentStageData {
    uint32 stage_id = 12;
    bool is_open = 11;
    uint32 open_time = 15;
    map<uint32, VintagePresentLevelData> present_level_map = 3;
    bool is_finish = 4;
}

// CmdId: 2290
message WatcherAllDataNotify {
    repeated uint32 watcher_list = 6;
}

// CmdId: 2296
message WatcherChangeNotify {
    repeated uint32 KINFJNPHEMA = 13;
    repeated uint32 CGKECCAIIED = 5;
}

// CmdId: 2289
message WatcherEventNotify {
    uint32 add_progress = 3;
    uint32 watcher_id = 12;
}

// CmdId: 2216
message WatcherEventStageNotify {
    uint32 watcher_id = 14;
    uint32 add_progress = 8;
    uint32 stage = 11;
}

// CmdId: 2276
message WatcherEventTypeNotify {
    uint32 add_progress = 4;
    repeated uint32 param_list = 12;
    uint32 watcher_trigger_type = 11;
}

message WaterSpiritActivityDetailInfo {
    uint32 mp_play_id = 7;
    uint32 region_search_id = 8;
    map<uint32, uint32> search_time_map = 14;
}

// CmdId: 2143
message WaterSpritePhaseFinishNotify {
}

message Weapon {
    uint32 level = 1;
    uint32 exp = 2;
    uint32 promote_level = 3;
    map<uint32, uint32> affix_map = 4;
}

// CmdId: 681
message WeaponAwakenReq {
    uint64 target_weapon_guid = 10;
    uint64 item_guid = 14;
    map<uint32, uint32> affix_level_map = 11;
}

// CmdId: 670
message WeaponAwakenRsp {
    map<uint32, uint32> MCLMGECDMHI = 11;
    int32 retcode = 9;
    map<uint32, uint32> KKDIFJGIAMN = 14;
    uint32 target_weapon_awaken_level = 4;
    uint64 avatar_guid = 7;
    uint64 target_weapon_guid = 13;
}

// CmdId: 677
message WeaponPromoteReq {
    uint64 target_weapon_guid = 7;
}

// CmdId: 686
message WeaponPromoteRsp {
    uint64 target_weapon_guid = 4;
    uint32 BDLCGNNPHLJ = 3;
    uint32 AKLAKDIDLBE = 9;
    int32 retcode = 6;
}

// CmdId: 642
message WeaponUpgradeReq {
    repeated ItemParam item_param_list = 10;
    uint64 target_weapon_guid = 6;
    repeated uint64 food_weapon_guid_list = 7;
}

// CmdId: 694
message WeaponUpgradeRsp {
    uint64 target_weapon_guid = 15;
    int32 retcode = 2;
    uint32 old_level = 14;
    repeated ItemParam item_param_list = 5;
    uint32 cur_level = 10;
}

// CmdId: 665
message WearEquipReq {
    uint64 equip_guid = 7;
    uint64 avatar_guid = 6;
}

// CmdId: 699
message WearEquipRsp {
    uint64 equip_guid = 8;
    uint64 avatar_guid = 9;
    int32 retcode = 15;
}

message WeatherInfo {
    uint32 weather_area_id = 1;
}

message WeatherWizardData {
    uint32 shield_value = 7;
}

message WeekendDjinnInfo {
    Vector rot = 15;
    Vector pos = 6;
}

message WeeklyBossResinDiscountInfo {
    uint32 discount_num = 1;
    uint32 discount_num_limit = 2;
    uint32 resin_cost = 3;
    uint32 original_resin_cost = 4;
}

// CmdId: 4255
message WidgetActiveChangeNotify {
    repeated WidgetSlotData widget_data_list = 3;
}

message WidgetCameraInfo {
    uint32 target_entity_id = 1;
}

// CmdId: 4285
message WidgetCaptureAnimalReq {
    uint32 material_id = 2;
    Vector pos = 1;
    uint32 entity_id = 13;
}

// CmdId: 4277
message WidgetCaptureAnimalRsp {
    uint32 entity_id = 10;
    Vector pos = 6;
    int32 retcode = 1;
    uint32 material_id = 8;
}

message WidgetCoolDownData {
    bool is_success = 8;
    uint32 id = 6;
    uint64 cool_down_time = 7;
}

// CmdId: 4286
message WidgetCoolDownNotify {
    repeated WidgetCoolDownData PJIEGBPGGGA = 15;
    repeated WidgetCoolDownData PDHMECJOMAB = 2;
}

message WidgetCreateLocationInfo {
    Vector pos = 4;
    Vector rot = 1;
}

message WidgetCreatorInfo {
    WidgetCreateLocationInfo location_info = 12;
    WidgetCreatorOpType op_type = 5;
    uint32 entity_id = 8;
}

// CmdId: 4254
message WidgetDoBagReq {
    uint32 material_id = 12;
    oneof op_info {
        WidgetCreateLocationInfo location_info = 486;
        WidgetCreatorInfo widget_creator_info = 694;
    }
}

// CmdId: 4279
message WidgetDoBagRsp {
    int32 retcode = 8;
    uint32 material_id = 9;
}

// CmdId: 4288
message WidgetGadgetAllDataNotify {
    repeated WidgetGadgetData widget_gadget_data = 10;
}

message WidgetGadgetData {
    uint32 gadget_id = 10;
    repeated uint32 gadget_entity_id_list = 15;
}

// CmdId: 4278
message WidgetGadgetDataNotify {
    WidgetGadgetData widget_gadget_data = 6;
}

// CmdId: 4260
message WidgetGadgetDestroyNotify {
    uint32 entity_id = 3;
}

// CmdId: 3246
message WidgetQuickHitTreeReq {
    repeated HitTreeInfo hit_tree_info_list = 7;
}

// CmdId: 3169
message WidgetQuickHitTreeRsp {
    int32 retcode = 3;
}

// CmdId: 4281
message WidgetReportReq {
    bool MDJNBGFKEBO = 15;
    uint32 material_id = 10;
    bool BKCPLOBJILI = 2;
    bool KCMEGDBFCAH = 9;
    uint32 weather_wizard_shield_value = 14;
}

// CmdId: 4271
message WidgetReportRsp {
    uint32 material_id = 15;
    int32 retcode = 8;
}

// CmdId: 4257
message WidgetSlotChangeNotify {
    WidgetSlotOp op = 14;
    WidgetSlotData slot = 2;
}

message WidgetSlotData {
    uint32 material_id = 11;
    WidgetSlotTag tag = 5;
    uint32 cd_over_time = 6;
    bool is_active = 12;
}

message WidgetSorushInfo {
    uint32 slot = 10;
    Vector pos = 7;
    bool DJHLJCJAIEG = 8;
    bool CPAPAEPOFOE = 4;
    bool KIKBFGKBJKP = 6;
    Vector rot = 11;
}

message WidgetThunderBirdFeatherInfo {
    repeated uint32 entity_id_list = 14;
}

// CmdId: 6051
message WidgetUpdateExtraCDReq {
    uint32 cd_group = 15;
    WIDGET_EXTRA_CD_TYPE extra_cd_type = 9;
    uint32 material_id = 1;
}

// CmdId: 5944
message WidgetUpdateExtraCDRsp {
    int32 retcode = 15;
    uint32 cd_group = 5;
    WidgetCoolDownData cool_data = 14;
    uint32 material_id = 9;
    WIDGET_EXTRA_CD_TYPE extra_cd_type = 8;
}

// CmdId: 4252
message WidgetUseAttachAbilityGroupChangeNotify {
    uint32 material_id = 3;
    bool is_attach = 9;
}

// CmdId: 6035
message WidgetWeatherWizardDataNotify {
    uint32 shield_value = 6;
}

message WindFieldDetailInfo {
    repeated WindFieldStageInfo stage_info_list = 3;
}

message WindFieldDungeonSettleInfo {
    repeated uint32 BLIJCEPMNMA = 1;
    repeated uint32 DMJAIIOOGDA = 15;
    WindFieldDungeonFailReason fail_reason = 8;
}

// CmdId: 5597
message WindFieldGalleryChallengeInfoNotify {
    bool is_success = 3;
    uint32 FKLLFAPMCOB = 12;
    uint32 HBEFCMIOHCN = 13;
    bool is_start = 9;
    uint32 FJDAJPLIFIG = 15;
    uint32 DIFGKMHHIMF = 11;
    uint32 BKIIHPOAPNA = 10;
}

// CmdId: 5598
message WindFieldGalleryInfoNotify {
    uint32 HBEFCMIOHCN = 2;
    uint32 DIFGKMHHIMF = 7;
    uint32 FKLLFAPMCOB = 12;
    uint32 FJBKBMHJMMM = 10;
    uint32 FJDAJPLIFIG = 8;
    uint32 BKLMMCLHEHK = 4;
    uint32 BKIIHPOAPNA = 1;
    uint32 BKECHEIMCGP = 13;
}

// CmdId: 24841
message WindFieldRestartDungeonReq {
}

// CmdId: 20488
message WindFieldRestartDungeonRsp {
    int32 retcode = 10;
}

message WindFieldStageInfo {
    bool is_open = 1;
    uint32 stage_id = 7;
    uint32 open_time = 10;
}

// CmdId: 1163
message WindSeedClientNotify {
    message RefreshNotify {
        uint32 refresh_num = 7;
    }
    message AddWindBulletNotify {
        Vector seed_pos = 8;
        uint32 JGDLMEEEBIM = 10;
        uint32 ALLPEAAMOLB = 3;
    }
    message AreaNotify {
        uint32 area_id = 3;
        uint32 area_type = 2;
        bytes area_code = 1;
    }
    oneof notify {
        RefreshNotify refresh_notify = 12;
        AddWindBulletNotify add_wind_bullet_notify = 11;
        AreaNotify area_notify = 2;
    }
}

// CmdId: 23435
message WindSeedType1Notify {
    bytes payload = 12;
    uint32 config_id = 7;
}

// CmdId: 24656
message WindSeedType2Notify {
    bytes payload = 10;
    uint32 config_id = 1;
}

// CmdId: 22438
message WindSeedType3Notify {
    bytes payload = 4;
    uint32 config_id = 14;
}

// CmdId: 8357
message WinterCampAcceptAllGiveItemReq {
}

// CmdId: 8440
message WinterCampAcceptAllGiveItemRsp {
    repeated WinterCampAcceptItemResultInfo accept_item_result_info = 3;
    int32 retcode = 14;
}

// CmdId: 8875
message WinterCampAcceptGiveItemReq {
    uint32 uid = 1;
}

// CmdId: 8018
message WinterCampAcceptGiveItemRsp {
    int32 retcode = 3;
    WinterCampAcceptItemResultInfo accept_item_result_info = 11;
}

message WinterCampAcceptItemResultInfo {
    repeated ItemParam HNPPHLAIIEG = 15;
    uint32 uid = 5;
    repeated ItemParam IAGFIBPLIOE = 7;
}

message WinterCampActivityDetailInfo {
    bool is_content_closed = 12;
    repeated uint32 FANCDPPOIGF = 10;
    WinterCampStageInfo battle_info = 13;
    repeated uint32 FDDPLJAJCJF = 7;
    repeated WinterCampRaceStageInfo race_info_list = 9;
    WinterCampStageInfo explore_info = 15;
    repeated ItemParam used_item_list = 8;
    repeated uint32 JPFBCGKIAJL = 4;
}

// CmdId: 8029
message WinterCampEditSnowmanCombinationReq {
    CustomGadgetTreeInfo combination_info = 14;
    uint32 entity_id = 12;
}

// CmdId: 8442
message WinterCampEditSnowmanCombinationRsp {
    int32 retcode = 14;
}

message WinterCampFriendWishData {
    uint32 uid = 2;
    string nickname = 13;
    repeated uint32 item_id_list = 12;
    ProfilePicture profile_picture = 11;
}

// CmdId: 8446
message WinterCampGetCanGiveFriendItemReq {
}

// CmdId: 8328
message WinterCampGetCanGiveFriendItemRsp {
    int32 retcode = 11;
    repeated ItemParam item_list = 2;
}

// CmdId: 8013
message WinterCampGetFriendWishListReq {
}

// CmdId: 8651
message WinterCampGetFriendWishListRsp {
    int32 retcode = 9;
    repeated WinterCampFriendWishData wish_data_list = 5;
}

// CmdId: 8852
message WinterCampGetRecvItemListReq {
}

// CmdId: 8483
message WinterCampGetRecvItemListRsp {
    int32 retcode = 2;
    repeated WinterCampRecvItemData recv_item_data_list = 14;
}

// CmdId: 8673
message WinterCampGiveFriendItemReq {
    repeated ItemParam item_list = 13;
    uint32 uid = 12;
}

// CmdId: 8579
message WinterCampGiveFriendItemRsp {
    repeated uint32 limit_item_id_list = 9;
    int32 retcode = 7;
}

// CmdId: 8761
message WinterCampRaceScoreNotify {
    uint32 max_score = 5;
    uint32 id = 13;
}

message WinterCampRaceStageInfo {
    uint32 max_score = 9;
    uint32 open_time = 8;
    Vector pos = 1;
    uint32 id = 10;
}

message WinterCampRecvItemData {
    ProfilePicture profile_picture = 12;
    uint32 uid = 1;
    repeated ItemParam item_list = 4;
    string nickname = 14;
}

// CmdId: 8869
message WinterCampRecvItemNotify {
    WinterCampRecvItemData recv_item_data = 7;
}

// CmdId: 8415
message WinterCampSetWishListReq {
    repeated uint32 item_id_list = 11;
}

// CmdId: 8598
message WinterCampSetWishListRsp {
    int32 retcode = 8;
    repeated uint32 item_id_list = 1;
}

message WinterCampStageInfo {
    uint32 cur_progress = 9;
    uint32 id = 13;
    uint32 total_progress = 2;
    Vector pos = 5;
    uint32 open_time = 6;
    bool is_finished = 3;
}

// CmdId: 8966
message WinterCampStageInfoChangeNotify {
    WinterCampStageInfo battle_info = 11;
    WinterCampStageInfo explore_info = 13;
}

// CmdId: 8430
message WinterCampTakeBattleRewardReq {
    uint32 id = 5;
}

// CmdId: 8859
message WinterCampTakeBattleRewardRsp {
    uint32 id = 11;
    int32 retcode = 13;
}

// CmdId: 8140
message WinterCampTakeExploreRewardReq {
    uint32 id = 14;
}

// CmdId: 8648
message WinterCampTakeExploreRewardRsp {
    int32 retcode = 14;
    uint32 id = 5;
}

// CmdId: 8586
message WinterCampTriathlonRestartReq {
    uint32 gallery_id = 6;
}

// CmdId: 8262
message WinterCampTriathlonRestartRsp {
    uint32 gallery_id = 15;
    int32 retcode = 11;
}

// CmdId: 8113
message WinterCampTriathlonSettleNotify {
    uint32 GECADCEGKJD = 10;
    bool is_new_record = 11;
    bool is_success = 9;
    uint32 JCFJLLKLHFO = 2;
    uint32 gallery_id = 8;
    uint32 CHOECMNPHGG = 12;
    uint32 PBPGCOCLFIM = 3;
    uint32 score = 5;
}

message WorktopInfo {
    repeated uint32 option_list = 1;
    bool is_guest_can_operate = 2;
}

// CmdId: 876
message WorktopOptionNotify {
    repeated uint32 option_list = 2;
    uint32 gadget_entity_id = 11;
}

// CmdId: 3516
message WorldAllRoutineTypeNotify {
    repeated WorldRoutineTypeInfo world_routine_type_list = 2;
}

// CmdId: 3203
message WorldChestOpenNotify {
    uint32 scene_id = 4;
    uint32 config_id = 9;
    uint32 group_id = 7;
}

// CmdId: 3017
message WorldDataNotify {
    map<uint32, PropValue> world_prop_map = 8;
}

// CmdId: 2776
message WorldOwnerBlossomBriefInfoNotify {
    repeated BlossomBriefInfo brief_info_list = 1;
}

// CmdId: 2716
message WorldOwnerBlossomScheduleInfoNotify {
    BlossomScheduleInfo schedule_info = 6;
}

// CmdId: 140
message WorldOwnerDailyTaskNotify {
    uint32 IPPGLLBIHHJ = 10;
    repeated DailyTaskInfo task_list = 14;
    uint32 JJHMPHKOHIC = 6;
}

// CmdId: 279
message WorldPlayerDieNotify {
    PlayerDieType die_type = 15;
    uint32 murderer_entity_id = 10;
    oneof entity {
        uint32 monster_id = 2;
        uint32 gadget_id = 7;
    }
}

// CmdId: 3437
message WorldPlayerInfoNotify {
    repeated PlayerWidgetInfo player_widget_info_list = 3;
    repeated OnlinePlayerInfo player_info_list = 10;
    repeated uint32 player_uid_list = 6;
}

// CmdId: 258
message WorldPlayerLocationNotify {
    repeated PlayerWorldLocationInfo player_world_loc_list = 15;
    repeated PlayerLocationInfo player_loc_list = 12;
}

// CmdId: 213
message WorldPlayerReviveReq {
}

// CmdId: 287
message WorldPlayerReviveRsp {
    int32 retcode = 2;
}

// CmdId: 77
message WorldPlayerRTTNotify {
    repeated PlayerRTTInfo player_rtt_list = 14;
}

// CmdId: 3549
message WorldRoutineChangeNotify {
    uint32 routine_type = 13;
    WorldRoutineInfo routine_info = 2;
}

message WorldRoutineInfo {
    uint32 routine_id = 9;
    uint32 progress = 13;
    bool is_finished = 15;
    uint32 finish_progress = 11;
}

// CmdId: 3515
message WorldRoutineTypeCloseNotify {
    uint32 routine_type = 8;
}

message WorldRoutineTypeInfo {
    uint32 routine_type = 11;
    repeated WorldRoutineInfo world_routine_info_list = 5;
    uint32 next_refresh_time = 8;
}

// CmdId: 3517
message WorldRoutineTypeRefreshNotify {
    WorldRoutineTypeInfo world_routine_type = 9;
}

enum AbilityInvokeArgument {
    ABILITY_INVOKE_ARGUMENT_NONE = 0;
      ABILITY_INVOKE_ARGUMENT_META_MODIFIER_CHANGE = 1;
      ABILITY_INVOKE_ARGUMENT_META_COMMAND_MODIFIER_CHANGE_REQUEST = 2;
      ABILITY_INVOKE_ARGUMENT_META_SPECIAL_FLOAT_ARGUMENT = 3;
      ABILITY_INVOKE_ARGUMENT_META_OVERRIDE_PARAM = 4;
      ABILITY_INVOKE_ARGUMENT_META_CLEAR_OVERRIDE_PARAM = 5;
      ABILITY_INVOKE_ARGUMENT_META_REINIT_OVERRIDEMAP = 6;
      ABILITY_INVOKE_ARGUMENT_META_GLOBAL_FLOAT_VALUE = 7;
      ABILITY_INVOKE_ARGUMENT_META_CLEAR_GLOBAL_FLOAT_VALUE = 8;
      ABILITY_INVOKE_ARGUMENT_META_ABILITY_ELEMENT_STRENGTH = 9;
      ABILITY_INVOKE_ARGUMENT_META_ADD_OR_GET_ABILITY_AND_TRIGGER = 10;
      ABILITY_INVOKE_ARGUMENT_META_SET_KILLED_SETATE = 11;
      ABILITY_INVOKE_ARGUMENT_META_SET_ABILITY_TRIGGER = 12;
      ABILITY_INVOKE_ARGUMENT_META_ADD_NEW_ABILITY = 13;
      ABILITY_INVOKE_ARGUMENT_META_REMOVE_ABILITY = 14;
      ABILITY_INVOKE_ARGUMENT_META_SET_MODIFIER_APPLY_ENTITY = 15;
      ABILITY_INVOKE_ARGUMENT_META_MODIFIER_DURABILITY_CHANGE = 16;
      ABILITY_INVOKE_ARGUMENT_META_ELEMENT_REACTION_VISUAL = 17;
      ABILITY_INVOKE_ARGUMENT_META_SET_POSE_PARAMETER = 18;
      ABILITY_INVOKE_ARGUMENT_META_UPDATE_BASE_REACTION_DAMAGE = 19;
      ABILITY_INVOKE_ARGUMENT_META_TRIGGER_ELEMENT_REACTION = 20;
      ABILITY_INVOKE_ARGUMENT_META_LOSE_HP = 21;
      ABILITY_INVOKE_ARGUMENT_META_DURABILITY_IS_ZERO = 22;
      ABILITY_INVOKE_ARGUMENT_ACTION_TRIGGER_ABILITY = 50;
      ABILITY_INVOKE_ARGUMENT_ACTION_SET_CRASH_DAMAGE = 51;
      ABILITY_INVOKE_ARGUMENT_ACTION_EFFECT = 52;
      ABILITY_INVOKE_ARGUMENT_ACTION_SUMMON = 53;
      ABILITY_INVOKE_ARGUMENT_ACTION_BLINK = 54;
      ABILITY_INVOKE_ARGUMENT_ACTION_CREATE_GADGET = 55;
      ABILITY_INVOKE_ARGUMENT_ACTION_APPLY_LEVEL_MODIFIER = 56;
      ABILITY_INVOKE_ARGUMENT_ACTION_GENERATE_ELEM_BALL = 57;
      ABILITY_INVOKE_ARGUMENT_ACTION_SET_RANDOM_OVERRIDE_MAP_VALUE = 58;
      ABILITY_INVOKE_ARGUMENT_ACTION_SERVER_MONSTER_LOG = 59;
      ABILITY_INVOKE_ARGUMENT_ACTION_CREATE_TILE = 60;
      ABILITY_INVOKE_ARGUMENT_ACTION_DESTROY_TILE = 61;
      ABILITY_INVOKE_ARGUMENT_ACTION_FIRE_AFTER_IMAGE = 62;
      ABILITY_INVOKE_ARGUMENT_ACTION_DEDUCT_STAMINA = 63;
      ABILITY_INVOKE_ARGUMENT_ACTION_HIT_EFFECT = 64;
      ABILITY_INVOKE_ARGUMENT_ACTION_SET_BULLET_TRACK_TARGET = 65;
      ABILITY_INVOKE_ARGUMENT_ACTION_FIREWORK_EFFECT = 66;
      ABILITY_INVOKE_ARGUMENT_MIXIN_AVATAR_STEER_BY_CAMERA = 100;
      ABILITY_INVOKE_ARGUMENT_MIXIN_MONSTER_DEFEND = 101;
      ABILITY_INVOKE_ARGUMENT_MIXIN_WIND_ZONE = 102;
      ABILITY_INVOKE_ARGUMENT_MIXIN_COST_STAMINA = 103;
      ABILITY_INVOKE_ARGUMENT_MIXIN_ELITE_SHIELD = 104;
      ABILITY_INVOKE_ARGUMENT_MIXIN_ELEMENT_SHIELD = 105;
      ABILITY_INVOKE_ARGUMENT_MIXIN_GLOBAL_SHIELD = 106;
      ABILITY_INVOKE_ARGUMENT_MIXIN_SHIELD_BAR = 107;
      ABILITY_INVOKE_ARGUMENT_MIXIN_WIND_SEED_SPAWNER = 108;
      ABILITY_INVOKE_ARGUMENT_MIXIN_DO_ACTION_BY_ELEMENT_REACTION = 109;
      ABILITY_INVOKE_ARGUMENT_MIXIN_FIELD_ENTITY_COUNT_CHANGE = 110;
      ABILITY_INVOKE_ARGUMENT_MIXIN_SCENE_PROP_SYNC = 111;
      ABILITY_INVOKE_ARGUMENT_MIXIN_WIDGET_MP_SUPPORT = 112;
      ABILITY_INVOKE_ARGUMENT_MIXIN_DO_ACTION_BY_SELF_MODIFIER_ELEMENT_DURABILITY_RATIO = 113;
      ABILITY_INVOKE_ARGUMENT_MIXIN_FIREWORKS_LAUNCHER = 114;
      ABILITY_INVOKE_ARGUMENT_MIXIN_ATTACK_RESULT_CREATE_COUNT = 115;
      ABILITY_INVOKE_ARGUMENT_MIXIN_UGC_TIME_CONTROL = 116;
      ABILITY_INVOKE_ARGUMENT_MIXIN_AVATAR_COMBAT = 117;
      ABILITY_INVOKE_ARGUMENT_MIXIN_DEATH_ZONE_REGIONAL_PLAY_MIXIN = 118;
      ABILITY_INVOKE_ARGUMENT_MIXIN_UI_INTERACT = 119;
      ABILITY_INVOKE_ARGUMENT_MIXIN_SHOOT_FROM_CAMERA = 120;
      ABILITY_INVOKE_ARGUMENT_MIXIN_ERASE_BRICK_ACTIVITY = 121;
      ABILITY_INVOKE_ARGUMENT_MIXIN_BREAKOUT = 122;
      ABILITY_INVOKE_ARGUMENT_MIXIN_BROADCAST_GV = 123;
      ABILITY_INVOKE_ARGUMENT_MIXIN_RECEIVE_GV = 124;
}

    enum SyncType {
        SYNC_TYPE_NONE = 0;
        SYNC_TYPE_CREATE_CONNECT = 1;
        SYNC_TYPE_START_GAME = 2;
        SYNC_TYPE_PING = 3;
        SYNC_TYPE_FINISH_GAME = 4;
        SYNC_TYPE_SNAP_SHOT = 5;
        SYNC_TYPE_ACTION = 6;
    }

enum AbilityScalarType {
    ABILITY_SCALAR_TYPE_UNKNOW = 0;
    ABILITY_SCALAR_TYPE_FLOAT = 1;
    ABILITY_SCALAR_TYPE_INT = 2;
    ABILITY_SCALAR_TYPE_BOOL = 3;
    ABILITY_SCALAR_TYPE_TRIGGER = 4;
    ABILITY_SCALAR_TYPE_STRING = 5;
    ABILITY_SCALAR_TYPE_UINT = 6;
}

    enum Status {
        INVALID = 0;
        UNFINISHED = 1;
        FINISHED = 2;
        REWARD_TAKEN = 3;
    }

enum ActivityPushTipsState {
    ACTIVITY_PUSH_TIPS_STATE_NONE = 0;
    ACTIVITY_PUSH_TIPS_STATE_START = 1;
    ACTIVITY_PUSH_TIPS_STATE_READ = 2;
}

    enum MAHLBDMPLJA {
        MAHLBDMPLJA_PLAYER_JUDGE = 0;
        MAHLBDMPLJA_PLAYER_ENTER_OPTION_REFUSE = 1;
        MAHLBDMPLJA_PLAYER_ENTER_OPTION_DIRECT = 2;
        MAHLBDMPLJA_SYSTEM_JUDGE = 3;
        MAHLBDMPLJA_HOST_IN_MATCH = 4;
        MAHLBDMPLJA_PS_PLAYER_NOT_ACCEPT_OTHERS = 5;
        MAHLBDMPLJA_OPEN_STATE_NOT_OPEN = 6;
        MAHLBDMPLJA_HOST_IN_EDIT_MODE = 7;
        MAHLBDMPLJA_PRIOR_CHECK = 8;
        MAHLBDMPLJA_PLAYER_OFFLINE = 9;
    }

enum AranaraCollectionState {
    ARANARA_COLLECTION_STATE_NONE = 0;
    ARANARA_COLLECTION_STATE_COLLECTABLE = 1;
    ARANARA_COLLECTION_STATE_COLLECTED = 2;
    ARANARA_COLLECTION_STATE_FINISHED = 3;
}

enum AreaPlayType {
    AREA_PLAY_NONE = 0;
    AREA_PLAY_CLIMATE = 1;
    AREA_PLAY_REGIONAL_PLAY = 2;
}

enum AsterLittleStageState {
    ASTER_LITTLE_STAGE_NONE = 0;
    ASTER_LITTLE_STAGE_UNSTARTED = 1;
    ASTER_LITTLE_STAGE_STARTED = 2;
    ASTER_LITTLE_STAGE_FINISHED = 3;
}

enum AuditState {
    AUDIT_NONE = 0;
    AUDIT_WAITING = 1;
    AUDIT_FAILED = 2;
}

enum AvatarExpeditionState {
    AVATAR_EXPEDITION_NONE = 0;
    AVATAR_EXPEDITION_DOING = 1;
    AVATAR_EXPEDITION_FINISH_WAIT_REWARD = 2;
    AVATAR_EXPEDITION_CALLBACK_WAIT_REWARD = 3;
    AVATAR_EXPEDITION_LOCKED = 4;
}

enum AvatarType {
    AVATAR_TYPE_NONE = 0;
    AVATAR_TYPE_FORMAL = 1;
    AVATAR_TYPE_TRIAL = 2;
    AVATAR_TYPE_MIRROR = 3;
}

enum BargainResultType {
    BARGAIN_COMPLETE_SUCC = 0;
    BARGAIN_SINGLE_FAIL = 1;
    BARGAIN_COMPLETE_FAIL = 2;
}

    enum MissionStatus {
        MISSION_INVALID = 0;
        MISSION_UNFINISHED = 1;
        MISSION_FINISHED = 2;
        MISSION_POINT_TAKEN = 3;
    }

enum BattlePassUnlockStatus {
    BATTLE_PASS_UNLOCK_INVALID = 0;
    BATTLE_PASS_UNLOCK_FREE = 1;
    BATTLE_PASS_UNLOCK_PAID = 2;
}

    enum KeepRotType {
        KEEP_ROT_X = 0;
        KEEP_ROT_XY = 1;
    }

    enum FollowType {
        FOLLOW_TYPE_INIT_FOLLOW_POS = 0;
        FOLLOW_TYPE_SET_FOLLOW_POS = 1;
        FOLLOW_TYPE_SET_ABS_FOLLOW_POS = 2;
    }

    enum BreakoutActionType {
        ACTION_TYPE_NONE = 0;
        ACTION_TYPE_LAUNCH_BALL = 1;
        ACTION_TYPE_DESTROY_BALL = 2;
        ACTION_TYPE_FALLING_OBJECT = 3;
        ACTION_TYPE_MISSILE = 4;
    }

    enum SettleReason {
        SETTLE_REASON_TIME_OUT = 0;
        SETTLE_PLAY_END = 1;
        SETTLE_PLAYER_QUIT = 2;
        SETTLE_LIFE_COUNT = 3;
    }

enum BrickBreakerStageType {
    BRICK_BREAKER_STAGE_PREPARE = 0;
    BRICK_BREAKER_STAGE_PICK = 1;
    BRICK_BREAKER_STAGE_GAME = 2;
    BRICK_BREAKER_STAGE_PLAY = 3;
    BRICK_BREAKER_STAGE_SETTLE = 4;
}

enum ChallengeFinishType {
    CHALLENGE_FINISH_TYPE_NONE = 0;
    CHALLENGE_FINISH_TYPE_FAIL = 1;
    CHALLENGE_FINISH_TYPE_SUCC = 2;
    CHALLENGE_FINISH_TYPE_PAUSE = 3;
}

enum ChangeEnergyReason {
    CHANGE_ENERGY_NONE = 0;
    CHANGE_ENERGY_SKILL_START = 1;
}

enum ChangHpReason {
    CHANGE_HP_NONE = 0;
    CHANGE_HP_SUB_AVATAR = 1;
    CHANGE_HP_SUB_MONSTER = 2;
    CHANGE_HP_SUB_GEAR = 3;
    CHANGE_HP_SUB_ENVIR = 4;
    CHANGE_HP_SUB_FALL = 5;
    CHANGE_HP_SUB_DRAWN = 6;
    CHANGE_HP_SUB_ABYSS = 7;
    CHANGE_HP_SUB_ABILITY = 8;
    CHANGE_HP_SUB_SUMMON = 9;
    CHANGE_HP_SUB_SCRIPT = 10;
    CHANGE_HP_SUB_GM = 11;
    CHANGE_HP_SUB_KILL_SELF = 12;
    CHANGE_HP_SUB_CLIMATE_COLD = 13;
    CHANGE_HP_SUB_STORM_LIGHTNING = 14;
    CHANGE_HP_SUB_KILL_SERVER_GADGET = 15;
    CHANGE_HP_SUB_REPLACE = 16;
    CHANGE_HP_SUB_PLAYER_LEAVE = 17;
    CHANGE_HP_ATTACK_BY_ENERGY = 18;
    CHANGE_HP_ATTACK_BY_RECYCLE = 19;
    CHANGE_HP_SUB_PLAYER_BACK = 20;
    CHANGE_HP_BY_LUA = 51;
    CHANGE_HP_ADD_ABILITY = 101;
    CHANGE_HP_ADD_ITEM = 102;
    CHANGE_HP_ADD_REVIVE = 103;
    CHANGE_HP_ADD_UPGRADE = 104;
    CHANGE_HP_ADD_STATUE = 105;
    CHANGE_HP_ADD_BACKGROUND = 106;
    CHANGE_HP_ADD_GM = 107;
    CHANGE_HP_ADD_TRIAL_AVATAR_ACTIVITY = 108;
    CHANGE_HP_ADD_ROUGUELIKE_SPRING = 109;
}

enum ChapterState {
    CHAPTER_STATE_INVALID = 0;
    CHAPTER_STATE_UNABLE_TO_BEGIN = 1;
    CHAPTER_STATE_BEGIN = 2;
    CHAPTER_STATE_END = 3;
}

    enum ItemExceedLimitMsgType {
        ITEM_EXCEED_LIMIT_MSG_DEFAULT = 0;
        ITEM_EXCEED_LIMIT_MSG_TEXT = 1;
        ITEM_EXCEED_LIMIT_MSG_DIALOG = 2;
        ITEM_EXCEED_LIMIT_MSG_DIALOG_NONBLOCK = 3;
    }

enum ClientInputType {
    CLIENT_INPUT_NONE = 0;
    CLIENT_INPUT_KEYBORD_MOUSE = 1;
    CLIENT_INPUT_GAMEPAD = 2;
    CLIENT_INPUT_TOUCH_PANEL = 3;
}

enum ClientReconnectReason {
    CLIENT_RECONNNECT_NONE = 0;
    CLIENT_RECONNNECT_QUIT_MP = 1;
}

enum CodexType {
    CODEX_NONE = 0;
    CODEX_QUEST = 1;
    CODEX_WEAPON = 2;
    CODEX_ANIMAL = 3;
    CODEX_MATERIAL = 4;
    CODEX_BOOKS = 5;
    CODEX_PUSHTIPS = 6;
    CODEX_VIEW = 7;
    CODEX_RELIQUARY = 8;
}

enum CombatTypeArgument {
    COMBAT_NONE = 0;
    COMBAT_EVT_BEING_HIT = 1;
    COMBAT_ANIMATOR_STATE_CHANGED = 2;
    COMBAT_FACE_TO_DIR = 3;
    COMBAT_SET_ATTACK_TARGET = 4;
    COMBAT_RUSH_MOVE = 5;
    COMBAT_ANIMATOR_PARAMETER_CHANGED = 6;
    ENTITY_MOVE = 7;
    SYNC_ENTITY_POSITION = 8;
    COMBAT_STEER_MOTION_INFO = 9;
    COMBAT_FORCE_SET_POS_INFO = 10;
    COMBAT_COMPENSATE_POS_DIFF = 11;
    COMBAT_MONSTER_DO_BLINK = 12;
    COMBAT_FIXED_RUSH_MOVE = 13;
    COMBAT_SYNC_TRANSFORM = 14;
    COMBAT_LIGHT_CORE_MOVE = 15;
    COMBAT_BEING_HEALED_NTF = 16;
    COMBAT_SKILL_ANCHOR_POSITION_NTF = 17;
    COMBAT_GRAPPLING_HOOK_MOVE = 18;
}

enum CompoundBoostTakeStatusType {
    COMPOUND_BOOST_TAKE_STATUS_NONE = 0;
    COMPOUND_BOOST_TAKE_STATUS_BOOST_ONLY = 1;
    COMPOUND_BOOST_TAKE_STATUS_BOOST_AND_TAKE = 2;
    COMPOUND_BOOST_TAKE_STATUS_BAG_FULL = 3;
}

    enum State {
        STATE_CLOSE = 0;
        STATE_COND_NOT_MEET = 1;
        STATE_COND_MEET = 2;
        STATE_ACCEPT = 3;
    }

    enum State {
        STATE_UNSTARTED = 0;
        STATE_STARTED = 1;
        STATE_FINISHED = 2;
    }

    enum State {
        STATE_UNLOCK = 0;
        STATE_LOCK = 1;
        STATE_TAKEN = 2;
    }

enum CreateReason {
    CREATE_NONE = 0;
    CREATE_QUEST = 1;
    CREATE_ENERGY = 2;
}

enum CustomDungeonBanType {
    CUSTOM_DUNGEON_BAN_TYPE_NONE = 0;
    CUSTOM_DUNGEON_BAN_TYPE_LAYOUT = 1;
}

enum CustomDungeonFinishType {
    CUSTOM_DUNGEON_FINISH_PLAY_NORMAL = 0;
    CUSTOM_DUNGEON_FINISH_PLAY_TRY = 1;
    CUSTOM_DUNGEON_FINISH_EDIT_TRY = 2;
    CUSTOM_DUNGEON_FINISH_SELF_PLAY_NORMAL = 3;
}

enum CustomDungeonState {
    CUSTOM_DUNGEON_STATE_EDIT = 0;
    CUSTOM_DUNGEON_STATE_SELF_PASS = 1;
    CUSTOM_DUNGEON_STATE_PUBLISHED = 2;
}

    enum DataResVersionOpType {
        OP_TYPE_NONE = 0;
        OP_TYPE_RELOGIN = 1;
        OP_TYPE_MP_RELOGIN = 2;
    }

enum DealAddFriendResultType {
    DEAL_ADD_FRIEND_REJECT = 0;
    DEAL_ADD_FRIEND_ACCEPT = 1;
}

enum DraftInviteFailReason {
    DRAFT_FAIL_UNKNOWN = 0;
    DRAFT_ACTIVITY_NOT_OPEN = 1;
    DRAFT_ACTIVITY_PLAY_NOT_OPEN = 2;
    DRAFT_SCENE_NOT_MEET = 3;
    DRAFT_WORLD_NOT_MEET = 4;
    DRAFT_PLAY_LIMIT_NOT_MEET = 5;
}

enum DungeonCandidateTeamDismissReason {
    DUNGEON_CANDIDATE_TPDR_NORMAL = 0;
    DUNGEON_CANDIDATE_TPDR_DIE = 1;
    DUNGEON_CANDIDATE_TPDR_DISCONNECT = 2;
}

enum DungeonCandidateTeamPlayerLeaveReason {
    DUNGEON_CANDIDATE_TPLR_NORMAL = 0;
    DUNGEON_CANDIDATE_TPLR_DIE = 1;
    DUNGEON_CANDIDATE_TPLR_BE_KICK = 2;
    DUNGEON_CANDIDATE_DISCONNECT = 3;
}

enum DungeonCandidateTeamPlayerState {
    DUNGEON_CANDIDATE_TEAM_PLAYER_STATE_IDLE = 0;
    DUNGEON_CANDIDATE_TEAM_PLAYER_STATE_CHANGING_AVATAR = 1;
    DUNGEON_CANDIDATE_TEAM_PLAYER_STATE_READY = 2;
}

enum DungeonEntryBlockReason {
    DUNGEON_ENTRY_REASON_NONE = 0;
    DUNGEON_ENTRY_REASON_LEVEL = 1;
    DUNGEON_ENTRY_REASON_QUEST = 2;
    DUNGEON_ENTRY_REASON_MULIPLE = 3;
}

enum EDGEOCMAKEP {
    EDGEOCMAKEP_NONE = 0;
    EDGEOCMAKEP_TRANSCULENT = 1;
}

enum EnterCustomDungeonType {
    ENTER_CUSTOM_DUNGEON_NONE = 0;
    ENTER_CUSTOM_DUNGEON_EDIT = 1;
    ENTER_CUSTOM_DUNGEON_PLAY = 2;
    ENTER_CUSTOM_DUNGEON_OFFICIAL = 3;
}

enum EnterType {
    ENTER_NONE = 0;
    ENTER_SELF = 1;
    ENTER_GOTO = 2;
    ENTER_JUMP = 3;
    ENTER_OTHER = 4;
    ENTER_BACK = 5;
    ENTER_DUNGEON = 6;
    ENTER_DUNGEON_REPLAY = 7;
    ENTER_GOTO_BY_PORTAL = 8;
    ENTER_SELF_HOME = 9;
    ENTER_OTHER_HOME = 10;
    ENTER_GOTO_RECREATE = 11;
}

    enum Type {
        NULL = 0;
        ACTIVE = 1;
        PASSIVE = 2;
    }

enum EventTriggerType {
    EVENT_TRIGGER_NONE = 0;
    EVENT_TRIGGER_ENTER_FORCE = 1;
}

enum ExpeditionState {
    EXPEDITION_NONE = 0;
    EXPEDITION_STARTED = 1;
    EXPEDITION_FINISHED = 2;
    EXPEDITION_REWARDED = 3;
    EXPEDITION_LOCKED = 4;
}

enum FEEHAOJCNCG {
    FEEHAOJCNCG_PACMAN_DUNGEON_STOP_NONE = 0;
    FEEHAOJCNCG_PACMAN_DUNGEON_STOP_SUCCESS = 1;
    FEEHAOJCNCG_PACMAN_DUNGEON_STOP_TIMEUP = 2;
    FEEHAOJCNCG_PACMAN_DUNGEON_STOP_CLIENT_INTERRUPT = 3;
    FEEHAOJCNCG_PACMAN_DUNGEON_STOP_CANCEL = 4;
    FEEHAOJCNCG_PACMAN_DUNGEON_STOP_ACTIVITY_CLOSED = 5;
    FEEHAOJCNCG_PACMAN_DUNGEON_STOP_FAIL = 6;
}

enum FireworksLaunchParamType {
    FIREWORKS_LAUNCH_PARAM_NONE = 0;
    FIREWORKS_LAUNCH_PARAM_REPEAT = 1;
    FIREWORKS_LAUNCH_PARAM_INTEVAL = 2;
    FIREWORKS_LAUNCH_PARAM_DELAY = 3;
    FIREWORKS_LAUNCH_PARAM_ROUND_INTEVAL = 4;
    FIREWORKS_LAUNCH_PARAM_MAX = 5;
}

enum FireworksReformParamType {
    FIREWORKS_REFORM_PARAM_NONE = 0;
    FIREWORKS_REFORM_PARAM_COLOR = 1;
    FIREWORKS_REFORM_PARAM_HEIGHT = 2;
    FIREWORKS_REFORM_PARAM_SIZE = 3;
    FIREWORKS_REFORM_PARAM_DENSITY = 4;
    FIREWORKS_REFORM_PARAM_ROTATION = 5;
}

    enum FishNoRewardReason {
        FISH_NO_REWARD_NONE = 0;
        FISH_NO_REWARD_ACTIVITY_LIMIT = 1;
        FISH_NO_REWARD_BAG_LIMIT = 2;
        FISH_NO_REWARD_POOL_LIMIT = 3;
    }

enum FishBattleResult {
    FISH_BATTLE_RESULT_NONE = 0;
    FISH_BATTLE_RESULT_SUCC = 1;
    FISH_BATTLE_RESULT_FAIL = 2;
    FISH_BATTLE_RESULT_TIMEOUT = 3;
    FISH_BATTLE_RESULT_CANCEL = 4;
    FISH_BATTLE_RESULT_EXIT = 5;
}

enum FishEscapeReason {
    FISN_ESCAPE_NONE = 0;
    FISH_ESCAPE_SHOCKED = 1;
    FISH_ESCAPE_UNHOOK = 2;
}

enum ForgeQueueManipulateType {
    FORGE_QUEUE_MANIPULATE_TYPE_RECEIVE_OUTPUT = 0;
    FORGE_QUEUE_MANIPULATE_TYPE_STOP_FORGE = 1;
}

enum ForwardType {
    FORWARD_LOCAL = 0;
    FORWARD_TO_ALL = 1;
    FORWARD_TO_ALL_EXCEPT_CUR = 2;
    FORWARD_TO_HOST = 3;
    FORWARD_TO_ALL_GUEST = 4;
    FORWARD_TO_PEER = 5;
    FORWARD_TO_PEERS = 6;
    FORWARD_ONLY_SERVER = 7;
    FORWARD_TO_ALL_EXIST_EXCEPT_CUR = 8;
}

enum FoundationOpType {
    FOUNDATION_OP_NONE = 0;
    FOUNDATION_OP_BUILD = 1;
    FOUNDATION_OP_DEMOLITION = 2;
    FOUNDATION_OP_REBUILD = 3;
    FOUNDATION_OP_ROTATE = 4;
    FOUNDATION_OP_LOCK = 5;
    FOUNDATION_OP_UNLOCK = 6;
}

enum FoundationStatus {
    FOUNDATION_STATUS_NONE = 0;
    FOUNDATION_STATUS_INIT = 1;
    FOUNDATION_STATUS_BUILDING = 2;
    FOUNDATION_STATUS_BUILT = 3;
}

enum FriendEnterHomeOption {
    FRIEND_ENTER_HOME_OPTION_NEED_CONFIRM = 0;
    FRIEND_ENTER_HOME_OPTION_REFUSE = 1;
    FRIEND_ENTER_HOME_OPTION_DIRECT = 2;
}

enum FriendOnlineState {
    FREIEND_DISCONNECT = 0;
    FRIEND_ONLINE = 1;
}

enum GadgetBornType {
    GADGET_BORN_NONE = 0;
    GADGET_BORN_IN_AIR = 1;
    GADGET_BORN_PLAYER = 2;
    GADGET_BORN_MONSTER_HIT = 3;
    GADGET_BORN_MONSTER_DIE = 4;
    GADGET_BORN_GADGET = 5;
    GADGET_BORN_GROUND = 6;
}

enum GalleryStageType {
    GALLERY_NONE = 0;
    GALLERY_PRESTART = 1;
    GALLERY_START = 2;
}

enum GalleryStartSource {
    GALLERY_START_BY_NONE = 0;
    GALLERY_START_BY_MATCH = 1;
    GALLERY_START_BY_DRAFT = 2;
}

enum GalleryStopReason {
    GALLERY_STOP_NONE = 0;
    GALLERY_STOP_TIMEUP = 1;
    GALLERY_STOP_CLIENT_INTERRUPT = 2;
    GALLERY_STOP_LUA_INTERRUPT_SUCCESS = 3;
    GALLERY_STOP_LUA_INTERRUPT_FAIL = 4;
    GALLERY_STOP_OWNER_LEAVE_SCENE = 5;
    GALLERY_STOP_PLAY_INIT_FAILED = 6;
    GALLERY_STOP_OTHER_PLAYER_ENTER = 7;
    GALLERY_STOP_AVATAR_DIE = 8;
    GALLERY_STOP_FINISHED = 9;
    GALLERY_STOP_FUNGUS_ALL_DIE = 10;
    GALLERY_STOP_LIFE_COUNT_ZERO = 11;
    GALLERY_STOP_ACTIVITY_CLOSED = 12;
    GALLERY_STOP_LEAVE_REGION_FAIL = 13;
}

enum GCGActionType {
    GCG_ACTION_NONE = 0;
    GCG_ACTION_SPECIAL_PHASE = 1;
    GCG_ACTION_NEXT_PHASE = 2;
    GCG_ACTION_DRAW = 3;
    GCG_ACTION_REDRAW = 4;
    GCG_ACTION_SELECT_ONSTAGE = 5;
    GCG_ACTION_ROLL = 6;
    GCG_ACTION_REROLL = 7;
    GCG_ACTION_ATTACK = 8;
    GCG_ACTION_PLAY_CARD = 9;
    GCG_ACTION_PASS = 10;
    GCG_ACTION_REBOOT = 11;
    GCG_ACTION_GAME_OVER = 12;
    GCG_ACTION_TRIGGER = 13;
    GCG_ACTION_PHASE_EXIT = 14;
    GCG_ACTION_CUSTOM = 15;
    GCG_ACTION_NOTIFY_COST = 16;
    GCG_ACTION_AFTER_OPERATION = 17;
    GCG_ACTION_USE_SKILL = 18;
    GCG_ACTION_NOTIFY_SKILL_PREVIEW = 19;
    GCG_ACTION_PREVIEW_ATTACK = 20;
    GCG_ACTION_PREVIEW_AFTER_ATTACK = 21;
    GCG_ACTION_SEND_MESSAGE = 22;
    GCG_ACTION_WAITING_CHARACTER = 23;
    GCG_ACTION_TRIGGER_SKILL = 24;
    GCG_ACTION_BEFORE_NEXT_OPERATION = 25;
}

enum GCGClientPerformType {
    GCG_PERFORM_INVALID = 0;
    GCG_PERFORM_CARD_EXCHANGE = 1;
    GCG_PERFORM_FIRST_HAND = 2;
    GCG_PERFORM_REROLL = 3;
    GCG_PREFORM_COST_REVISE = 4;
}

enum GCGDiceSideType {
    GCG_DICE_SIDE_INVALID = 0;
    GCG_DICE_SIDE_CRYO = 1;
    GCG_DICE_SIDE_HYDRO = 2;
    GCG_DICE_SIDE_PYRO = 3;
    GCG_DICE_SIDE_ELECTRO = 4;
    GCG_DICE_SIDE_GEO = 5;
    GCG_DICE_SIDE_DENDRO = 6;
    GCG_DICE_SIDE_ANEMO = 7;
    GCG_DICE_SIDE_PAIMON = 8;
}

enum GCGEndReason {
    GCG_END_REASON_DEFAULT = 0;
    GCG_END_REASON_DIE = 1;
    GCG_END_REASON_SURRENDER = 2;
    GCG_END_REASON_DISCONNECTED = 3;
    GCG_END_REASON_ROUND_LIMIT = 4;
    GCG_END_REASON_GM = 5;
    GCG_END_REASON_NO_PLAYER = 6;
    GCG_END_REASON_GIVE_UP = 7;
    GCG_END_REASON_INIT_TIMEOUT = 8;
    GCG_END_REASON_EFFECT = 9;
    GCG_END_REASON_EXPIRE_TIMEOUT = 10;
}

enum GCGGameBusinessType {
    GCG_GAME_NONE = 0;
    GCG_GAME_GM = 1;
    GCG_GAME_MATCH = 2;
    GCG_GAME_PVP = 3;
    GCG_GAME_TAVERN_CHALLENGE = 4;
    GCG_GAME_CONST_CHALLENGE = 5;
    GCG_GAME_WORLD_CHALLENGE = 6;
    GCG_GAME_BOSS_CHALLENGE = 7;
    GCG_GAME_WEEK_CHALLENGE = 8;
    GCG_GAME_BREAK_CHALLENGE = 9;
    GCG_GAME_QUEST = 10;
    GCG_GAME_GUIDE_GROUP = 11;
    GCG_GAME_OTHER = 12;
}

    enum GCGGameCreateReason {
        REASON_NONE = 0;
        REASON_GAME_MAX = 1;
        REASON_CLIENT_VERSION_NOT_LASTEST = 2;
        REASON_RESOURCE_NOT_COMPLETE = 3;
        REASON_TIMEOUT = 4;
        REASON_OPPONENT_CLIENT_VERSION_NOT_LASTEST = 5;
    }

enum GCGIntentionChangeType {
    GCG_INTENTION_CHANGE_NONE = 0;
    GCG_INTENTION_CHANGE_RM = 1;
}

enum GCGLevelType {
    GCG_LEVEL_NONE = 0;
    GCG_LEVEL_CONST = 1;
    GCG_LEVEL_WEEK = 2;
    GCG_LEVEL_WORLD = 3;
    GCG_LEVEL_BOSS = 4;
    GCG_LEVEL_CHARACTER = 5;
    GCG_LEVEL_BREAK = 6;
    GCG_LEVEL_QUEST = 7;
    GCG_LEVEL_GUIDE_GROUP = 8;
    GCG_LEVEL_OTHER = 9;
}

enum GCGPhaseType {
    GCG_PHASE_INVALID = 0;
    GCG_PHASE_START = 1;
    GCG_PHASE_DRAW = 2;
    GCG_PHASE_ON_STAGE = 3;
    GCG_PHASE_DICE = 4;
    GCG_PHASE_MAIN = 5;
    GCG_PHASE_END = 6;
    GCG_PHASE_DIE = 7;
    GCG_PHASE_FIN = 8;
    GCG_PHASE_PRE_MAIN = 9;
    GCG_PHASE_REROLL = 10;
}

enum GCGReason {
    GCG_REASON_DEFAULT = 0;
    GCG_REASON_EFFECT = 1;
    GCG_REASON_COST = 2;
    GCG_REASON_GM = 3;
    GCG_REASON_ATTACK = 4;
    GCG_REASON_REBOOT = 5;
    GCG_REASON_PLAY_CARD = 6;
    GCG_REASON_QUICKLY_ONSTAGE = 7;
    GCG_REASON_REMOVE_AFTER_DIE = 8;
    GCG_REASON_INIT = 9;
    GCG_REASON_EFFECT_DAMAGE = 10;
    GCG_REASON_EFFECT_HEAL = 11;
    GCG_REASON_EFFECT_REVIVE = 12;
    GCG_REASON_INIT_ONSTAGE = 13;
    GCG_REASON_DIE_ONSTAGE = 14;
    GCG_REASON_SELECT_ONSTAGE = 15;
    GCG_REASON_CHARACTER_DIE = 16;
}

enum GCGSettleOption {
    GCG_SETTLE_OPT_NONE = 0;
    GCG_SETTLE_OPT_EXIT = 1;
    GCG_SETTLE_OPT_CONTINUE = 2;
    GCG_SETTLE_OPT_RESTART = 3;
}

enum GCGSkillHpChangeType {
    GCG_SKILL_HP_CHANGE_NONE = 0;
    GCG_SKILL_HP_CHANGE_DAMAGE = 1;
    GCG_SKILL_HP_CHANGE_HEAL = 2;
}

enum GCGZoneType {
    GCG_ZONE_INVALID = 0;
    GCG_ZONE_DECK = 1;
    GCG_ZONE_HAND = 2;
    GCG_ZONE_CHARACTER = 3;
    GCG_ZONE_MODIFY = 4;
    GCG_ZONE_SUMMON = 5;
    GCG_ZONE_ASSIST = 7;
    GCG_ZONE_ONSTAGE = 8;
    GCG_ZONE_RULE = 9;
}

enum GENJGPDIPNI {
    GENJGPDIPNI_CUSTOM_GALLERY_SCORE_BOARD_NORMAL = 0;
    GENJGPDIPNI_CUSTOM_GALLERY_SCORE_BOARD_COUNTDOWN = 1;
    GENJGPDIPNI_CUSTOM_GALLERY_SCORE_BOARD_TIMER = 2;
}

enum GetUgcType {
    GET_UGC_NONE = 0;
    GET_UGC_TYPE_MINE = 1;
    GET_UGC_TYPE_PUBLISH = 2;
}

    enum SettleReason {
        SETTLE_REASON_TIME_OUT = 0;
        SETTLE_PLAY_END = 1;
        SETTLE_PLAYER_QUIT = 2;
    }

enum HideAndSeekStageType {
    HIDE_AND_SEEK_STAGE_PREPARE = 0;
    HIDE_AND_SEEK_STAGE_PICK = 1;
    HIDE_AND_SEEK_STAGE_GAME = 2;
    HIDE_AND_SEEK_STAGE_HIDE = 3;
    HIDE_AND_SEEK_STAGE_SEEK = 4;
    HIDE_AND_SEEK_STAGE_SETTLE = 5;
}

enum HitColliderType {
    HIT_COLLIDER_INVALID = 0;
    HIT_COLLIDER_HIT_BOX = 1;
    HIT_COLLIDER_WET_HIT_BOX = 2;
    HIT_COLLIDER_HEAD_BOX = 3;
}

enum HomePlantFieldStatus {
    HOME_FIELD_STATUE_NONE = 0;
    HOME_FIELD_STATUE_SEED = 1;
    HOME_FIELD_STATUE_SPROUT = 2;
    HOME_FIELD_STATUE_GATHER = 3;
}

enum HuntingOfferState {
    HUNTING_OFFER_STATE_NONE = 0;
    HUNTING_OFFER_STATE_STARTED = 1;
    HUNTING_OFFER_STATE_UNSTARTED = 2;
    HUNTING_OFFER_STATE_SUCC = 3;
}

enum InBattleMechanicusCardChallengeState {
    IN_BATTLE_MECHANICUS_CARD_CHALLENGE_NONE = 0;
    IN_BATTLE_MECHANICUS_CARD_CHALLENGE_ON_GOING = 1;
    IN_BATTLE_MECHANICUS_CARD_CHALLENGE_FAIL = 2;
    IN_BATTLE_MECHANICUS_CARD_CHALLENGE_SUCCESS = 3;
}

enum InBattleMechanicusStageType {
    IN_BATTLE_MECHANICUS_STAGE_NONE = 0;
    IN_BATTLE_MECHANICUS_STAGE_BUILD = 1;
    IN_BATTLE_MECHANICUS_STAGE_CARD_FLIP = 2;
    IN_BATTLE_MECHANICUS_STAGE_KILL = 3;
}

enum InteractType {
    INTERACT_NONE = 0;
    INTERACT_PICK_ITEM = 1;
    INTERACT_GATHER = 2;
    INTERACT_OPEN_CHEST = 3;
    INTERACT_OPEN_STATUE = 4;
    INTERACT_CONSUM = 5;
    INTERACT_MP_PLAY_REWARD = 6;
    INTERACT_VIEW = 7;
    INTERACT_GENERAL_REWARD = 8;
    INTERACT_MIRACLE_RING = 9;
    INTERACT_FOUNDATION = 10;
    INTERACT_ECHO_SHELL = 11;
    INTERACT_HOME_GATHER = 12;
    INTERACT_ENV_ANIMAL = 13;
    INTERACT_QUEST_GADGET = 14;
    INTERACT_UI_INTERACT = 15;
    INTERACT_DESHRET_OBELISK = 16;
}

enum InterOpType {
    INTER_OP_FINISH = 0;
    INTER_OP_START = 1;
}

    enum State {
        INVALID = 0;
        IN_PROGRESS = 1;
        COMPLETE = 2;
        REWARD_TAKEN = 3;
    }

    enum LockState {
        LOCK_NONE = 0;
        LOCK_QUEST = 1;
    }

    enum State {
        INVALID = 0;
        IN_PROGRESS = 1;
        COMPLETE = 2;
        REWARD_TAKEN = 3;
    }

enum IslandPartySailStage {
    ISLAND_PARTY_SAIL_STAGE_NONE = 0;
    ISLAND_PARTY_SAIL_STAGE_SAIL = 1;
    ISLAND_PARTY_SAIL_STAGE_BATTLE = 2;
}

    enum ItemGivingType {
        QUEST = 0;
        GADGET = 1;
    }

    enum HPKGGDFBHPI {
        HPKGGDFBHPI_GCG_HINT_NONE = 0;
        HPKGGDFBHPI_GCG_HINT_GAME_NOT_FOUND = 1;
    }

    enum HMNKHDMCEKN {
        HMNKHDMCEKN_STATUS_FAIL = 0;
        HMNKHDMCEKN_STATUS_SUCC = 1;
        HMNKHDMCEKN_STATUS_PARTIAL = 2;
    }

enum KAGFENNNCEA {
    KAGFENNNCEA_SANDWORM_CANNON_NONE_EFFECT = 0;
    KAGFENNNCEA_SANDWORM_CANNON_WEAK_EFFECT = 1;
    KAGFENNNCEA_SANDWORM_CANNON_STRONG_EFFECT = 2;
}

enum LLBFJGELKIB {
    LLBFJGELKIB_SANDWORM_LEVEL_NOT_OPEN = 0;
    LLBFJGELKIB_SANDWORM_LEVEL_PRE_QUEST = 1;
    LLBFJGELKIB_SANDWORM_LEVEL_START = 2;
    LLBFJGELKIB_SANDWORM_LEVEL_SEQUEL_QUEST = 3;
}

    enum LockReason {
        LEVEL = 0;
        QUEST = 1;
    }

    enum LuaOptionType {
        LUA_OPTION_NONE = 0;
        LUA_OPTION_PLAYER_INPUT = 1;
    }

enum LuaShellType {
    LUASHELL_NONE = 0;
    LUASHELL_NORMAL = 1;
    LUASHELL_SECURITY = 2;
    LUASHELL_SHELL_CODE = 3;
}

enum LunaRiteHintPointType {
    LUNA_RITE_HINT_TYPE_NONE = 0;
    LUNA_RITE_HINT_TYPE_RUNE = 1;
    LUNA_RITE_HINT_TYPE_CHEST = 2;
}

enum LunaRiteHintStatusType {
    LUNA_RITE_HINT_STATUS_DEFAULT = 0;
    LUNA_RITE_HINT_STATUS_NO_COUNT = 1;
    LUNA_RITE_HINT_STATUS_FINISH = 2;
}

enum MAGCLOOBFPI {
    MAGCLOOBFPI_REUNION_REPORT_TYPE_NONE = 0;
    MAGCLOOBFPI_REUNION_REPORT_TYPE_START = 1;
    MAGCLOOBFPI_REUNION_REPORT_TYPE_DOUBLE = 2;
}

enum MailCollectState {
    MAIL_COLLECTIBLE_UNKONW = 0;
    MAIL_NOT_COLLECTIBLE = 1;
    MAIL_COLLECTIBLE_UNCOLLECTED = 2;
    MAIL_COLLECTIBLE_COLLECTED = 3;
}

    enum Status {
        INVALID = 0;
        RUNNING = 1;
        FINISHED = 2;
    }

enum MapMarkFromType {
    MAP_MARK_FROM_TYPE_NOE = 0;
    MAP_MARK_FROM_TYPE_MONSTER = 1;
    MAP_MARK_FROM_TYPE_QUEST = 2;
}

enum MapMarkPointType {
    NPC = 0;
    QUEST = 1;
    SPECIAL = 2;
    MINE = 3;
    COLLECTION = 4;
    MONSTER = 5;
    FISH_POOL = 6;
}

enum MapMarkTipsType {
    MARK_TIPS_DUNGEON_ELEMENT_TRIAL = 0;
}

    enum Operation {
        ADD = 0;
        MOD = 1;
        DEL = 2;
        GET = 3;
    }

enum MatchReason {
    MATCH_NONE = 0;
    MATCH_FINISH = 1;
    MATCH_PLAYER_CANCEL = 2;
    MATCH_TIMEOUT = 3;
    MATCH_PLAYER_CONFIRM = 4;
    MATCH_FAILED = 5;
    MATCH_SYSTEM_ERROR = 6;
    MATCH_INTERRUPTED = 7;
    MATCH_MP_UNAVAILABLE = 8;
    MATCH_CONFIRM_TIMEOUT = 9;
}

enum MatchType {
    MATCH_TYPE_NONE = 0;
    MATCH_TYPE_DUNGEON = 1;
    MATCH_TYPE_MP_PLAY = 2;
    MATCH_TYPE_MECHANICUS = 3;
    MATCH_TYPE_GENERAL = 4;
    MATCH_TYPE_GCG = 5;
}

enum MaterialDeleteReturnType {
    MATERIAL_DELETE_RETURN_BAG = 0;
    MATERIAL_DELETE_RETURN_SEED = 1;
}

enum ModifierAction {
    ADDED = 0;
    REMOVED = 1;
}

enum MonsterBornType {
    MONSTER_BORN_NONE = 0;
    MONSTER_BORN_DEFAULT = 1;
    MONSTER_BORN_RANDOM = 2;
}

enum MotionState {
    MOTION_NONE = 0;
    MOTION_RESET = 1;
    MOTION_STANDBY = 2;
    MOTION_STANDBY_MOVE = 3;
    MOTION_WALK = 4;
    MOTION_RUN = 5;
    MOTION_DASH = 6;
    MOTION_CLIMB = 7;
    MOTION_CLIMB_JUMP = 8;
    MOTION_STANDBY_TO_CLIMB = 9;
    MOTION_FIGHT = 10;
    MOTION_JUMP = 11;
    MOTION_DROP = 12;
    MOTION_FLY = 13;
    MOTION_SWIM_MOVE = 14;
    MOTION_SWIM_IDLE = 15;
    MOTION_SWIM_DASH = 16;
    MOTION_SWIM_JUMP = 17;
    MOTION_SLIP = 18;
    MOTION_GO_UPSTAIRS = 19;
    MOTION_FALL_ON_GROUND = 20;
    MOTION_JUMP_UP_WALL_FOR_STANDBY = 21;
    MOTION_JUMP_OFF_WALL = 22;
    MOTION_POWERED_FLY = 23;
    MOTION_LADDER_IDLE = 24;
    MOTION_LADDER_MOVE = 25;
    MOTION_LADDER_SLIP = 26;
    MOTION_STANDBY_TO_LADDER = 27;
    MOTION_LADDER_TO_STANDBY = 28;
    MOTION_DANGER_STANDBY = 29;
    MOTION_DANGER_STANDBY_MOVE = 30;
    MOTION_DANGER_WALK = 31;
    MOTION_DANGER_RUN = 32;
    MOTION_DANGER_DASH = 33;
    MOTION_CROUCH_IDLE = 34;
    MOTION_CROUCH_MOVE = 35;
    MOTION_CROUCH_ROLL = 36;
    MOTION_NOTIFY = 37;
    MOTION_LAND_SPEED = 38;
    MOTION_MOVE_FAIL_ACK = 39;
    MOTION_WATERFALL = 40;
    MOTION_DASH_BEFORE_SHAKE = 41;
    MOTION_SIT_IDLE = 42;
    MOTION_FORCE_SET_POS = 43;
    MOTION_QUEST_FORCE_DRAG = 44;
    MOTION_FOLLOW_ROUTE = 45;
    MOTION_SKIFF_BOARDING = 46;
    MOTION_SKIFF_NORMAL = 47;
    MOTION_SKIFF_DASH = 48;
    MOTION_SKIFF_POWERED_DASH = 49;
    MOTION_DESTROY_VEHICLE = 50;
    MOTION_FLY_IDLE = 51;
    MOTION_FLY_SLOW = 52;
    MOTION_FLY_FAST = 53;
    MOTION_AIM_MOVE = 54;
    MOTION_AIR_COMPENSATION = 55;
    MOTION_SORUSH_NORMAL = 56;
    MOTION_NUM = 57;
}

enum MovingPlatformType {
    MOVING_PLATFORM_NONE = 0;
    MOVING_PLATFORM_USE_CONFIG = 1;
    MOVING_PLATFORM_ABILITY = 2;
    MOVING_PLATFORM_ROUTE = 3;
}

enum MpSettingType {
    MP_SETTING_NO_ENTER = 0;
    MP_SETTING_ENTER_FREELY = 1;
    MP_SETTING_ENTER_AFTER_APPLY = 2;
}

    enum ShapeType {
        OBSTACLE_SHAPE_CAPSULE = 0;
        OBSTACLE_SHAPE_BOX = 1;
    }

    enum Reason {
        INVALID = 0;
        ENTER = 1;
        LEAVE = 2;
    }

    enum EdgeType {
        INNER = 0;
        TILE_BOUND = 1;
        TILE_BOUND_UNCONNECT = 2;
        TILE_BOUND_OVERIDE = 3;
    }

    enum OperateType {
        OPERATE_TYPE_NONE = 0;
        OPERATE_TYPE_EFFECT = 1;
    }

enum PlatformType {
    EDITOR = 0;
    IOS = 1;
    ANDROID = 2;
    PC = 3;
    PS4 = 4;
    SERVER = 5;
    CLOUD_ANDROID = 6;
    CLOUD_IOS = 7;
    PS5 = 8;
    CLOUD_WEB = 9;
    CLOUD_TV = 10;
    CLOUD_MAC = 11;
    CLOUD_PC = 12;
    CLOUD_THIRD_PARTY_MOBILE = 13;
    CLOUD_THIRD_PARTY_PC = 14;
}

    enum Reason {
        PLAYER_JUDGE = 0;
        PLAYER_ENTER_OPTION_REFUSE = 1;
        PLAYER_ENTER_OPTION_DIRECT = 2;
        SYSTEM_JUDGE = 3;
        HOST_IN_MATCH = 4;
        PS_PLAYER_NOT_ACCEPT_OTHERS = 5;
        OPEN_STATE_NOT_OPEN = 6;
        HOST_IN_EDIT_MODE = 7;
        PRIOR_CHECK = 8;
    }

    enum Reason {
        PLAYER_JUDGE = 0;
        SCENE_CANNOT_ENTER = 1;
        PLAYER_CANNOT_ENTER_MP = 2;
        SYSTEM_JUDGE = 3;
        ALLOW_ENTER_PLAYER_FULL = 4;
        WORLD_LEVEL_LOWER_THAN_HOST = 5;
        HOST_IN_MATCH = 6;
        PLAYER_IN_BLACKLIST = 7;
        PS_PLAYER_NOT_ACCEPT_OTHERS = 8;
        HOST_IS_BLOCKED = 9;
        OTHER_DATA_VERSION_NOT_LATEST = 10;
        DATA_VERSION_NOT_LATEST = 11;
        PLAYER_NOT_IN_PLAYER_WORLD = 12;
        MAX_PLAYER = 13;
    }

enum PlayerDieOption {
    DIE_OPT_NONE = 0;
    DIE_OPT_REPLAY = 1;
    DIE_OPT_CANCEL = 2;
    DIE_OPT_REVIVE = 3;
}

enum PlayerDieType {
    PLAYER_DIE_NONE = 0;
    PLAYER_DIE_KILL_BY_MONSTER = 1;
    PLAYER_DIE_KILL_BY_GEAR = 2;
    PLAYER_DIE_FALL = 3;
    PLAYER_DIE_DRAWN = 4;
    PLAYER_DIE_ABYSS = 5;
    PLAYER_DIE_GM = 6;
    PLAYER_DIE_CLIMATE_COLD = 7;
    PLAYER_DIE_STORM_LIGHTING = 8;
}

    enum Reason {
        DISCONNECT = 0;
        CLIENT_REQ = 1;
        TIMEOUT = 2;
        ADMIN_REQ = 3;
        SERVER_CLOSE = 4;
        GM_CLEAR = 5;
        PLAYER_TRANSFER = 6;
        CLIENT_CHECKSUM_INVALID = 7;
        REASON_MUIP_MOVE_SAVE_WAIT = 8;
    }

    enum Reason {
        SUCC = 0;
        TARGET_SCENE_CANNOT_ENTER = 1;
        SELF_MP_UNAVAILABLE = 2;
        OTHER_DATA_VERSION_NOT_LATEST = 3;
        DATA_VERSION_NOT_LATEST = 4;
    }

    enum State {
        INVALID = 0;
        START = 1;
        TIMEOUT = 2;
    }

    enum QuitReason {
        INVALID = 0;
        KICK_BY_HOST = 1;
        BACK_TO_MY_WORLD = 2;
        HOME_BLOCKED = 3;
        HOME_IN_EDIT_MODE = 4;
        BY_MUIP = 5;
        CUR_MODULE_CLOSED = 6;
    }

    enum QuitReason {
        INVALID = 0;
        HOST_NO_OTHER_PLAYER = 1;
        KICK_BY_HOST = 2;
        BACK_TO_MY_WORLD = 3;
        KICK_BY_HOST_LOGOUT = 4;
        KICK_BY_HOST_BLOCK = 5;
        BE_BLOCKED = 6;
        KICK_BY_HOST_ENTER_HOME = 7;
        HOST_SCENE_INVALID = 8;
        KICK_BY_PLAY = 9;
        KICK_BY_ISLAND_PARTY_GALLERY_START_FAILED = 10;
    }

    enum DOENKMNEPFO {
        DOENKMNEPFO_PROJECTOR_OP_NONE = 0;
        DOENKMNEPFO_PROJECTOR_OP_CREATE = 1;
        DOENKMNEPFO_PROJECTOR_OP_DESTROY = 2;
    }

enum PropChangeReason {
    PROP_CHANGE_NONE = 0;
    PROP_CHANGE_STATUE_RECOVER = 1;
    PROP_CHANGE_ENERGY_BALL = 2;
    PROP_CHANGE_ABILITY = 3;
    PROP_CHANGE_LEVELUP = 4;
    PROP_CHANGE_ITEM = 5;
    PROP_CHANGE_AVATAR_CARD = 6;
    PROP_CHANGE_CITY_LEVELUP = 7;
    PROP_CHANGE_AVATAR_UPGRADE = 8;
    PROP_CHANGE_AVATAR_PROMOTE = 9;
    PROP_CHANGE_PLAYER_ADD_EXP = 10;
    PROP_CHANGE_FINISH_QUEST = 11;
    PROP_CHANGE_GM = 12;
    PROP_CHANGE_MANUAL_ADJUST_WORLD_LEVEL = 13;
}

enum ProtEntityType {
    PROT_ENTITY_NONE = 0;
    PROT_ENTITY_AVATAR = 1;
    PROT_ENTITY_MONSTER = 2;
    PROT_ENTITY_NPC = 3;
    PROT_ENTITY_GADGET = 4;
    PROT_ENTITY_REGION = 5;
    PROT_ENTITY_WEAPON = 6;
    PROT_ENTITY_WEATHER = 7;
    PROT_ENTITY_SCENE = 8;
    PROT_ENTITY_TEAM = 9;
    PROT_ENTITY_MASSIVE_ENTITY = 10;
    PROT_ENTITY_MP_LEVEL = 11;
    PROT_ENTITY_PLAY_TEAM_ENTITY = 12;
    PROT_ENTITY_EYE_POINT = 13;
    PROT_ENTITY_MAX = 14;
}

    enum OptionType {
        OPTION_TYPE_NONE = 0;
    OPTION_TYPE_NORMAL = 1;
    OPTION_TYPE_FIRST_CAN_GO = 2;
    }

    enum PathStatusType {
        PATH_STATUS_TYPE_FAIL = 0;
        PATH_STATUS_TYPE_SUCC = 1;
        PATH_STATUS_TYPE_PARTIAL = 2;
     }

enum RecordUsage {
    UGC_RECORD_USAGE_NONE = 0;
    UGC_RECORD_USAGE_IMPORT = 1;
    UGC_RECORD_USAGE_PLAY = 2;
    UGC_RECORD_USAGE_TRIAL = 3;
    UGC_RECORD_USAGE_COMPARE = 4;
}

    enum RegionEvent {
        REGION_EVENT_NONE = 0;
        REGION_EVENT_ENTER = 1;
        REGION_EVENT_LEAVE = 2;
    }

enum RegionSearchState {
    REGION_SEARCH_NONE = 0;
    REGION_SEARCH_UNSTARTED = 1;
    REGION_SEARCH_STARTED = 2;
    REGION_SEARCH_WAIT_REWARD = 3;
    REGION_SEARCH_FINISHED = 4;
}

    enum FinishReason {
        DEFAULT = 0;
        CLEAR = 1;
        DISTANCE = 2;
        FINISH = 3;
    }

enum ReportReasonType {
    REPORT_REASON_NONE = 0;
    REPORT_REASON_DECEPTIVE_ADS = 1;
    REPORT_REASON_ABUSING = 2;
    REPORT_REASON_CHEAT = 3;
    REPORT_REASON_POLITICAL = 4;
    REPORT_REASON_OTHER = 5;
    REPORT_REASON_HOME = 6;
}

enum ResinCostType {
    RESIN_COST_TYPE_NONE = 0;
    RESIN_COST_TYPE_NORMAL = 1;
    RESIN_COST_TYPE_CONDENSE = 2;
    RESIN_COST_TYPE_REUNION_PRIVILEGE = 3;
    RESIN_COST_TYPE_OP_ACTIVITY = 4;
    RESIN_COST_TYPE_MATERIAL = 5;
}

enum RogueCellState {
    ROGUE_CELL_NONE = 0;
    ROGUE_CELL_BATTLE = 1;
    ROGUE_CELL_SUCCESS = 2;
    ROGUE_CELL_FINISH = 3;
    ROGUE_CELL_TAKEN_CHEST = 4;
}

enum RogueDiaryAvatarDisableStatus {
    ROGUE_DIARY_AVATAR_DISABLE_NONE = 0;
    ROGUE_DIARY_AVATAR_DISABLE_DEATH = 1;
    ROGUE_DIARY_AVATAR_DISABLE_TIRED = 2;
    ROGUE_DIARY_AVATAR_DISABLE_DUPLICATED = 3;
}

enum RogueEliteCellDifficultyType {
    ROGUE_ELITE_NORMAL = 0;
    ROGUE_ELITE_HARD = 1;
}

enum SalesmanStatusType {
    SALESMAN_STATUS_NONE = 0;
    SALESMAN_STATUS_UNSTARTED = 1;
    SALESMAN_STATUS_STARTED = 2;
    SALESMAN_STATUS_DELIVERED = 3;
}

enum SalvageEscortStopReason {
    SALVAGE_ESCORT_STOP_NONE = 0;
    SALVAGE_ESCORT_STOP_SUCCESS = 1;
    SALVAGE_ESCORT_STOP_DUMP = 2;
    SALVAGE_ESCORT_STOP_TIME = 3;
    SALVAGE_ESCORT_STOP_INTERRUPT = 4;
    SALVAGE_ESCORT_STOP_LEAVE = 5;
    SALVAGE_ESCORT_STOP_FULL = 6;
}

enum SalvagePreventStopReason {
    SALVAGE_PREVENT_STOP_NONE = 0;
    SALVAGE_PREVENT_STOP_SUCCESS = 1;
    SALVAGE_PREVENT_STOP_ARRIVAL = 2;
    SALVAGE_PREVENT_STOP_INTERRUPT = 3;
    SALVAGE_PREVENT_STOP_LEAVE = 4;
    SALVAGE_PREVENT_STOP_FULL = 5;
    SALVAGE_PREVENT_STOP_AWAY = 6;
}

    enum PlaySoundType {
        PLAY_SOUND_NONE = 0;
        PLAY_SOUND_START = 1;
        PLAY_SOUND_STOP = 2;
    }

enum SealBattleType {
    SEAL_BATTLE_KEEP_ALIVE = 0;
    SEAL_BATTLE_KILL_MONSTER = 1;
    SEAL_BATTLE_ENERGY_CHARGE = 2;
}

    enum ServerBuffChangeType {
        ADD_SERVER_BUFF = 0;
        DEL_SERVER_BUFF = 1;
    }

enum ServerLogLevel {
    LOG_LEVEL_NONE = 0;
    LOG_LEVEL_DEBUG = 1;
    LOG_LEVEL_INFO = 2;
    LOG_LEVEL_WARNING = 3;
    LOG_LEVEL_ERROR = 4;
}

enum ServerLogType {
    SERVER_LOG_NONE = 0;
    SERVER_LOG_ABILITY = 1;
    SERVER_LOG_LEVEL = 2;
    SERVER_LOG_ENTITY = 3;
    SERVER_LOG_LUA = 4;
}

    enum UpdateType {
        INVALUE = 0;
        ADD = 1;
        SET = 2;
    }

enum ShapeType {
    OBSTACLE_SHAPE_CAPSULE = 0;
    OBSTACLE_SHAPE_BOX = 1;
}

enum StoreType {
    STORE_NONE = 0;
    STORE_PACK = 1;
    STORE_DEPOT = 2;
}

enum SvrMsgId {
    MSG_UNKNOWN = 0;
    MSG_BLOCK_REFRESH_COUNTDOWN = 1;
    MSG_AVATAR_REVIVE_BY_STATUE = 2;
    MSG_DAILY_TASK_REWARD_MAX_NUM = 3;
    MSG_ROUTINE_TYPE_NOT_OPEN = 4;
    MSG_ROUTINE_TYPE_REWARD_MAX_NUM = 5;
    MSG_MECHANICUS_COIN_LIMIT = 6;
}

    enum ShapeType {
        OBSTACLE_SHAPE_CAPSULE = 0;
        OBSTACLE_SHAPE_BOX = 1;
    }

    enum OptionType {
        OPTION_NONE = 0;
        OPTION_NORMAL = 1;
    }

    enum OILPBFMHGMF {
        OILPBFMHGMF_CLASSIC = 0;
        OILPBFMHGMF_TENDENCY = 1;
        OILPBFMHGMF_ADAPTIVE = 2;
        OILPBFMHGMF_INFLECTION = 3;
    }

    enum EHFBKPBIGHA {
        EHFBKPBIGHA_ALL = 0;
        EHFBKPBIGHA_AIR = 1;
        EHFBKPBIGHA_WATER = 2;
    }

    enum PathStatusType {
        STATUS_FAIL = 0;
        STATUS_SUCC = 1;
        STATUS_PARTIAL = 2;
    }

enum TransmitReason {
    TRANSMIT_NONE = 0;
    TRANSMIT_QUEST = 1;
}

enum TryCustomDungeonType {
    TRY_CUSTOM_DUNGEON_NONE = 0;
    TRY_CUSTOM_DUNGEON_ROOM = 1;
    TRY_CUSTOM_DUNGEON_ALL = 2;
    TRY_CUSTOM_DUNGEON_OFFICIAL_PLAY = 3;
}

enum UgcType {
    UGC_TYPE_NONE = 0;
    UGC_TYPE_MUSIC_GAME = 1;
}

    enum OpType {
        OP_NONE = 0;
        OP_ACTIVATE = 1;
        OP_DEACTIVATE = 2;
    }

enum VehicleInteractType {
    VEHICLE_INTERACT_NONE = 0;
    VEHICLE_INTERACT_IN = 1;
    VEHICLE_INTERACT_OUT = 2;
}

enum VisionType {
    VISION_NONE = 0;
    VISION_MEET = 1;
    VISION_REBORN = 2;
    VISION_REPLACE = 3;
    VISION_WAYPOINT_REBORN = 4;
    VISION_MISS = 5;
    VISION_DIE = 6;
    VISION_GATHER_ESCAPE = 7;
    VISION_REFRESH = 8;
    VISION_TRANSPORT = 9;
    VISION_REPLACE_DIE = 10;
    VISION_REPLACE_NO_NOTIFY = 11;
    VISION_BORN = 12;
    VISION_PICKUP = 13;
    VISION_REMOVE = 14;
    VISION_CHANGE_COSTUME = 15;
    VISION_FISH_REFRESH = 16;
    VISION_FISH_BIG_SHOCK = 17;
    VISION_FISH_QTE_SUCC = 18;
    VISION_CAPTURE_DISAPPEAR = 19;
}

enum WidgetCreatorOpType {
    WIDGET_CREATOR_TYPE_NONE = 0;
    WIDGET_CREATOR_TYPE_RETRACT = 1;
    WIDGET_CREATOR_TYPE_RETRACT_AND_CREATE = 2;
}

enum WidgetSlotOp {
    WIDGET_SLOT_OP_ATTACH = 0;
    WIDGET_SLOT_OP_DETACH = 1;
}

enum WidgetSlotTag {
    WIDGET_SLOT_QUICK_USE = 0;
    WIDGET_SLOT_ATTACH_AVATAR = 1;
}

enum WIDGET_EXTRA_CD_TYPE {
    WIDGET_EXTRA_CD_TYPE_NONE = 0;
    WIDGET_EXTRA_CD_TYPE_E_SKILL_SHARED = 1;
}

enum WindFieldDungeonFailReason {
    WIND_FIELD_DUNGEON_FAIL_NONE = 0;
    WIND_FIELD_DUNGEON_FAIL_CANCEL = 1;
    WIND_FIELD_DUNGEON_FAIL_TIMEOUT = 2;
    WIND_FIELD_DUNGEON_FAIL_ALL_AVATAR_DIE = 3;
    WIND_FIELD_DUNGEON_FAIL_LUA_INTERRUPT = 4;
}